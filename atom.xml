<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.damon8.cn/"/>
  <updated>2020-11-04T08:45:24.207Z</updated>
  <id>http://www.damon8.cn/</id>
  
  <author>
    <name>Damon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>云产品年中大优惠</title>
    <link href="http://www.damon8.cn/2021/08/19/popularize-02/"/>
    <id>http://www.damon8.cn/2021/08/19/popularize-02/</id>
    <published>2021-08-19T10:05:26.000Z</published>
    <updated>2020-11-04T08:45:24.207Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">阿里云产品大促：<a class="nav-item-link" target="_blank" href="https://www.aliyun.com/minisite/goods?userCode=cdnpht6s" style="text-decoration: none" title="InfoQ">立即领取吧！</a></p><br><p>专属折扣码：</p><img src="/images/popularize/aliyun.png" style="display: block; margin: 0 auto; max-width: 100%;"><br data-tool="mdnice编辑器"><p>=============================================================================================================================</p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">腾讯云新客专属福利：<a class="nav-item-link" target="_blank" href="https://url.cn/7JAnmBmX" style="text-decoration: none" title="InfoQ">立即秒杀吧！</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">腾讯云十周年大促：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/act/cps/redirect?redirect=33567&cps_key=c140c92d2bde7476bad935dc8ea0ef41&from=activity" style="text-decoration: none" title="InfoQ">立即秒杀吧！</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">腾讯云服务器全球购：<a class="nav-item-link" target="_blank" href="https://url.cn/huMTG8Sc" style="text-decoration: none" title="InfoQ">立即抢购吧！</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">腾讯企业上云特惠活动：<a class="nav-item-link" target="_blank" href="https://url.cn/Vx78pocV" style="text-decoration: none" title="InfoQ">立即抢购吧！</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">腾讯云产品三折：<a class="nav-item-link" target="_blank" href="https://url.cn/vzVRpgHO" style="text-decoration: none" title="InfoQ">立即抢购吧！</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">腾讯服务器X实时音视频 联合大促：<a class="nav-item-link" target="_blank" href="https://url.cn/TpMozc1X" style="text-decoration: none" title="InfoQ">立即抢购吧！</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">腾讯云服务器购买页：<a class="nav-item-link" target="_blank" href="https://url.cn/FH9kStEc" style="text-decoration: none" title="InfoQ">立即抢购吧！</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">腾讯云数据库购买页：<a class="nav-item-link" target="_blank" href="https://url.cn/LyWcueXJ" style="text-decoration: none" title="InfoQ">立即抢购吧！</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">腾讯云新客专属福利：<a class="nav-item-link" target="_blank" href="https://url.cn/RMo8TtHA" style="text-decoration: none" title="InfoQ">立即抢购吧！</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">腾讯云限时秒杀活动：<a class="nav-item-link" target="_blank" href="https://url.cn/Npc7v6ae" style="text-decoration: none" title="InfoQ">立即抢购吧！</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">腾讯云数据库Redis：<a class="nav-item-link" target="_blank" href="https://url.cn/mRkH6Kem" style="text-decoration: none" title="InfoQ">立即抢购吧！</a></p><br><p>=============================================================================================================================</p><br><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">华为云新客专属福利：<a class="nav-item-link" target="_blank" href="https://account.huaweicloud.com/obmgr/invitation/invitation.html?bpName=000000010000000263EE620C0306EC55CA228C7F03DCE166723D7253C2DEA099D34C69DD0FECCE13692F65A613D7DEAFF4BEDA506668EFE88D57BC5DEDD5EA7D1DCC557E55B653A1&inviteCode=00000001000000020DDF706C9C17CC9385769E6F76491B4B2663ACCDCE6E162A8B68F6FBD5ECB0B9&bindType=1&isDefault=1" style="text-decoration: none" title="InfoQ">立即注册吧！</a></p><br><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>monitor-pod-state-metrics</title>
    <link href="http://www.damon8.cn/2020/11/04/monitor-pod-state-metrics/"/>
    <id>http://www.damon8.cn/2020/11/04/monitor-pod-state-metrics/</id>
    <published>2020-11-04T08:28:57.000Z</published>
    <updated>2020-11-04T09:14:31.344Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天主要分享下，在 k8s 集群下，微服务的各种状态指标情况的监控，我们都知道Prometheus是做数据监控的，但说白点，其独特格式的数据，其实都是靠一些源来的，那么这些源有哪些呢？已经有了cadvisor、heapster、metric-server，几乎容器运行的所有指标都能拿到，但是下面这种情况却无能为力：</p><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">我调度了多少个replicas？现在可用的有几个？</span><br><span class="line">多少个Pod是running&#x2F;stopped&#x2F;terminated状态？</span><br><span class="line">Pod重启了多少次？</span><br><span class="line">我有多少job在运行中</span><br></pre></td></tr></table></figure><br><p>而这些则是 kube-state-metrics 提供的内容，它基于client-go开发，轮询Kubernetes API，并将Kubernetes的结构化信息转换为metrics。kube-state-metrics是kubernetes开源的一个插件。</p><br><p>废话不多说，直接上教程。。。</p><h3 id="部署教程"><a href="#部署教程" class="headerlink" title="部署教程"></a>部署教程</h3><h5 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h5><ol><li>在官网 <a class="nav-item-link" target="_blank" href="https://github.com/kubernetes/kube-state-metrics" style="text-decoration: none" title="">kube-state-metrics</a> 下载相应的源码以及部署脚本，本次使用release1.9.7，即v1.9.7版本的 kube-state-metrics</li></ol><br><ol start="2"><li>执行 cd /kube-state-metrics/examples/standard，可以看到几个文件：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cluster-role-binding.yaml</span><br><span class="line">cluster-role.yaml</span><br><span class="line">deployment.yaml</span><br><span class="line">prometheus-configmap.yaml</span><br><span class="line">service-account.yaml</span><br><span class="line">service.yaml</span><br></pre></td></tr></table></figure><br><p>如果Prometheus已经部署，且部署在kube-system空间下，则源码中的namespace不需更改，否则可自定义为monitoring。</p><h5 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h5><br><ol><li>首先修改 service.yaml</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    prometheus.io&#x2F;scrape: &quot;true&quot;</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io&#x2F;name: kube-state-metrics</span><br><span class="line">    app.kubernetes.io&#x2F;version: v1.9.7</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 8080</span><br><span class="line">    targetPort: http-metrics</span><br><span class="line">  - name: telemetry</span><br><span class="line">    port: 8081</span><br><span class="line">    targetPort: telemetry</span><br><span class="line">  selector:</span><br><span class="line">    app.kubernetes.io&#x2F;name: kube-state-metrics</span><br></pre></td></tr></table></figure><br><p>很简单，增加了注解方便后面使用</p><br><h3 id="坑：源码中的角色授权绑定的是其写的kind为ClusterRole的资源，但后来发现部署kube-state-metrics服务时，其无法成功访问k8s的api-server，故需要修改，弃用其ClusterRole，使用k8s系统最高权限cluster-admin。"><a href="#坑：源码中的角色授权绑定的是其写的kind为ClusterRole的资源，但后来发现部署kube-state-metrics服务时，其无法成功访问k8s的api-server，故需要修改，弃用其ClusterRole，使用k8s系统最高权限cluster-admin。" class="headerlink" title="坑：源码中的角色授权绑定的是其写的kind为ClusterRole的资源，但后来发现部署kube-state-metrics服务时，其无法成功访问k8s的api-server，故需要修改，弃用其ClusterRole，使用k8s系统最高权限cluster-admin。"></a>坑：源码中的角色授权绑定的是其写的kind为ClusterRole的资源，但后来发现部署kube-state-metrics服务时，其无法成功访问k8s的api-server，故需要修改，弃用其ClusterRole，使用k8s系统最高权限cluster-admin。</h3><br><ol start="2"><li>更改访问权限</li></ol><br><p>vi cluster-role-binding.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: rbac.authorization.k8s.io&#x2F;v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app.kubernetes.io&#x2F;name: kube-state-metrics</span><br><span class="line">    app.kubernetes.io&#x2F;version: v1.9.7</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin #kube-state-metrics</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">  namespace: kube-system</span><br></pre></td></tr></table></figure><br><h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;kube-state-metrics&#x2F;examples&#x2F;standard</span><br><span class="line">kubectl create -f .</span><br></pre></td></tr></table></figure><br><p>此时还需要更新Prometheus的挂载的configMap，因为前面说了只抓取带有prometheus.io/scrape: “true”注解的endpoint</p><br><p>vi prometheus-configmap.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-config</span><br><span class="line">  namespace: kube-system</span><br><span class="line">data:</span><br><span class="line">  prometheus.yaml: |</span><br><span class="line">    global:</span><br><span class="line">      scrape_interval:     15s</span><br><span class="line">      evaluation_interval: 15s</span><br><span class="line">    scrape_configs:</span><br><span class="line">    - job_name: &#39;kubernetes-apiservers&#39;</span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: endpoints</span><br><span class="line">      scheme: https</span><br><span class="line">      tls_config:</span><br><span class="line">        ca_file: &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount&#x2F;ca.crt</span><br><span class="line">      bearer_token_file: &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount&#x2F;token</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]</span><br><span class="line">        action: keep</span><br><span class="line">        regex: default;kubernetes;https</span><br><span class="line"></span><br><span class="line">    - job_name: &#39;kubernetes-nodes&#39;</span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: node</span><br><span class="line">      scheme: https</span><br><span class="line">      tls_config:</span><br><span class="line">        ca_file: &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount&#x2F;ca.crt</span><br><span class="line">      bearer_token_file: &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount&#x2F;token</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_node_label_(.+)</span><br><span class="line">      - target_label: __address__</span><br><span class="line">        replacement: kubernetes.default.svc:443</span><br><span class="line">      - source_labels: [__meta_kubernetes_node_name]</span><br><span class="line">        regex: (.+)</span><br><span class="line">        target_label: __metrics_path__</span><br><span class="line">        replacement: &#x2F;api&#x2F;v1&#x2F;nodes&#x2F;$&#123;1&#125;&#x2F;proxy&#x2F;metrics</span><br><span class="line"></span><br><span class="line">    - job_name: &#39;kubernetes-cadvisor&#39;</span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: node</span><br><span class="line">      scheme: https</span><br><span class="line">      tls_config:</span><br><span class="line">        ca_file: &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount&#x2F;ca.crt</span><br><span class="line">      bearer_token_file: &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount&#x2F;token</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_node_label_(.+)</span><br><span class="line">      - target_label: __address__</span><br><span class="line">        replacement: kubernetes.default.svc:443</span><br><span class="line">      - source_labels: [__meta_kubernetes_node_name]</span><br><span class="line">        regex: (.+)</span><br><span class="line">        target_label: __metrics_path__</span><br><span class="line">        replacement: &#x2F;api&#x2F;v1&#x2F;nodes&#x2F;$&#123;1&#125;&#x2F;proxy&#x2F;metrics&#x2F;cadvisor</span><br><span class="line"></span><br><span class="line">    - job_name: &#39;kubernetes-service-endpoints&#39;</span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: endpoints</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]</span><br><span class="line">        action: keep</span><br><span class="line">        regex: true</span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_service_label_(.+)</span><br><span class="line">      - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: kubernetes_namespace</span><br><span class="line">      - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: service_name</span><br><span class="line"></span><br><span class="line">    - job_name: &#39;kubernetes-services&#39;</span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: service</span><br><span class="line">      metrics_path: &#x2F;probe</span><br><span class="line">      params:</span><br><span class="line">        module: [http_2xx]</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]</span><br><span class="line">        action: keep</span><br><span class="line">        regex: true</span><br><span class="line">      - source_labels: [__address__]</span><br><span class="line">        target_label: __param_target</span><br><span class="line">      - target_label: __address__</span><br><span class="line">        replacement: blackbox-exporter.example.com:9115</span><br><span class="line">      - source_labels: [__param_target]</span><br><span class="line">        target_label: instance</span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_service_label_(.+)</span><br><span class="line">      - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">        target_label: kubernetes_namespace</span><br><span class="line">      - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">        target_label: kubernetes_name</span><br><span class="line"></span><br><span class="line">    - job_name: &#39;kubernetes-ingresses&#39;</span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: ingress</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - source_labels: [__meta_kubernetes_ingress_annotation_prometheus_io_probe]</span><br><span class="line">        action: keep</span><br><span class="line">        regex: true</span><br><span class="line">      - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_path]</span><br><span class="line">        regex: (.+);(.+);(.+)</span><br><span class="line">        replacement: $&#123;1&#125;:&#x2F;&#x2F;$&#123;2&#125;$&#123;3&#125;</span><br><span class="line">        target_label: __param_target</span><br><span class="line">      - target_label: __address__</span><br><span class="line">        replacement: blackbox-exporter.example.com:9115</span><br><span class="line">      - source_labels: [__param_target]</span><br><span class="line">        target_label: instance</span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_ingress_label_(.+)</span><br><span class="line">      - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">        target_label: kubernetes_namespace</span><br><span class="line">      - source_labels: [__meta_kubernetes_ingress_name]</span><br><span class="line">        target_label: kubernetes_name</span><br><span class="line"></span><br><span class="line">    - job_name: &#39;kubernetes-pods&#39;</span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: pod</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]</span><br><span class="line">        action: keep</span><br><span class="line">        regex: true</span><br><span class="line">      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: __metrics_path__</span><br><span class="line">        regex: (.+)</span><br><span class="line">      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]</span><br><span class="line">        action: replace</span><br><span class="line">        regex: ([^:]+)(?::\d+)?;(\d+)</span><br><span class="line">        replacement: $1:$2</span><br><span class="line">        target_label: __address__</span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_pod_label_(.+)</span><br><span class="line">      - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: kubernetes_namespace</span><br><span class="line">      - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: kubernetes_pod_name</span><br></pre></td></tr></table></figure><br><p>更新 configmap 后，需要重启 Prometheus 使其生效，如果没部署，则创建 configmap 后执行脚本部署即可。</p><br><h4 id="导入模板"><a href="#导入模板" class="headerlink" title="导入模板"></a>导入模板</h4><br><p>最后从 grafana.com 下载 state-metrics 监控模版<a class="nav-item-link" target="_blank" href="https://grafana.com/grafana/dashboards/8588" style="text-decoration: none" title="">导入模板</a></p><br><p>导入到 grafana 后，即可看到效果咯：</p><br><p><img src="https://static001.geekbang.org/infoq/6c/6c0bfdf90d8f630821cc3fc4e8061823.png" alt=""></p><p><img src="https://static001.geekbang.org/infoq/88/88966e1cde86e1916ac6f91ff97e57a4.png" alt=""></p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>如何利用k8s拉取私有仓库镜像</title>
    <link href="http://www.damon8.cn/2020/08/19/k8s-image/"/>
    <id>http://www.damon8.cn/2020/08/19/k8s-image/</id>
    <published>2020-08-19T09:15:58.000Z</published>
    <updated>2020-11-04T08:41:13.599Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h3><p>最近实战时，发现一个很奇怪的问题，在通过 k8s 创建 pod，拉取镜像时，总是显示如下信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error syncing pod, skipping: failed to &quot;StartContainer&quot; for &quot;POD&quot; with ImagePullBackOff: &quot;Back-off pulling image ...&quot;</span><br></pre></td></tr></table></figure><p>该现象出现的原因可能是网络问题、docker 环境问题等。但如果访问的是一个公开的镜像仓库，在 pull image 的时候，不应该会提示：<strong>ImagePullBackOff</strong>，但如果访问的是私有仓库，那就有可能出现如下的错误：</p><br><p><img src="https://imgkr2.cn-bj.ufileos.com/2d2008d0-a535-49a2-95b8-3deff3a4c2fb.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&Signature=gM%252FEgz%252FM88CdUpokzdh2mFXIyCs%253D&Expires=1597914835" alt=""></p><br><p>这个错误出现的原因，刚才说了，有可能的网络问题，也有可能是 docker 问题，但有时候，这些不能解决的情况下，可以采用下面三种方式来解决。</p><br><br><h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h3><hr><p>第一种方式，我们可以使用文件生成 secret，然后通过 k8s 中的 imagePullSecrets 来解决拉取镜像时的验证问题。具体方式如下：</p><h5 id="修改-etc-docker-daemon-json"><a href="#修改-etc-docker-daemon-json" class="headerlink" title="修改 /etc/docker/daemon.json"></a>修改 /etc/docker/daemon.json</h5><p>在 k8s 集群节点上，修改 docker 的 daemon.json 配置文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;registry-mirrors&quot;: [ &quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;],</span><br><span class="line">&quot;insecure-registries&quot;:[&quot;私有仓库服务地址&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在里面加上自己私有的仓库服务地址，然后重启 docker 服务，使其生效。</p><br><h5 id="生成-docker-config-json-文件"><a href="#生成-docker-config-json-文件" class="headerlink" title="生成 ~/.docker/config.json 文件"></a>生成 ~/.docker/config.json 文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login 私有服务地址</span><br></pre></td></tr></table></figure><p>在命令行输入上面的命令，回车后，会提示输入用户名和密码。输入正确信息后，这会生成一个 /root/.docker/config.json 文件。同时会提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Login Succeeded</span><br></pre></td></tr></table></figure><br><h5 id="生成-Secret-串"><a href="#生成-Secret-串" class="headerlink" title="生成 Secret 串"></a>生成 Secret 串</h5><p>根据上面生成的 ~/.docker/config.json 文件，我们可以生成一个密文秘钥：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">base64 -w 0 ~&#x2F;.docker&#x2F;config.json</span><br></pre></td></tr></table></figure><p>执行上面的命令后，会生成一个长串，即为我们所要的 Secret 串。</p><p>我们会在 source 下看见一个新的文件夹，_drafts，这个里面会装我们所有的草稿文件。</p><h5 id="创建-Secret"><a href="#创建-Secret" class="headerlink" title="创建 Secret"></a>创建 Secret</h5><p>通过 k8s 我们可以生成一个 Secret 资源：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: docker_reg_secret</span><br><span class="line">  namespace: default</span><br><span class="line">data:</span><br><span class="line">    .dockerconfigjson: ewoJImF1dGhjNWdlpHVnVaenB5Wld4aFFFeFdUa2xCVGtBeU1ERTMiCgkJfASEkidXJlZy5rOHMueXVud2VpLnJlbGEubWUiOiB7CgkJCSJhdXRoIjogIloyRnZaM1Z2WkdWdVSrsaaehoUUV4V1RrbEJUa0F5TURFMyIKCQl9Cgl9LAoJIkh0dHBIZWFkZXJzIjogewoJSetcaFTssZW50IjogIkRvY2tlci1DbGllbnQvMTguMDYuMS1jZSAobGludXgpIgoJfQp9</span><br><span class="line">type: kubernetes.io&#x2F;dockerconfigjson</span><br></pre></td></tr></table></figure><p>执行这个资源的配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f secret.yml</span><br></pre></td></tr></table></figure><h5 id="在服务配置加上依赖"><a href="#在服务配置加上依赖" class="headerlink" title="在服务配置加上依赖"></a>在服务配置加上依赖</h5><p>最后，可以在 我们的服务 yml 文件中加上拉取镜像时的依赖 secret，部分代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">imagePullSecrets:</span><br><span class="line">- name: docker_reg_secret</span><br></pre></td></tr></table></figure><br><h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><hr><p>第二种方式，我们可以直接使用 docker 的用户信息来生成 secret：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret docker-registry docker_reg_secret --docker-server&#x3D;XXX --docker-username&#x3D;XXX --docker-password&#x3D;XXX</span><br></pre></td></tr></table></figure><p>参数含义：</p><p>docker_reg_secret: 指定密钥的键名称, 自定义</p><p>docker-server: 指定 docker 仓库地址</p><p>docker-username: 指定 docker 仓库账号</p><p>docker-password: 指定 docker 仓库密码</p><br><p>创建完 Secret 资源后，其他的如方式一，这就简单了。</p><br><h3 id="方式三"><a href="#方式三" class="headerlink" title="方式三"></a>方式三</h3><hr><p>第三种方式所使用的是最简单的办法，即我们利用 k8s 的拉取镜像的策略来处理，主要有如下三种：</p><p>Always：每次创建时都会拉取镜像</p><p>IfNotPresent：宿主机不存在时拉取镜像</p><p>Never： 从不主动拉取镜像</p><p>使用 IfNotPresent、Never 策略来处理。</p><br><p>以上三种方式，我比较推荐第二种，最中意第二种，因为假如密码修改了，就更新一下 secret 就好了，k8s node 不需要改动。而第一种需要改动，第三种会导致镜像丢失，毕竟只有本地存在。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>个站建立基础教程</title>
    <link href="http://www.damon8.cn/2020/08/16/new-web/"/>
    <id>http://www.damon8.cn/2020/08/16/new-web/</id>
    <published>2020-08-16T10:12:17.000Z</published>
    <updated>2020-11-04T08:44:55.007Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="什么是-Hexo"><a href="#什么是-Hexo" class="headerlink" title="什么是 Hexo"></a>什么是 Hexo</h3><p>Hexo 是一个静态网站生成器，基于 Hexo 框架，可以生成自己想要的网站风格，以及网站内容，样式自己可以定义。</p><br><br><h3 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h3><hr><h5 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">系统： win7 +</span><br><span class="line"></span><br><span class="line">nodejs：http:&#x2F;&#x2F;nodejs.cn&#x2F;download&#x2F;</span><br><span class="line"></span><br><span class="line">git-client：https:&#x2F;&#x2F;git-scm.com&#x2F;download&#x2F;</span><br></pre></td></tr></table></figure><h5 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h5><p>准备好以上环境后，就可以准备安装 Hexo 基本框架：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#安装基本框架</span><br><span class="line">npm install -g hexo</span><br><span class="line"></span><br><span class="line">#初始化hexo框架</span><br><span class="line">hexo init</span><br><span class="line"></span><br><span class="line">#安装所需要的组件</span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line">#编译生成静态页面</span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">#启动服务</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><br><p><img src="https://imgkr2.cn-bj.ufileos.com/8ce0860b-7223-40f9-a172-4a2085ffbc83.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&Signature=Uzg3t%252BYhHoEWDOY0cOgdK9NFmG8%253D&Expires=1597731520" alt=""></p><br><p>这是一个基本的 Hexo 原型，当然，Hexo 有许多 themes，官方地址：<code>https://hexo.io/themes/index.html</code>，本文实战用的是Ayer。可以先从github官网拉取相关themes的基础源码。</p><br><p>拉取源码后，在其根目录下，进行一些基本的安装组件操作：</p><h5 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-jade@0.3.0 --save</span><br><span class="line"></span><br><span class="line">npm install hexo-generator-json-content@2.2.0 --save</span><br><span class="line"></span><br><span class="line">npm install hexo-renderer-stylus --save</span><br><span class="line"></span><br><span class="line">#用于搜索</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br><span class="line"></span><br><span class="line">#用于生成RSS订阅</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line"></span><br><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line"></span><br><span class="line">#用于文章置顶</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br><span class="line"></span><br><span class="line">#用于文章加密，具体参考 https:&#x2F;&#x2F;github.com&#x2F;MikeCoder&#x2F;hexo-blog-encrypt&#x2F;blob&#x2F;master&#x2F;ReadMe.zh.md</span><br><span class="line">npm install --save hexo-blog-encrypt</span><br><span class="line"></span><br><span class="line">#音乐播放器</span><br><span class="line">参考：https:&#x2F;&#x2F;github.com&#x2F;MoePlayer&#x2F;hexo-tag-aplayer&#x2F;blob&#x2F;master&#x2F;docs&#x2F;README-zh_cn.md</span><br></pre></td></tr></table></figure><br><h5 id="新建草稿文章"><a href="#新建草稿文章" class="headerlink" title="新建草稿文章"></a>新建草稿文章</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new draft b</span><br></pre></td></tr></table></figure><p>我们会在 source 下看见一个新的文件夹，_drafts，这个里面会装我们所有的草稿文件。</p><h5 id="预览草稿"><a href="#预览草稿" class="headerlink" title="预览草稿"></a>预览草稿</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server --draft</span><br></pre></td></tr></table></figure><h5 id="发布草稿"><a href="#发布草稿" class="headerlink" title="发布草稿"></a>发布草稿</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish b</span><br></pre></td></tr></table></figure><h6 id="新建正式文章"><a href="#新建正式文章" class="headerlink" title="新建正式文章"></a>新建正式文章</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new a</span><br></pre></td></tr></table></figure><p>在 hexo 目录下的 source/_post 下生成 a.md</p><p>打开 a.md，可以编辑文章</p><h5 id="生成页面文件"><a href="#生成页面文件" class="headerlink" title="生成页面文件"></a>生成页面文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><h5 id="生成页面"><a href="#生成页面" class="headerlink" title="生成页面"></a>生成页面</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure><p>这样直接在 source 下创建 about 目录，下面也会生成一个 index.md</p><br><h5 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><br><p>以上关于 Hexo 的基本命令以及对应的功能操作介绍完了。</p><br><p>我们来看看我的网站吧：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>。</p><p>主页展示的是个人文章，这些对于 hexo 来说就是一个个页面：</p><p><img src="https://imgkr2.cn-bj.ufileos.com/c2f60c79-6a28-4eae-a98d-2f959f6ca17a.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&Signature=v%252FLzXM5TA6kRjxY7rQ7i9jCVT7I%253D&Expires=1597732710" alt=""></p><br><p>在主页可以看到左侧的栏目，这些就是 hexo 的页面，比如：_关于我_：</p><p><img src="https://imgkr2.cn-bj.ufileos.com/019546b2-76c8-4db0-9ff9-6dc60ae89605.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&Signature=rllJ%252BWHnNYULgol2oTNl%252FE3rQk8%253D&Expires=1597732925" alt=""></p><br><p>由于上面我们还加入了搜索插件，所以，我们可以进行全文搜索：</p><p><img src="https://imgkr2.cn-bj.ufileos.com/96e55f63-3f42-4c0a-bff4-67c97cddb7ba.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&Signature=kqpAkyg1uyyWfudhVJoEPRZ%252B92I%253D&Expires=1597733023" alt=""></p><br><p>当然，还有一些订阅模式，等等功能。</p><br><p>hexo 不管是页面也好，还是文章也好，都是通过 md 格式文件来生成静态页面的，所以看起来很简单。</p><br><p>其次，比较重要的是有一个文件中，可以配置各种开关或格式控制：</p><p><img src="https://imgkr2.cn-bj.ufileos.com/4b1761ae-3571-44e7-b8d8-3e29cbc9071a.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&Signature=cLeIZneuC95Bs2RUUkNcYxf%252Fo2k%253D&Expires=1597733273" alt=""></p><br><p>这个里面可以根据官网配置自己想要的功能，包括打赏：</p><p><img src="https://imgkr2.cn-bj.ufileos.com/58396080-7242-4fc9-a52c-0307c6e3ac65.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&Signature=15KZAc9RsA8J51kUnJAu92zPDoI%253D&Expires=1597733460" alt=""></p><p>到目前为止，基于 hexo 生成静态网站的主体就到此结束啦，欢迎大家关注个站哟：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>如何保证NFS文件锁的一致性</title>
    <link href="http://www.damon8.cn/2020/08/06/nfs-01/"/>
    <id>http://www.damon8.cn/2020/08/06/nfs-01/</id>
    <published>2020-08-06T03:18:42.000Z</published>
    <updated>2020-11-04T08:45:02.847Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><br><p>在存储系统中， NFS（Network File System，即网络文件系统）是一个重要的概念，已成为兼容POSIX语义的分布式文件系统的基础。它允许在多个主机之间共享公共文件系统，并提供数据共享的优势，从而最小化所需的存储空间。本文将通过分析NFS文件锁状态视图一致性的原理，帮助大家理解NFS的一致性设计思路。</p><br><h3 id="文件锁"><a href="#文件锁" class="headerlink" title="文件锁"></a>文件锁</h3><br><p>文件锁是文件系统的最基本特性之一，应用程序借助文件锁可以控制其他应用对文件的并发访问。NFS作为类UNIX系统的标准网络文件系统，在发展过程中逐步地原生地支持了文件锁(从NFSv4开始)。NFS从上个世界80年代诞生至今，共发布了3个版本：NFSv2、NFSv3、NFSv4。</p><p>NFSv4最大的变化是有“状态”了。某些操作需要服务端维持相关状态，如文件锁，例如客户端申请了文件锁，服务端就需要维护该文件锁的状态，否则和其他客户端冲突的访问就无法检测。如果是NFSv3就需要NLM协助才能实现文件锁功能，但是有的时候两者配合不够协调就会容易出错。而NFSv4设计成了一种有状态的协议，自身就可以实现文件锁功能，也就不需要NLM协议了。</p><br><h3 id="应用接口"><a href="#应用接口" class="headerlink" title="应用接口"></a>应用接口</h3><br><p>应用程序可以通过 fcntl() 或 flock() 系统调用管理NFS文件锁，下面是NAS使用NFSv4挂载时获取文件锁的调用过程：</p><br><p><img src="https://imgkr2.cn-bj.ufileos.com/0d2f206b-1e84-477d-b6ab-20016237f673.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&Signature=YWw%252FvOpspatHW%252B%252BjvQLznu6Dpi0%253D&Expires=1596770211" alt=""></p><p>从上图调用栈容易看出，NFS文件锁实现逻辑基本复用了VFS层设计和数据结构，在通过RPC从Server成功获取文件锁后，调用 locks_lock_inode_wait() 函数将获得的文件锁交给VFS层管理，关于VFS层文件锁设计的相关资料比较多，在此就不再赘述了。</p><br><h3 id="EOS原理"><a href="#EOS原理" class="headerlink" title="EOS原理"></a>EOS原理</h3><br><p>文件锁是典型的非幂等操作，文件锁操作的重试和Failover会导致文件锁状态视图在客户端和服务端间的不一致。NFSv4借助SeqId机制设计了最多执行一次的机制，具体方法如下：</p><p>针对每个open/lock状态，Client和Server同时独立维护seqid，Client在发起会引起状态变化的操作时(open/close/lock/unlock/release_lockowner)会将seqid加1，并作为参数发送给Server，假定Client发送的seqid为R，Server维护的seqid为L，则：</p><p>若R == L +1，表示合法请求，正常处理之。<br>若R == L，表示重试请求，Server将缓存的reply返回即可。<br>其他情况均为非法请求，决绝访问。<br>根据上述规则，Server可判断操作是否为正常、重试或非法请求。</p><p>该方法能够保证每个文件锁操作在服务端最多执行一次，解决了RPC重试带来的重复执行的问题，但是仅靠这一点是不够的。比如LOCK操作发送后调用线程被信号中断，此后服务端又成功接受并执行了该LOCK操作，这样服务端就记录了客户端持有了锁，但客户端中却因为中断而没有维护这把锁，于是就造成了客户端和服务端间的锁状态视图不一致。因此，客户端还需要配合处理异常场景，最终才能够保证文件锁视图一致性。</p><br><h3 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h3><p>由上一节的分析可知，客户端需要配合处理异常场景才能够保证文件视图一致性，那么客户端设计者主要做了哪些配合的设计呢？目前客户端主要从SunRPC和NFS协议实现两个维度相互配合解决该问题，下面分别介绍这两个维度的设计如何保证文件锁状态视图一致性。</p><br><h3 id="SunRPC设计"><a href="#SunRPC设计" class="headerlink" title="SunRPC设计"></a>SunRPC设计</h3><br><p>SunRPC是Sun公司专门为远程过程调用设计的网络通讯协议，这里从保障文件锁视图一致性的维度来了解一下SunRPC实现层面的设计理念：</p><p>（1）客户端使用int32_t类型的xid标识上层使用者发起的每个远程过程调用过程，每个远程过程调用的多次RPC重试使用相同的xid标识，这样就保障了多次RPC重试中任何一个返回都可以告知上层远程过程调用已经成功，保证了服务端执行远程过程调用执行耗时较长时也能拿到结果，这一点和传统的netty/mina/brpc等都需要每个RPC都要有独立的xid/packetid不同。</p><p>（2）服务端设计了DRC(duplicate request cache)缓存最近执行的RPC结果，接收到RPC时会首先通过xid检索DRC缓存，若命中则表明RPC为重试操作，直接返回缓存的结果即可，这在一定程度上规避了RPC重试带来的重复执行的问题。为了避免xid复用导致DRC缓存返回非预期的结果，开发者通过下述设计进一步有效地减少复用引起错误的概率：</p><p><code>客户端建立新链接时初始xid采用随机值。</code><br><code>服务端DRC会额外记录请求的校验信息，缓存命中时会同时校验这些信息。</code></p><p>（3）客户端允许在获得服务端响应前无限重试，保证调用者能够获得服务端确定性的执行结果，当然这样的策略会导致无响应时调用者会一直hang。</p><p>（4）NFS允许用户在挂载时通过soft/hard参数指定SunRPC的重试策略，其中soft模式禁止超时后重试，hard模式则持续重试。当用户使用soft模式挂载时NFS实现不保证客户端和服务端状态视图的一致性，在遇到远程过程调用返回超时要求应用程序配合状态的清理和恢复，比如关闭访问出错的文件等，然而实践中很少有应用程序会配合，所以一般情况下NAS用户都使用hard模式挂载。</p><p>总之，SunRPC要解决的核心问题之一是，远程过程调用执行时间是不可控的，协议设计者为此定制化设计，尽量避免非幂等操作RPC重试带来的副作用。</p><br><h4 id="信号中断"><a href="#信号中断" class="headerlink" title="信号中断"></a>信号中断</h4><br><p>应用程序等待远程过程调用结果时允许被信号中断。当发生信号中断时，由于没有得到远程过程调用的执行结果，所以客户端和服务端的状态很可能就不一致了，比如加锁操作在服务端已经成功执行，但客户端并不知道这个情况。这就要求客户端做额外的工作将状态和服务端恢复一致。下面简要分析获取文件锁被信号中断后的处理，来说明NFS协议实现层面的一致性设计。</p><p>通过获取NFSv4文件锁的过程可知，NFSv4获取文件锁最终会调用 _nfs4_do_setlk() 函数发起RPC操作，最终调用 nfs4_wait_for_completion_rpc_task() 等待，下面是相关代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">static int _nfs4_do_setlk(struct nfs4_state *state, int cmd, struct file_lock *fl, int recovery_type)</span><br><span class="line">&#123;</span><br><span class="line">  ......</span><br><span class="line">  task &#x3D; rpc_run_task(&amp;task_setup_data);</span><br><span class="line">  if (IS_ERR(task))</span><br><span class="line">      return PTR_ERR(task);</span><br><span class="line">  ret &#x3D; nfs4_wait_for_completion_rpc_task(task);</span><br><span class="line">  if (ret &#x3D;&#x3D; 0) &#123;</span><br><span class="line">      ret &#x3D; data-&gt;rpc_status;</span><br><span class="line">      if (ret)</span><br><span class="line">              nfs4_handle_setlk_error(data-&gt;server, data-&gt;lsp,</span><br><span class="line">                  data-&gt;arg.new_lock_owner, ret);</span><br><span class="line">      &#125; else</span><br><span class="line">          data-&gt;cancelled &#x3D; 1;</span><br><span class="line">  ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p>通过分析 nfs4_wait_for_completion_rpc_task() 实现可知，当ret &lt; 0时，表明获取锁过程被信号中断，并使用 struct nfs4_lockdata 的 cancelled 成员记录。继续查看rpc_task完成后释放时的回调函数 nfs4_lock_release()：</p><p><img src="https://imgkr2.cn-bj.ufileos.com/f4e546ef-79cd-4da7-855f-cf0def4045bf.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&Signature=G9dV0ov%252FzJtxHMHn2gbgrRcrTtw%253D&Expires=1596770219" alt=""></p><p>从上面红色框中的代码可知，nfs4_lock_release() 检测到存在信号中断时会调用 nfs4_do_unlck()函数尝试将可能成功获得文件锁释放掉，注意此时没有调用 nfs_free_seqid() 函数将持有的nfs_seqid释放掉，这是为了：</p><p>保证订正状态过程中不会有用户新发起的并发加锁或者释放锁操作，简化实现。<br>保证hard模式下UNLOCK操作只会在LOCK操作返回后才会发送，保障已经获得锁能够被释放掉。<br>客户端通过上面的方法能够有效地保证信号中断后客户端和服务端锁状态的最终一致性,但也是在损失一部分可用性为代价的。</p><br><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><br><p>文件锁是文件系统原生支持的基础特性，NAS作为共享的文件系统要面临客户端和服务端锁状态视图一致性的问题，NFSv4.0在一定程度上解决了这个问题，当然，技术前进的脚步不会停止，NFS的更新迭代也就不会停止，未来的NFS将会有更多的期待。</p><br><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><br><p>我们相信技术的力量，更相信拥有技术力量的人。我们期待存储的未来，更期待与你一起创造未来。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><br><code style="font-size: 20px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: red">特别声明 <br>原文作者：茶什i <br>本文原链：https://developer.aliyun.com/article/769594?spm=a2c6h.12873581.0.dArticle769594.37366446qrd1Wv&groupCode=alitech <br>本文转载如有侵权，请联系站长删除，谢谢 <br></code><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>电视剧 | 电影 | 影片 | 无广告</title>
    <link href="http://www.damon8.cn/2020/08/05/film-01/"/>
    <id>http://www.damon8.cn/2020/08/05/film-01/</id>
    <published>2020-08-05T08:55:58.000Z</published>
    <updated>2020-08-21T00:48:43.218Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style= "margin:0 auto;border: 1px; solid: #000;text-align: center"><h1><a class="nav-item-link" target="_blank" href="https://www.novipnoad.com/" style="text-decoration: none" title="">NO 视频</a></h1><h1><a class="nav-item-link" target="_blank" href="https://www.pianku.tv/" style="text-decoration: none" title="">片库</a></h1><h1><a class="nav-item-link" target="_blank" href="https://www.cupfox.com/" style="text-decoration: none" title="">茶杯狐</a></h1><h1><a class="nav-item-link" target="_blank" href="https://www.1080.cn" style="text-decoration: none" title="">蓝光高清网</a></h1></div><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>至三十而已的我</title>
    <link href="http://www.damon8.cn/2020/07/29/chitchat-01/"/>
    <id>http://www.damon8.cn/2020/07/29/chitchat-01/</id>
    <published>2020-07-29T00:44:53.000Z</published>
    <updated>2020-11-04T08:41:47.039Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><br><img src="/images/chat/chitchat1.gif" style="display: block; margin: 0 auto; max-width: 100%;"><br><br><p>今天浅谈一下个人的一些看法以及想法，如有雷同，纯属巧合。如有差异，可以当作一个思考。</p><br><p>在当前这个波涛汹涌的互联网时代，层出不穷的互联网产品一个接一个，如同现在刚毕业的大学生一样多。而中国的大学每年向社会输出那么多毕业生，又有不少是属于互联网IT行业的。作为一个互联网程序猿，如何在这大浪淘金的社会上，从程序猿，演变成研发经理，甚至项目总监或架构师。这是一个我们这些作为程序猿的，需要深刻思考的问题。</p><br><p>应用开发和研发相信大家都经常听到，某某公司招聘一名中级Java开发、高级Java研发或开发工程师等等。但，今天我所说的这两个名词的含义背后所包含的内涵绝不是一个名称，这可能包含着一个程序猿的职业生涯，甚至影响他一生的职业生涯。</p><br><p>应用开发，我所理解的，应该是从一个在大学就开始学习IT相关技术的大学生开始，就可以被称为开发者，或者叫初级开发工程师。这仅仅还只是他职业生涯的第一步。一个好的应用开发工程师，一开始肯定是学习别人的，例如学习大学的课本知识，学习众多网站上的课程，报各种培训班，等等。这一切都是一个应用开发者的职业生涯的开始。一个开发者，前期都是教科书式的编程。开发模式、逻辑思维、开发流程等，都是教科书般的感觉。这个过程可能是一年，也可能是两、三年。但一个有野心的程序猿，绝对是希望时间越短越好。因为一直教科书般的思维，会让一个程序猿的思想颓废，让其丧失自我能力，具有依赖其他的感觉。这样长此以往，没有了个人主见，没有了个人的程序设计风格以及变革理念，更不会有程序优化的逻辑思维。这样会直接影响个人的职业生涯规划。因为那是一个傻瓜式的编程，对自己来说，没有了灵魂编程，没有了主动优化程序、主动做系统设计的基本要求。这样的程序猿，注定是失败的。</p><br><p>也许一个程序猿的正确姿势，可能是一年到两年，是教科书般的思维模式去做开发。到了后面，三、四年以后，甚至也许两、三年之后，他开始尝试自己独到的思维方式来做开发，这个时候，我们不称为开发了。我们称为研发，叫研发工程师。任何一个产品需求，肯定都能被实现的。被实现的关键因素，不在于你的思维仅仅跟着产品需求走，而是在产品需求的基础上，有一个很好的延伸或扩展。这才将能推动一个产品的更好发展。一个程序猿，可能需要认知一点：做程序猿，并不是为了开发而开发。而是为了更好的开发而作研发。作为一个程序开发者，不能仅仅为了满足产品的一个需求，而只是教科书般的思维去写代码，实现代码逻辑从而达到产品的需求。而应该从需求中想到一些系统的设计，能不能有一个两全其美的办法来既能实现产品的需求，又能做到系统的较好设计。并不是说，产品需求是怎样，你就按部就班的那样去实现。不考虑任何系统的问题：性能、兼容性、用户体验质量、安全性等等。产品应该与研发是相辅相成的，而不应该是主动与被动的一个关系。这样的产品注定不能成为一个好的产品，更带不来好的商业运营模式，或者说客户。尤其是在这样的一个互联网产品泛滥的时代，如果都是如出一辙的、教科书般的，那如何吸引更多的客户呢？</p><br><p>从开发，到研发，也许只是一字之差。但背后可能需要付出很多的代价，有很多需要努力的地方。比如：如何让自己有独到的见解，独到的开发思维模式来设计系统，让其更好，更稳定。又比如：如何在产品与研发的思维不一致的情况下，去感染产品需求的变动来达到双赢的目的。只有产品与研发的双赢，才可能有机会赢得客户的认可或赞同。否则，即使你的需求都实现了，体验感极差，或者系统极不稳定，性能指标很差，等等，诸多都是一个很麻烦的事情。这样并不利于一个产品的更新迭代，不利于一个产品的生存与发展。</p><br><p>如今之下，我觉得不错的，这几年突飞猛进的几个产品，都是一个体系下：Byte Dance。旗下有这么几款产品：抖音视频、今日头条、西瓜视频。公司仅仅成立于2012年，2018年10月24日，字节跳动就Pre-IPO融资完成，投前估值达到750亿美元。一个新兴产业时代，为什么它能做这么大？成立也并没有多久，我想，这是一个企业老板该思考的问题，也是一个基层开发人员，或者称为研发人员该去了解这背后的故事。我感觉它的这么几个产品之所以可以这么成功，而且尤其抖音的带货、广告，以及头条的广告、小视频、推荐、本地化、娱乐微头条、文章、开直播等等，几乎集成了知乎、掘金、开源中国、哔哩哔哩等几个产品于一身。另外其产品西瓜视频更是绝：很多高清视频、电影、电视剧等免费看。企业的决策往往是一个方面，但更多的还是团队、个人，团队有目标，个人有调研、有想法，产品发布出来才会有特色，如果是千篇一律，还没有市场做的好，那这样的产品就没有竞争力，只能靠苦力来维持与客户的关系。以上仅仅个人看法或言论，如有雷同想法者，纯属巧合，如有不同，就当作是一个思考的问题。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Kubernetes 经典命令</title>
    <link href="http://www.damon8.cn/2020/07/27/k8s-02/"/>
    <id>http://www.damon8.cn/2020/07/27/k8s-02/</id>
    <published>2020-07-27T09:41:37.000Z</published>
    <updated>2020-11-04T08:44:05.167Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近大家想了解 Kubernetes 常见命令，今天它来了。</p><br><p>如果想玩玩单机版、集群版 k8s，可参考：<a class="nav-item-link" target="_blank" href="https://www.damon8.cn/2020/07/23/k8s/" title="k8s部署手册">k8s部署手册</a>，快速助力部署 k8s，还没毕业的都可以部署哟！</p><br><p>k8s 常用命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">​netstat -nlpt | grep 关键字: 查询相关的网络问题</span><br><span class="line">​</span><br><span class="line">systemctl status -l kubelet: 查看kubelet状态</span><br><span class="line">​</span><br><span class="line">systemctl restart kube-apiserver: 重启apiserver</span><br><span class="line">​</span><br><span class="line">kubelet --version: 查看k8s版本</span><br><span class="line">​</span><br><span class="line">history |grep 关键字: 查看相关操作历史</span><br><span class="line">​</span><br><span class="line">kubectl cluster-info: 查看集群信息 or kubectl cluster-info dump</span><br><span class="line">​</span><br><span class="line">kubectl -n kube-system get sa: 查看所有账号</span><br><span class="line">​</span><br><span class="line">kubectl get ep: 获取所有endpoints信息</span><br><span class="line">​</span><br><span class="line">kubectl get svc: 获取服务 -n 空间名称，指定命名空间</span><br><span class="line">​</span><br><span class="line">kubectl get pods --all-namespaces -o wide: 获取所有的pods</span><br><span class="line">​</span><br><span class="line">kubectl create -f *.yaml: 使用yaml文件创建pod，这个不可重复执行</span><br><span class="line">​</span><br><span class="line">kubectl apply -f *.yaml: 可重复执行</span><br><span class="line">​</span><br><span class="line">kubectl delete -f *.yaml: 使用yaml文件删除pod</span><br><span class="line">​</span><br><span class="line">kubectl logs POD_NAME -n 空间名称: 显示指定命名空间的pod的日志</span><br><span class="line">​</span><br><span class="line">kubectl get nodes: 获取集群所有节点信息</span><br><span class="line">​</span><br><span class="line">kubectl delete node ip: 删除节点</span><br><span class="line">​</span><br><span class="line">kubectl describe node ip: 显示节点信息</span><br><span class="line">​</span><br><span class="line">kubectl describe pod podName: 显示pod信息</span><br><span class="line">​</span><br><span class="line">kubectl describe ep kubernetes</span><br><span class="line">​</span><br><span class="line">kubectl describe svc kubernetes</span><br><span class="line">​</span><br><span class="line">kubectl get svc kubernetes</span><br><span class="line">​</span><br><span class="line">kubectl delete pod --all: 删除所有pod</span><br><span class="line">​</span><br><span class="line">kubectl exec -it podname bash or sh: 进入某个pod容器</span><br><span class="line">​</span><br><span class="line">kubectl logs podname: 查看某个pod日志</span><br><span class="line">​</span><br><span class="line">kubectl logs -f podname: 实时查看某个pod日志</span><br><span class="line">​</span><br><span class="line">kubectl logs -f --tail&#x3D;100 podname: 实时查看某个pod最新100条日志</span><br><span class="line">​</span><br><span class="line">kubectl log  podname  -c containername: 若 pod 只有一个容器，可以不加 -c</span><br><span class="line">​</span><br><span class="line">kubectl scale --replicas&#x3D;2 deployment edge-cas-deployment: 以deployment形式启动2个pod</span><br><span class="line">​</span><br><span class="line">kubectl explain pod: 查看pod的注释</span><br><span class="line">kubectl explain pod.apiVersion</span><br></pre></td></tr></table></figure><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Docker常用命令，你都会了吗</title>
    <link href="http://www.damon8.cn/2020/07/27/docker-01/"/>
    <id>http://www.damon8.cn/2020/07/27/docker-01/</id>
    <published>2020-07-27T09:35:10.000Z</published>
    <updated>2020-11-04T08:43:29.703Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>应大家要求，今天整理下 Docker 常见的一些命令。</p><br><p>关于 docker 的安装，在 <a class="nav-item-link" target="_blank" href="https://www.damon8.cn/2020/07/23/k8s/" title="k8s部署手册">k8s部署手册</a> 一文中，你可以快速安装docker的各种版本。</p><br><p>常见命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">docker images: 查看镜像，后可跟 &quot;| grep 内容&quot;，可根据内容进行筛选。</span><br><span class="line">如：docker images | grep nginx</span><br><span class="line">​</span><br><span class="line">docker images [OPTIONS] [REPOSITORY[:TAG]]</span><br><span class="line">OPTIONS说明:</span><br><span class="line">-a: 列出本地所有的镜像</span><br><span class="line">--digests: 显示镜像的摘要信息</span><br><span class="line">-f: 显示满足条件的镜像</span><br><span class="line">--format: 指定返回值的模板文件</span><br><span class="line">--no-trunc: 显示完整的镜像信息</span><br><span class="line">-q: 只显示镜像ID</span><br><span class="line">​</span><br><span class="line">docker run: 创建一个新的容器并运行一个命令</span><br><span class="line">docker run [OPTIONS] IMAGE [COMMAND] [ARG...]</span><br><span class="line">OPTIONS说明:</span><br><span class="line">-d: 后台运行容器，并返回容器ID</span><br><span class="line">-i: 以交互模式运行容器，通常与 -t 同时使用</span><br><span class="line">-p: 指定端口映射，格式为：主机(宿主)端口:容器端口</span><br><span class="line">-t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用</span><br><span class="line">--name &quot;nginx&quot;: 为容器指定一个名称</span><br><span class="line">-h &quot;localhost&quot;: 指定容器的hostname</span><br><span class="line">-e spring.profiles.active&#x3D;&quot;dev&quot;: 设置环境变量</span><br><span class="line">--env-file&#x3D;[]: 从指定文件读环境变量</span><br><span class="line">-m :设置容器使用内存最大值</span><br><span class="line">--volume &#x2F;home&#x2F;data:&#x2F;etc&#x2F;data :  绑定一个卷</span><br><span class="line">and so on</span><br><span class="line">​</span><br><span class="line">如：docker run -d -t -p 80:80 -v &#x2F;home&#x2F;data:&#x2F;usr&#x2F;data --name nginx nginx:latest</span><br><span class="line">​</span><br><span class="line">docker create: 创建一个新的容器但不启动它</span><br><span class="line">​</span><br><span class="line">docker stop: 停止一个运行的容器</span><br><span class="line">docker stop containerName</span><br><span class="line">​</span><br><span class="line">docker restart: 重启一个容器</span><br><span class="line">docker restart containerName</span><br><span class="line">​</span><br><span class="line">docker start: 启动一个被停止的容器</span><br><span class="line">docker start containerName</span><br><span class="line">​</span><br><span class="line">docker ps [OPTIONS]: 列出容器</span><br><span class="line">OPTIONS说明:</span><br><span class="line">-a: 显示所有的容器，包括未运行的</span><br><span class="line">-f: 根据条件过滤显示的内容</span><br><span class="line">--format: 指定返回值的模板文件</span><br><span class="line">-l: 显示最近创建的容器</span><br><span class="line">-n: 列出最近创建的n个容器</span><br><span class="line">--no-trunc: 不截断输出</span><br><span class="line">-q: 静默模式，只显示容器编号</span><br><span class="line">-s: 显示总的文件大小</span><br><span class="line">​</span><br><span class="line">docker ps -a: 查看所有容器</span><br><span class="line">​</span><br><span class="line">docker ps: 查看正在运行的容器</span><br><span class="line">​</span><br><span class="line">docker exec: 进入一个运行中的容器执行命令</span><br><span class="line">如：docker exec -it 容器id sh or bash or &#x2F;bin&#x2F;bash</span><br><span class="line">表示在容器中开启一个交互模式的终端</span><br><span class="line">​</span><br><span class="line">docker rm: 删除一个容器，可加-f 表示强制 -v：并删除挂载卷</span><br><span class="line">删除所有停止的容器：docker rm $(docker ps -a -q)</span><br><span class="line">​</span><br><span class="line">docker rmi: 删除一个镜像，可加-f 表示强制</span><br><span class="line">​</span><br><span class="line">docker inspect : 获取容器&#x2F;镜像的元数据</span><br><span class="line">如：docker inspect [OPTIONS] NAME|ID [NAME|ID...]</span><br><span class="line">OPTIONS说明:</span><br><span class="line">-f: 指定返回值的模板文件</span><br><span class="line">-s: 显示总文件大小</span><br><span class="line">-type: 为指定类型返回json数据</span><br><span class="line">​</span><br><span class="line">获取正在运行的容器 nginx 的 IP:</span><br><span class="line">docker inspect --format&#x3D;&#39;&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;&#39; nginx</span><br><span class="line">​</span><br><span class="line">docker kill: 杀死一个运行中的容器</span><br><span class="line">如： docker kill -s killyou nginx</span><br><span class="line">​</span><br><span class="line">docker logs: 获取容器的日志</span><br><span class="line">如：docker logs -f -t 容器id or docker logs -f -t --tail&#x3D;100 容器id</span><br><span class="line">​</span><br><span class="line">docker build: 命令用于使用 Dockerfile 创建镜像</span><br><span class="line">docker build [OPTIONS] PATH | URL | -</span><br><span class="line">OPTIONS说明:</span><br><span class="line">-f: 指定要使用的Dockerfile路径</span><br><span class="line">-m: 设置内存最大值</span><br><span class="line">--memory-swap: 设置Swap的最大值为内存+swap，&quot;-1&quot;表示不限swap</span><br><span class="line">--no-cache: 创建镜像的过程不使用缓存</span><br><span class="line">--pull: 尝试去更新镜像的新版本</span><br><span class="line">-q: 安静模式，成功后只输出镜像 ID</span><br><span class="line">--rm: 设置镜像成功后删除中间容器</span><br><span class="line">--shm-size: 设置&#x2F;dev&#x2F;shm的大小，默认值是64M</span><br><span class="line">--tag: 镜像的名字及标签，通常 name:tag 或者 name 格式；可以在一次构建中为一个镜像设置多个标签</span><br><span class="line">--network: 默认 default。在构建期间设置RUN指令的网络模式</span><br><span class="line">​</span><br><span class="line">docker build -t 镜像标签名 .: docker build -t nginx:latest .</span><br><span class="line">docker build -f &#x2F;path&#x2F;to&#x2F;a&#x2F;Dockerfile .</span><br><span class="line">​</span><br><span class="line">docker tag: 标记本地镜像，将其归入某一仓库</span><br><span class="line">​</span><br><span class="line">docker tag nginx nginx:old</span><br><span class="line">​</span><br><span class="line">docker save: 将指定镜像保存成 tar 归档文件</span><br><span class="line">docker save -o nginx.tar nginx:latest</span><br><span class="line">​</span><br><span class="line">docker load: 导入使用 docker save 命令导出的镜像</span><br><span class="line">docker load -i tar文件名</span><br><span class="line">​</span><br><span class="line">docker info: 查看docker环境信息</span><br><span class="line">​</span><br><span class="line">docker version: 查看docker版本信息</span><br><span class="line">​</span><br><span class="line">docker login: 登录一个Docker镜像仓库</span><br><span class="line">docker login -u 用户名 -p 密码</span><br><span class="line">​</span><br><span class="line">docker logout: 退出登录</span><br><span class="line">​</span><br><span class="line">docker pull: 拉取或者更新指定镜像 -a 拉取所有的tag的镜像</span><br><span class="line">​</span><br><span class="line">docker push: 将本地的镜像上传到镜像仓库</span><br></pre></td></tr></table></figure><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>消息中间件那点事儿</title>
    <link href="http://www.damon8.cn/2020/07/27/mq-01/"/>
    <id>http://www.damon8.cn/2020/07/27/mq-01/</id>
    <published>2020-07-27T02:26:55.000Z</published>
    <updated>2020-11-04T08:44:39.422Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>系统的稳定性一直以来是所有企业研发人员所追求的，当出现系统问题时，这时候可以通过日志、系统监控、性能指标等来进行排查，但系统的复杂性、分布式、高并发等导致了很多信息的堆积，这个时候，可能对于工作人员来说，是一件非常头痛的事情。消息中间件，英文简称 MQ，这个名词的出现，可以解决很多事情：比如：复杂的业务中通过 MQ 来减少频繁的业务交互。高并发下，不必及时处理的事务都可以交给 MQ。交易过程中，更是存在很多的事务处理，如果长时间保持长链接以及锁的状态，很有可能造成锁表、锁库，形成死锁。这时候也需要 MQ 来进行消息的缓冲、异步进行，保证系统的稳定、持续的进行下去。不会因为死锁等长时间的循环而导致 cpu、内存的增耗，从而避免出现服务挂掉、宕机等问题。</p><br><br><h3 id="形形色色的-MQ"><a href="#形形色色的-MQ" class="headerlink" title="形形色色的 MQ"></a>形形色色的 MQ</h3><p>事实上，消息中间件的种类越来越多：RabbitMQ、RocketMQ、Kafka 等等。下面给出了一张表展示各种 MQ 特点：</p><img src="/images/mq/mq01.png" style="display: block; margin: 0 auto; max-width: 100%;"><br><p>说到这，大家可能要说，还有一种中间件：Redis，的确，Redis 也作为一种中间件，一般用来作为缓存中间件。缓存一些信息，以便数据信息共享、也可以利用其来实现分布式锁，例如实现秒杀、抢单等功能。还会被用作一些订单信息的缓存，防止大量的订单信息被积压而导致服务器的负载很高。总之，Redis 常被用来作为一种缓冲剂使用。</p><br><p>除了上面说的，消息中间件还可以用来抢红包，交易系统的账单记录、流程推送、通知等等。Redis 作为缓存处理器，它的使用，大大的提升了应用的性能与效率，特别是在查询数据的层面上，大大降低了查询数据库的频率。但这也带来了一些问题，其中比较典型的，比如：缓存穿透、缓存击穿、缓存雪崩。</p><br><h4 id="什么是缓存穿透呢？"><a href="#什么是缓存穿透呢？" class="headerlink" title="什么是缓存穿透呢？"></a>什么是缓存穿透呢？</h4><br><p>我们先来看看缓存的查询流程：前端发来请求查询数据时，后端首先会在缓存 Redis 中查询，如果查询到数据，直接返回给前端，流程结束；如果在缓存中未查到数据，则前往数据库查找，此时查询数据后返回给前端，同时会塞进缓存中。<strong>还有一种可能就是：查询数据库未查到数据时，会直接返回 NULL。</strong> 这种情况下，如果用户不停滴发起请求时，恶意提供数据库中不存在的信息，则在数据库中查到的数据永远都是 NULL。这种数据是不会被塞进缓存的，这种的数据永远会被从数据库中访问，即为<strong>恶意攻击式</strong>，则很有可能对数据库造成极大的压力，搞哭数据库。这个过程被称为：<strong>缓存穿透</strong>。缓存永远被直接穿透而直接访问数据库。</p><br><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><br><p>目前对于缓存穿透，比较典型的解决方案是：<strong>当在数据库查询未找到时，将 NULL 返给前端，同时，会将 NULL 塞入缓存，并对对应的 Key 设置一定的过期时间。</strong> 这种处理方式在电商的话，用到的较多。</p><br><h4 id="什么是缓存击穿呢？"><a href="#什么是缓存击穿呢？" class="headerlink" title="什么是缓存击穿呢？"></a>什么是缓存击穿呢？</h4><br><p>缓存击穿，是指缓存中某个 Key 在不停的、频繁的被请求，当这个 Key 在某个时刻失效时，持续的高并发请求就会击穿缓存，直接请求数据库，导致数据库的压力在那一时刻猛增。就像<strong>水滴石穿</strong>。</p><br><h4 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h4><p>既然这种 key 会被不停的访问、请求，那么可以将其有效期设为一万年，这样，不停的高并发请求，就永不会落在数据库层。</p><br><h4 id="什么是缓存雪崩呢？"><a href="#什么是缓存雪崩呢？" class="headerlink" title="什么是缓存雪崩呢？"></a>什么是缓存雪崩呢？</h4><br><p>缓存雪崩，是指在某个时刻，缓存的 key 集体发生失效，这样导致大量的查询请求落在了数据库层，导致数据库负载过高，甚至会压垮数据库。</p><br><h4 id="解决方案-2"><a href="#解决方案-2" class="headerlink" title="解决方案"></a>解决方案</h4><p>雪崩的现象，主要在于大量的 key 在同一时刻处于失效状态，所以为了避免这种情况：一般会为 key 设置不同的、随机的失效时间，错开缓存中 key 的失效时间点，从而最终减少数据库压力。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>浅谈微服务安全架构设计</title>
    <link href="http://www.damon8.cn/2020/07/24/micro-service01/"/>
    <id>http://www.damon8.cn/2020/07/24/micro-service01/</id>
    <published>2020-07-24T05:57:33.000Z</published>
    <updated>2020-11-04T08:44:14.778Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1、-回顾微服务设计理念"><a href="#1、-回顾微服务设计理念" class="headerlink" title="1、 回顾微服务设计理念"></a>1、 回顾微服务设计理念</h2><br><br><p>在 <a class="nav-item-link" target="_blank" href="https://www.damon8.cn/2020/07/23/micro-service03/" title="">浅入微服务架构</a> 一文中，我们了解到什么是微服务，微服务的划分依据，其实，说到底，微服务的设计，有其独到的好处：使得各个模块之间<strong>解耦合</strong>，让每一个模块有自己独立的灵魂，其他服务即使出现任何问题，自己不会受到任何的影响。这是微服务的核心宗旨。那么今天要讲的微服务安全性问题，其实也是反映微服务的一个核心：<strong>高内聚</strong>。所谓高内聚，简单的理解就是，对外暴露的最小限度，降低其依赖关系，大部分都作为一个黑盒子封装起来，不直接对外，这样，即使内部发生变更、翻云覆雨，对外的接口没发生改变，这才是好的微服务设计理念，做到完美的对外兼容，一个好的架构设计，首先，这一点可能需要 get 到位，不知道大家咋认为呢？所以今天说的微服务安全性，就跟这个<strong>高内聚</strong>有一点点相关了。或者说，体现了微服务设计的核心理念。</p><br><br><h2 id="2、微服务下的各种安全性保证"><a href="#2、微服务下的各种安全性保证" class="headerlink" title="2、微服务下的各种安全性保证"></a>2、微服务下的各种安全性保证</h2><br><h3 id="2-1-常见的几种安全性措施"><a href="#2-1-常见的几种安全性措施" class="headerlink" title="2.1 常见的几种安全性措施"></a>2.1 常见的几种安全性措施</h3><p>在微服务中，我们常见的，有如下几种安全性设计的举措：网关设计、服务端口的对外暴露的限度、token 鉴权、OAuth2 的统一认证、微信中的 openId 设计等。这些都是在为服务的安全性作考虑的一些举措。</p><h3 id="2-2-OAuth2-的概念"><a href="#2-2-OAuth2-的概念" class="headerlink" title="2.2 OAuth2 的概念"></a>2.2 OAuth2 的概念</h3><p>何为 OAuth2 呢？我们先了解 OAuth，Oauth 是一个开放标准，假设有这样一种场景：一个 QQ 应用，希望让一个第三方的（慕课网）应用，能够得到关于自身的一些信息（唯一用户标识，比如说 QQ 号，用户个人信息、一些基础资料，昵称和头像等）。但是在获得这些资料的同时，却又不能提供用户名和密码之类的信息。如下图：</p><p><img src="https://imgkr.cn-bj.ufileos.com/8c7bc122-ef5b-4523-9c20-f28742054ee3.png" alt=""></p><p>而 OAuth 就是实现上述目标的一种规范。OAuth2 是 OAuth 协议的延续版本，但不兼容 OAuth1.0，即完全废弃了 OAuth1.0。</p><p>OAuth2.0 有这么几个术语：客户凭证、令牌、作用域。</p><p>客户凭证：客户的 clientId 和密码用于认证客户。</p><p>令牌：授权服务器在接收到客户请求后颁发的令牌。</p><p>作用域：客户请求访问令牌时,由资源拥有者额外指定的细分权限。</p><h3 id="2-3-OAuth2-的原理"><a href="#2-3-OAuth2-的原理" class="headerlink" title="2.3 OAuth2 的原理"></a>2.3 OAuth2 的原理</h3><p>在 OAuth2 的授权机制中有 4 个核心对象：</p><p>Resource Owner：资源拥有者，即用户。</p><p>Client：第三方接入平台、应用，请求者。</p><p>Resource Server：资源服务器，存储用户信息、用户的资源信息等资源。</p><p>Authorization Server：授权认证服务器。</p><p>实现机制：</p><p>用户在第三方应用上点击登录，应用向认证服务器发送请求，说有用户希望进行授权操作，同时说明自己是谁、用户授权完成后的回调 url，例如：上面的截图，通过慕课网访问 QQ 获取授权。</p><p>认证服务器展示给用户自己的授权界面。</p><p>用户进行授权操作，认证服务器验证成功后，生成一个授权编码 code，并跳转到第三方的回调 url。</p><p>第三方应用拿到 code 后，连同自己在平台上的身份信息（ID 密码）发送给认证服务器，再一次进行验证请求，说明自己的身份正确，并且用户也已经授权我了，来换取访问用户资源的权限。</p><p>认证服务器对请求信息进行验证，如果没问题，就生成访问资源服务器的令牌 access_token，交给第三方应用。</p><p>第三方应用使用 access_token 向资源服务器请求资源。</p><p>资源服务器验证 access_token 成功后返回响应资源。</p><br><h3 id="2-4-OAuth2-的几种授权模式"><a href="#2-4-OAuth2-的几种授权模式" class="headerlink" title="2.4 OAuth2 的几种授权模式"></a>2.4 OAuth2 的几种授权模式</h3><p>OAuth2.0 有这么几个授权模式：授权码模式、简化模式、密码模式、客户端凭证模式。</p><p>授权码模式：（authorization_code）是功能最完整、流程最严密的授权模式，code 保证了 token 的安全性，即使 code 被拦截，由于没有 client_secret，也是无法通过 code 获得 token 的。</p><p>简化模式：和授权码模式类似，只不过少了获取 code 的步骤，是直接获取令牌 token 的，适用于公开的浏览器单页应用，令牌直接从授权服务器返回，不支持刷新令牌，且没有 code 安全保证，令牌容易因为被拦截窃听而泄露。</p><p>密码模式：使用用户名/密码作为授权方式从授权服务器上获取令牌，一般不支持刷新令牌。</p><p>客户端凭证模式：一般用于资源服务器是应用的一个后端模块，客户端向认证服务器验证身份来获取令牌。</p><br><h3 id="2-5-实战-OAuth2-的密码模式"><a href="#2-5-实战-OAuth2-的密码模式" class="headerlink" title="2.5 实战 OAuth2 的密码模式"></a>2.5 实战 OAuth2 的密码模式</h3><p>本次结合 Spring Cloud Alibaba 组件，实现微服务的安全系统体系，本文主要讲解 OAuth2 的部分。</p><p>先来看鉴权中心，鉴权中心需要做到提供单点服务，为所有的客户端微服务的安全保驾护航。下面首先看依赖:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-cloud-starter-oauth2&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;com.alibaba.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;com.alibaba.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;&#x2F;artifactId&gt;</span><br><span class="line">  &lt;&#x2F;dependency&gt;</span><br><span class="line">  &lt;!-- 对redis支持,引入的话项目缓存就支持redis了,所以必须加上redis的相关配置,否则操作相关缓存会报异常 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-data-redis&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>如果需要使用 redis 来存储 token，则可以加入 reids 依赖，如果使用 jwt，则使用:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.jsonwebtoken&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jjwt&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.9.0&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>当然，本次的项目模块引入的是比较新的 Spring Boot:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;parent&gt;</span><br><span class="line">  &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;spring-boot-starter-parent&lt;&#x2F;artifactId&gt;</span><br><span class="line">  &lt;version&gt;2.1.13.RELEASE&lt;&#x2F;version&gt;</span><br><span class="line">  &lt;relativePath&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;parent&gt;</span><br><span class="line"></span><br><span class="line">&lt;properties&gt;</span><br><span class="line">      &lt;project.build.sourceEncoding&gt;UTF-8&lt;&#x2F;project.build.sourceEncoding&gt;</span><br><span class="line">      &lt;project.reporting.outputEncoding&gt;UTF-8&lt;&#x2F;project.reporting.outputEncoding&gt;</span><br><span class="line">      &lt;java.version&gt;1.8&lt;&#x2F;java.version&gt;</span><br><span class="line">      &lt;swagger.version&gt;2.6.1&lt;&#x2F;swagger.version&gt;</span><br><span class="line">      &lt;xstream.version&gt;1.4.7&lt;&#x2F;xstream.version&gt;</span><br><span class="line">      &lt;pageHelper.version&gt;4.1.6&lt;&#x2F;pageHelper.version&gt;</span><br><span class="line">      &lt;fastjson.version&gt;1.2.51&lt;&#x2F;fastjson.version&gt;</span><br><span class="line">      &lt;springcloud.version&gt;Greenwich.SR3&lt;&#x2F;springcloud.version&gt;</span><br><span class="line">      &lt;mysql.version&gt;5.1.46&lt;&#x2F;mysql.version&gt;</span><br><span class="line"></span><br><span class="line">      &lt;alibaba-cloud.version&gt;2.1.1.RELEASE&lt;&#x2F;alibaba-cloud.version&gt;</span><br><span class="line">      &lt;springcloud.alibaba.version&gt;0.9.0.RELEASE&lt;&#x2F;springcloud.alibaba.version&gt;</span><br><span class="line">  &lt;&#x2F;properties&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependencyManagement&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-alibaba-dependencies&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;alibaba-cloud.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;type&gt;pom&lt;&#x2F;type&gt;</span><br><span class="line">            &lt;scope&gt;import&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-alibaba-dependencies&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;springcloud.alibaba.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;type&gt;pom&lt;&#x2F;type&gt;</span><br><span class="line">            &lt;scope&gt;import&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt; --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-dependencies&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;$&#123;springcloud.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">            &lt;type&gt;pom&lt;&#x2F;type&gt;</span><br><span class="line">            &lt;scope&gt;import&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line">&lt;&#x2F;dependencyManagement&gt;</span><br></pre></td></tr></table></figure><p>剩下的，像数据库、持久化等，其他的可以根据需要添加。</p><p>配置完成后，我们需要写一个认证服务器的配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line">package com.damon.config;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">import javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.core.env.Environment;</span><br><span class="line">import org.springframework.security.authentication.AuthenticationManager;</span><br><span class="line">import org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class="line">import org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer;</span><br><span class="line">import org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter;</span><br><span class="line">import org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer;</span><br><span class="line">import org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer;</span><br><span class="line">import org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerSecurityConfigurer;</span><br><span class="line">import org.springframework.security.oauth2.provider.error.WebResponseExceptionTranslator;</span><br><span class="line">import org.springframework.security.oauth2.provider.token.TokenEnhancer;</span><br><span class="line">import org.springframework.security.oauth2.provider.token.TokenEnhancerChain;</span><br><span class="line">import org.springframework.security.oauth2.provider.token.TokenStore;</span><br><span class="line">import org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter;</span><br><span class="line"></span><br><span class="line">import com.damon.component.JwtTokenEnhancer;</span><br><span class="line">import com.damon.login.service.LoginService;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">@EnableAuthorizationServer</span><br><span class="line">public class AuthorizationServerConfig extends AuthorizationServerConfigurerAdapter &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private PasswordEncoder passwordEncoder;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private AuthenticationManager authenticationManager;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private LoginService loginService;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    &#x2F;&#x2F;@Qualifier(&quot;jwtTokenStore&quot;)</span><br><span class="line">    @Qualifier(&quot;redisTokenStore&quot;)</span><br><span class="line">    private TokenStore tokenStore;</span><br><span class="line">    &#x2F;*@Autowired</span><br><span class="line">    private JwtAccessTokenConverter jwtAccessTokenConverter;</span><br><span class="line">    @Autowired</span><br><span class="line">    private JwtTokenEnhancer jwtTokenEnhancer;*&#x2F;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private Environment env;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private WebResponseExceptionTranslator userOAuth2WebResponseExceptionTranslator;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * redis token 方式</span><br><span class="line">     *&#x2F;</span><br><span class="line">    @Override</span><br><span class="line">    public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception &#123;</span><br><span class="line">    &#x2F;&#x2F;验证时发生的情况处理</span><br><span class="line">        endpoints.authenticationManager(authenticationManager) &#x2F;&#x2F;支持 password 模式</span><br><span class="line">        .exceptionTranslator(userOAuth2WebResponseExceptionTranslator)&#x2F;&#x2F;自定义异常处理类添加到认证服务器配置</span><br><span class="line">                .userDetailsService(loginService)</span><br><span class="line">                .tokenStore(tokenStore);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 客户端配置（给谁发令牌）</span><br><span class="line">     * 不同客户端配置不同</span><br><span class="line">     *</span><br><span class="line">     * authorizedGrantTypes 可以包括如下几种设置中的一种或多种：</span><br><span class="line">authorization_code：授权码类型。需要redirect_uri</span><br><span class="line">implicit：隐式授权类型。需要redirect_uri</span><br><span class="line">password：资源所有者（即用户）密码类型。</span><br><span class="line">client_credentials：客户端凭据（客户端ID以及Key）类型。</span><br><span class="line">refresh_token：通过以上授权获得的刷新令牌来获取新的令牌。</span><br><span class="line"></span><br><span class="line">   accessTokenValiditySeconds：token 的有效期</span><br><span class="line">   scopes：用来限制客户端访问的权限，在换取的 token 的时候会带上 scope 参数，只有在 scopes 定义内的，才可以正常换取 token。</span><br><span class="line">     * @param clients</span><br><span class="line">     * @throws Exception</span><br><span class="line">     * @author Damon</span><br><span class="line">     *</span><br><span class="line">     *&#x2F;</span><br><span class="line">    @Override</span><br><span class="line">    public void configure(ClientDetailsServiceConfigurer clients) throws Exception &#123;</span><br><span class="line">        clients.inMemory()</span><br><span class="line">                .withClient(&quot;provider-service&quot;)</span><br><span class="line">                .secret(passwordEncoder.encode(&quot;provider-service-123&quot;))</span><br><span class="line">                .accessTokenValiditySeconds(3600)</span><br><span class="line">                .refreshTokenValiditySeconds(864000)&#x2F;&#x2F;配置刷新token的有效期</span><br><span class="line">                .autoApprove(true) &#x2F;&#x2F;自动授权配置</span><br><span class="line">                .scopes(&quot;all&quot;)&#x2F;&#x2F;配置申请的权限范围</span><br><span class="line">                .authorizedGrantTypes(&quot;password&quot;, &quot;authorization_code&quot;, &quot;client_credentials&quot;, &quot;refresh_token&quot;)&#x2F;&#x2F;配置授权模式</span><br><span class="line">                .redirectUris(&quot;http:&#x2F;&#x2F;localhost:2001&#x2F;login&quot;)&#x2F;&#x2F;授权码模式开启后必须指定</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                .and()</span><br><span class="line">                .withClient(&quot;consumer-service&quot;)</span><br><span class="line">                .secret(passwordEncoder.encode(&quot;consumer-service-123&quot;))</span><br><span class="line">                .accessTokenValiditySeconds(3600)</span><br><span class="line">                .refreshTokenValiditySeconds(864000)&#x2F;&#x2F;配置刷新token的有效期</span><br><span class="line">                .autoApprove(true) &#x2F;&#x2F;自动授权配置</span><br><span class="line">                .scopes(&quot;all&quot;)&#x2F;&#x2F;配置申请的权限范围</span><br><span class="line">                .authorizedGrantTypes(&quot;password&quot;, &quot;authorization_code&quot;, &quot;client_credentials&quot;, &quot;refresh_token&quot;)&#x2F;&#x2F;配置授权模式</span><br><span class="line">                .redirectUris(&quot;http:&#x2F;&#x2F;localhost:2005&#x2F;login&quot;)&#x2F;&#x2F;授权码模式开启后必须指定</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                .and()</span><br><span class="line">                .withClient(&quot;resource-service&quot;)</span><br><span class="line">                .secret(passwordEncoder.encode(&quot;resource-service-123&quot;))</span><br><span class="line">                .accessTokenValiditySeconds(3600)</span><br><span class="line">                .refreshTokenValiditySeconds(864000)&#x2F;&#x2F;配置刷新token的有效期</span><br><span class="line">                .autoApprove(true) &#x2F;&#x2F;自动授权配置</span><br><span class="line">                .scopes(&quot;all&quot;)&#x2F;&#x2F;配置申请的权限范围</span><br><span class="line">                .authorizedGrantTypes(&quot;password&quot;, &quot;authorization_code&quot;, &quot;client_credentials&quot;, &quot;refresh_token&quot;)&#x2F;&#x2F;配置授权模式</span><br><span class="line">                .redirectUris(&quot;http:&#x2F;&#x2F;localhost:2006&#x2F;login&quot;)&#x2F;&#x2F;授权码模式开启后必须指定</span><br><span class="line"></span><br><span class="line">                .and()</span><br><span class="line">                .withClient(&quot;test-sentinel&quot;)</span><br><span class="line">                .secret(passwordEncoder.encode(&quot;test-sentinel-123&quot;))</span><br><span class="line">                .accessTokenValiditySeconds(3600)</span><br><span class="line">                .refreshTokenValiditySeconds(864000)&#x2F;&#x2F;配置刷新token的有效期</span><br><span class="line">                .autoApprove(true) &#x2F;&#x2F;自动授权配置</span><br><span class="line">                .scopes(&quot;all&quot;)&#x2F;&#x2F;配置申请的权限范围</span><br><span class="line">                .authorizedGrantTypes(&quot;password&quot;, &quot;authorization_code&quot;, &quot;client_credentials&quot;, &quot;refresh_token&quot;)&#x2F;&#x2F;配置授权模式</span><br><span class="line">                .redirectUris(&quot;http:&#x2F;&#x2F;localhost:2008&#x2F;login&quot;)&#x2F;&#x2F;授权码模式开启后必须指定</span><br><span class="line"></span><br><span class="line">                .and()</span><br><span class="line">                .withClient(&quot;test-sentinel-feign&quot;)</span><br><span class="line">                .secret(passwordEncoder.encode(&quot;test-sentinel-feign-123&quot;))</span><br><span class="line">                .accessTokenValiditySeconds(3600)</span><br><span class="line">                .refreshTokenValiditySeconds(864000)&#x2F;&#x2F;配置刷新token的有效期</span><br><span class="line">                .autoApprove(true) &#x2F;&#x2F;自动授权配置</span><br><span class="line">                .scopes(&quot;all&quot;)&#x2F;&#x2F;配置申请的权限范围</span><br><span class="line">                .authorizedGrantTypes(&quot;password&quot;, &quot;authorization_code&quot;, &quot;client_credentials&quot;, &quot;refresh_token&quot;)&#x2F;&#x2F;配置授权模式</span><br><span class="line">                .redirectUris(&quot;http:&#x2F;&#x2F;localhost:2010&#x2F;login&quot;)&#x2F;&#x2F;授权码模式开启后必须指定</span><br><span class="line"></span><br><span class="line">                .and()</span><br><span class="line">                .withClient(&quot;customer-service&quot;)</span><br><span class="line">                .secret(passwordEncoder.encode(&quot;customer-service-123&quot;))</span><br><span class="line">                .accessTokenValiditySeconds(3600)</span><br><span class="line">                .refreshTokenValiditySeconds(864000)&#x2F;&#x2F;配置刷新token的有效期</span><br><span class="line">                .autoApprove(true) &#x2F;&#x2F;自动授权配置</span><br><span class="line">                .scopes(&quot;all&quot;)</span><br><span class="line">                .authorizedGrantTypes(&quot;password&quot;, &quot;authorization_code&quot;, &quot;client_credentials&quot;, &quot;refresh_token&quot;)&#x2F;&#x2F;配置授权模式</span><br><span class="line">                .redirectUris(&quot;http:&#x2F;&#x2F;localhost:2012&#x2F;login&quot;)&#x2F;&#x2F;授权码模式开启后必须指定</span><br><span class="line">                ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void configure(AuthorizationServerSecurityConfigurer security) &#123;</span><br><span class="line">    security.allowFormAuthenticationForClients();&#x2F;&#x2F;是允许客户端访问 OAuth2 授权接口，否则请求 token 会返回 401</span><br><span class="line">    security.checkTokenAccess(&quot;isAuthenticated()&quot;);&#x2F;&#x2F;是允许已授权用户访问 checkToken 接口</span><br><span class="line">        security.tokenKeyAccess(&quot;isAuthenticated()&quot;); &#x2F;&#x2F; security.tokenKeyAccess(&quot;permitAll()&quot;);获取密钥需要身份认证，使用单点登录时必须配置，是允许已授权用户获取 token 接口</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Redis 配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">package com.damon.config;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class="line">import org.springframework.security.oauth2.provider.token.TokenStore;</span><br><span class="line">import org.springframework.security.oauth2.provider.token.store.redis.RedisTokenStore;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">public class RedisTokenStoreConfig &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private RedisConnectionFactory redisConnectionFactory;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public TokenStore redisTokenStore ()&#123;</span><br><span class="line">        &#x2F;&#x2F;return new RedisTokenStore(redisConnectionFactory);</span><br><span class="line">    return new MyRedisTokenStore(redisConnectionFactory);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后面接下来需要配置安全访问的拦截，这时候需要 SpringSecurity:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">package com.damon.config;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.security.authentication.AuthenticationManager;</span><br><span class="line">import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</span><br><span class="line">import org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line">import org.springframework.security.config.annotation.web.builders.WebSecurity;</span><br><span class="line">import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line">import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line">import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line">import org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">@EnableWebSecurity</span><br><span class="line">public class SecurityConfig extends WebSecurityConfigurerAdapter &#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public PasswordEncoder passwordEncoder() &#123;</span><br><span class="line">        return new BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    @Override</span><br><span class="line">    public AuthenticationManager authenticationManagerBean() throws Exception &#123;</span><br><span class="line">        return super.authenticationManagerBean();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void configure(HttpSecurity http) throws Exception &#123;</span><br><span class="line">        http.csrf()</span><br><span class="line">                .disable()</span><br><span class="line"></span><br><span class="line">                .exceptionHandling()</span><br><span class="line">        .authenticationEntryPoint(new AuthenticationEntryPointHandle())</span><br><span class="line">        &#x2F;&#x2F;.authenticationEntryPoint((request, response, authException) -&gt; response.sendError(HttpServletResponse.SC_UNAUTHORIZED))</span><br><span class="line">        .and()</span><br><span class="line"></span><br><span class="line">                .authorizeRequests()</span><br><span class="line">                .antMatchers(&quot;&#x2F;oauth&#x2F;**&quot;, &quot;&#x2F;login&#x2F;**&quot;)&#x2F;&#x2F;&quot;&#x2F;logout&#x2F;**&quot;</span><br><span class="line">                .permitAll()</span><br><span class="line">                .anyRequest()</span><br><span class="line">                .authenticated()</span><br><span class="line">                .and()</span><br><span class="line">                .formLogin()</span><br><span class="line">                .permitAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;*@Override</span><br><span class="line">    protected void configure(AuthenticationManagerBuilder auth) throws Exception &#123;</span><br><span class="line">        auth.userDetailsService(userDetailsService)</span><br><span class="line">            .passwordEncoder(passwordEncoder());</span><br><span class="line">    &#125;*&#x2F;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void configure(WebSecurity web) throws Exception &#123;</span><br><span class="line">        web.ignoring().antMatchers(&quot;&#x2F;css&#x2F;**&quot;, &quot;&#x2F;js&#x2F;**&quot;, &quot;&#x2F;plugins&#x2F;**&quot;, &quot;&#x2F;favicon.ico&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再者，就是需要配置资源拦截:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">package com.damon.config;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line">import org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer;</span><br><span class="line">import org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfigurerAdapter;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">@EnableResourceServer</span><br><span class="line">public class ResourceServerConfig extends ResourceServerConfigurerAdapter &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">    public void configure(HttpSecurity http) throws Exception &#123;</span><br><span class="line">        http.csrf().disable()</span><br><span class="line"></span><br><span class="line">                .exceptionHandling()</span><br><span class="line">        .authenticationEntryPoint(new AuthenticationEntryPointHandle())</span><br><span class="line">        &#x2F;&#x2F;.authenticationEntryPoint((request, response, authException) -&gt; response.sendError(HttpServletResponse.SC_UNAUTHORIZED))</span><br><span class="line">        .and()</span><br><span class="line"></span><br><span class="line">                .requestMatchers().antMatchers(&quot;&#x2F;api&#x2F;**&quot;)</span><br><span class="line">                .and()</span><br><span class="line">                .authorizeRequests()</span><br><span class="line">                .antMatchers(&quot;&#x2F;api&#x2F;**&quot;).authenticated()</span><br><span class="line">                .and()</span><br><span class="line">                .httpBasic();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，在上面我们配置了资源拦截、权限拦截的统一处理配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">package com.damon.config;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line">import org.springframework.http.HttpStatus;</span><br><span class="line">import org.springframework.security.core.AuthenticationException;</span><br><span class="line">import org.springframework.security.web.AuthenticationEntryPoint;</span><br><span class="line"></span><br><span class="line">import com.alibaba.fastjson.JSON;</span><br><span class="line">import com.damon.commons.Response;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> *</span><br><span class="line"> * 统一结果处理</span><br><span class="line"> *</span><br><span class="line"> * @author Damon</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">public class AuthenticationEntryPointHandle implements AuthenticationEntryPoint &#123;</span><br><span class="line">&#x2F;**</span><br><span class="line"> *</span><br><span class="line"> * @author Damon</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Override</span><br><span class="line">public void commence(HttpServletRequest request, HttpServletResponse response,</span><br><span class="line">AuthenticationException authException) throws IOException, ServletException &#123;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;response.setStatus(HttpServletResponse.SC_FORBIDDEN);</span><br><span class="line">&#x2F;&#x2F;response.setStatus(HttpStatus.OK.value());</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;response.setHeader(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;);  &#x2F;&#x2F;gateway已加，无需再加</span><br><span class="line">        &#x2F;&#x2F;response.setHeader(&quot;Access-Control-Allow-Headers&quot;, &quot;token&quot;);</span><br><span class="line">        &#x2F;&#x2F;解决低危漏洞点击劫持 X-Frame-Options Header未配置</span><br><span class="line">        response.setHeader(&quot;X-Frame-Options&quot;, &quot;SAMEORIGIN&quot;);</span><br><span class="line">        response.setCharacterEncoding(&quot;UTF-8&quot;);</span><br><span class="line">        response.setContentType(&quot;application&#x2F;json; charset&#x3D;utf-8&quot;);</span><br><span class="line"></span><br><span class="line">response.getWriter()</span><br><span class="line">.write(JSON.toJSONString(Response.ok(response.getStatus(), -2, authException.getMessage(), null)));</span><br><span class="line">&#x2F;*response.getWriter()</span><br><span class="line">.write(JSON.toJSONString(Response.ok(200, -2, &quot;Internal Server Error&quot;, authException.getMessage())));*&#x2F;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，自定义异常处理类添加到认证服务器配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">package com.damon.config;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">import org.springframework.http.HttpHeaders;</span><br><span class="line">import org.springframework.http.HttpStatus;</span><br><span class="line">import org.springframework.http.ResponseEntity;</span><br><span class="line">import org.springframework.security.access.AccessDeniedException;</span><br><span class="line">import org.springframework.security.core.AuthenticationException;</span><br><span class="line">import org.springframework.security.oauth2.common.DefaultThrowableAnalyzer;</span><br><span class="line">import org.springframework.security.oauth2.common.exceptions.InsufficientScopeException;</span><br><span class="line">import org.springframework.security.oauth2.common.exceptions.OAuth2Exception;</span><br><span class="line">import org.springframework.security.oauth2.provider.error.WebResponseExceptionTranslator;</span><br><span class="line">import org.springframework.security.web.util.ThrowableAnalyzer;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">import org.springframework.web.HttpRequestMethodNotSupportedException;</span><br><span class="line"></span><br><span class="line">import com.damon.exception.UserOAuth2Exception;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> *</span><br><span class="line"> * 自定义异常转换类</span><br><span class="line"> * @author Damon</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">@Component(&quot;userOAuth2WebResponseExceptionTranslator&quot;)</span><br><span class="line">public class UserOAuth2WebResponseExceptionTranslator implements WebResponseExceptionTranslator &#123;</span><br><span class="line">    private ThrowableAnalyzer throwableAnalyzer &#x3D; new DefaultThrowableAnalyzer();</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public ResponseEntity&lt;OAuth2Exception&gt; translate(Exception e) throws Exception &#123;</span><br><span class="line">        Throwable[] causeChain &#x3D; this.throwableAnalyzer.determineCauseChain(e);</span><br><span class="line">        Exception ase &#x3D; (OAuth2Exception)this.throwableAnalyzer.getFirstThrowableOfType(OAuth2Exception.class, causeChain);</span><br><span class="line">        &#x2F;&#x2F;异常链中有OAuth2Exception异常</span><br><span class="line">        if (ase !&#x3D; null) &#123;</span><br><span class="line">            return this.handleOAuth2Exception((OAuth2Exception)ase);</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;身份验证相关异常</span><br><span class="line">        ase &#x3D; (AuthenticationException)this.throwableAnalyzer.getFirstThrowableOfType(AuthenticationException.class, causeChain);</span><br><span class="line">        if (ase !&#x3D; null) &#123;</span><br><span class="line">            return this.handleOAuth2Exception(new UserOAuth2WebResponseExceptionTranslator.UnauthorizedException(e.getMessage(), e));</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;异常链中包含拒绝访问异常</span><br><span class="line">        ase &#x3D; (AccessDeniedException)this.throwableAnalyzer.getFirstThrowableOfType(AccessDeniedException.class, causeChain);</span><br><span class="line">        if (ase instanceof AccessDeniedException) &#123;</span><br><span class="line">            return this.handleOAuth2Exception(new UserOAuth2WebResponseExceptionTranslator.ForbiddenException(ase.getMessage(), ase));</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;异常链中包含Http方法请求异常</span><br><span class="line">        ase &#x3D; (HttpRequestMethodNotSupportedException)this.throwableAnalyzer.getFirstThrowableOfType(HttpRequestMethodNotSupportedException.class, causeChain);</span><br><span class="line">        if(ase instanceof HttpRequestMethodNotSupportedException)&#123;</span><br><span class="line">            return this.handleOAuth2Exception(new UserOAuth2WebResponseExceptionTranslator.MethodNotAllowed(ase.getMessage(), ase));</span><br><span class="line">        &#125;</span><br><span class="line">        return this.handleOAuth2Exception(new UserOAuth2WebResponseExceptionTranslator.ServerErrorException(HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase(), e));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private ResponseEntity&lt;OAuth2Exception&gt; handleOAuth2Exception(OAuth2Exception e) throws IOException &#123;</span><br><span class="line">        int status &#x3D; e.getHttpErrorCode();</span><br><span class="line">        HttpHeaders headers &#x3D; new HttpHeaders();</span><br><span class="line">        headers.set(&quot;Cache-Control&quot;, &quot;no-store&quot;);</span><br><span class="line">        headers.set(&quot;Pragma&quot;, &quot;no-cache&quot;);</span><br><span class="line">        if (status &#x3D;&#x3D; HttpStatus.UNAUTHORIZED.value() || e instanceof InsufficientScopeException) &#123;</span><br><span class="line">            headers.set(&quot;WWW-Authenticate&quot;, String.format(&quot;%s %s&quot;, &quot;Bearer&quot;, e.getSummary()));</span><br><span class="line">        &#125;</span><br><span class="line">        UserOAuth2Exception exception &#x3D; new UserOAuth2Exception(e.getMessage(),e);</span><br><span class="line">        ResponseEntity&lt;OAuth2Exception&gt; response &#x3D; new ResponseEntity(exception, headers, HttpStatus.valueOf(status));</span><br><span class="line">        return response;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private static class MethodNotAllowed extends OAuth2Exception &#123;</span><br><span class="line">        public MethodNotAllowed(String msg, Throwable t) &#123;</span><br><span class="line">            super(msg, t);</span><br><span class="line">        &#125;</span><br><span class="line">        @Override</span><br><span class="line">        public String getOAuth2ErrorCode() &#123;</span><br><span class="line">            return &quot;method_not_allowed&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        @Override</span><br><span class="line">        public int getHttpErrorCode() &#123;</span><br><span class="line">            return 405;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static class UnauthorizedException extends OAuth2Exception &#123;</span><br><span class="line">        public UnauthorizedException(String msg, Throwable t) &#123;</span><br><span class="line">            super(msg, t);</span><br><span class="line">        &#125;</span><br><span class="line">        @Override</span><br><span class="line">        public String getOAuth2ErrorCode() &#123;</span><br><span class="line">            return &quot;unauthorized&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        @Override</span><br><span class="line">        public int getHttpErrorCode() &#123;</span><br><span class="line">            return 401;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static class ServerErrorException extends OAuth2Exception &#123;</span><br><span class="line">        public ServerErrorException(String msg, Throwable t) &#123;</span><br><span class="line">            super(msg, t);</span><br><span class="line">        &#125;</span><br><span class="line">        @Override</span><br><span class="line">        public String getOAuth2ErrorCode() &#123;</span><br><span class="line">            return &quot;server_error&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        @Override</span><br><span class="line">        public int getHttpErrorCode() &#123;</span><br><span class="line">            return 500;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static class ForbiddenException extends OAuth2Exception &#123;</span><br><span class="line">        public ForbiddenException(String msg, Throwable t) &#123;</span><br><span class="line">            super(msg, t);</span><br><span class="line">        &#125;</span><br><span class="line">        @Override</span><br><span class="line">        public String getOAuth2ErrorCode() &#123;</span><br><span class="line">            return &quot;access_denied&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        @Override</span><br><span class="line">        public int getHttpErrorCode() &#123;</span><br><span class="line">            return 403;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，我们可能需要配置一些请求客户端的配置，以及变量配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">public class BeansConfig &#123;</span><br><span class="line">@Resource</span><br><span class="line">private Environment env;</span><br><span class="line"></span><br><span class="line">@Bean</span><br><span class="line">public RestTemplate restTemplate() &#123;</span><br><span class="line">SimpleClientHttpRequestFactory requestFactory &#x3D; new SimpleClientHttpRequestFactory();</span><br><span class="line">requestFactory.setReadTimeout(env.getProperty(&quot;client.http.request.readTimeout&quot;, Integer.class, 15000));</span><br><span class="line">requestFactory.setConnectTimeout(env.getProperty(&quot;client.http.request.connectTimeout&quot;, Integer.class, 3000));</span><br><span class="line">RestTemplate rt &#x3D; new RestTemplate(requestFactory);</span><br><span class="line">return rt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">package com.damon.config;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Value;</span><br><span class="line">import org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line">import org.springframework.cloud.context.config.annotation.RefreshScope;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 配置信息</span><br><span class="line"> * @author Damon</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">@Component</span><br><span class="line">@RefreshScope</span><br><span class="line">public class EnvConfig &#123;</span><br><span class="line"></span><br><span class="line">@Value(&quot;$&#123;jdbc.driverClassName:&#125;&quot;)</span><br><span class="line">    private String jdbc_driverClassName;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;jdbc.url:&#125;&quot;)</span><br><span class="line">    private String jdbc_url;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;jdbc.username:&#125;&quot;)</span><br><span class="line">    private String jdbc_username;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;jdbc.password:&#125;&quot;)</span><br><span class="line">    private String jdbc_password;</span><br><span class="line"></span><br><span class="line">public String getJdbc_driverClassName() &#123;</span><br><span class="line">return jdbc_driverClassName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setJdbc_driverClassName(String jdbc_driverClassName) &#123;</span><br><span class="line">this.jdbc_driverClassName &#x3D; jdbc_driverClassName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getJdbc_url() &#123;</span><br><span class="line">return jdbc_url;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setJdbc_url(String jdbc_url) &#123;</span><br><span class="line">this.jdbc_url &#x3D; jdbc_url;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getJdbc_username() &#123;</span><br><span class="line">return jdbc_username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setJdbc_username(String jdbc_username) &#123;</span><br><span class="line">this.jdbc_username &#x3D; jdbc_username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getJdbc_password() &#123;</span><br><span class="line">return jdbc_password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setJdbc_password(String jdbc_password) &#123;</span><br><span class="line">this.jdbc_password &#x3D; jdbc_password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后需要配置一些环境配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: oauth-cas</span><br><span class="line">  cloud:</span><br><span class="line">    nacos:</span><br><span class="line">      discovery:</span><br><span class="line">        server-addr: 127.0.0.1:8848</span><br><span class="line">      config:</span><br><span class="line">        server-addr: 127.0.0.1:8848</span><br><span class="line">        refreshable-dataids: actuator.properties,log.properties</span><br><span class="line"></span><br><span class="line">  redis: #redis相关配置</span><br><span class="line">    database: 8</span><br><span class="line">    host: 127.0.0.1 #localhost</span><br><span class="line">    port: 6379</span><br><span class="line">    password: aaa #有密码时设置</span><br><span class="line">    jedis:</span><br><span class="line">      pool:</span><br><span class="line">        max-active: 8</span><br><span class="line">        max-idle: 8</span><br><span class="line">        min-idle: 0</span><br><span class="line">    timeout: 10000ms</span><br></pre></td></tr></table></figure><p>记住：上面这个启动配置需要在 bootstrap 文件中添加，否则，可能会失败，大家可以尝试下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 2000</span><br><span class="line">  undertow:</span><br><span class="line">    uri-encoding: UTF-8</span><br><span class="line">    accesslog:</span><br><span class="line">      enabled: false</span><br><span class="line">      pattern: combined</span><br><span class="line">  #这里我们使用了SpringBoot2.x，注意session与1.x不同</span><br><span class="line">  servlet:</span><br><span class="line">    session:</span><br><span class="line">      timeout: PT120M</span><br><span class="line">      cookie:</span><br><span class="line">        name: OAUTH-CAS-SESSIONID #防止Cookie冲突，冲突会导致登录验证不通过</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">client:</span><br><span class="line">  http:</span><br><span class="line">    request:</span><br><span class="line">      connectTimeout: 8000</span><br><span class="line">      readTimeout: 30000</span><br><span class="line"></span><br><span class="line">mybatis:</span><br><span class="line">  mapperLocations: classpath:mapper&#x2F;*.xml</span><br><span class="line">  typeAliasesPackage: com.damon.*.model</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">spring:</span><br><span class="line">  profiles:</span><br><span class="line">    active: dev</span><br></pre></td></tr></table></figure><p>最后，我们添加启动类:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">@EnableAutoConfiguration</span><br><span class="line">@ComponentScan(basePackages &#x3D; &#123;&quot;com.damon&quot;&#125;)</span><br><span class="line">@EnableDiscoveryClient</span><br><span class="line">public class CasApp &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">SpringApplication.run(CasApp.class, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上，一个认证中心的代码实战逻辑就完成了。</p><p>接下来，我们看一个客户端如何去认证，首先还是依赖:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-oauth2&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-netflix-ribbon&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>在客户端，我们也需要配置一个资源配置与权限配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">package com.damon.config;</span><br><span class="line"></span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line">import org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer;</span><br><span class="line">import org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfigurerAdapter;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> *</span><br><span class="line"> *</span><br><span class="line"> * @author Damon</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Configuration</span><br><span class="line">@EnableResourceServer</span><br><span class="line">public class ResourceServerConfig extends ResourceServerConfigurerAdapter &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void configure(HttpSecurity http) throws Exception &#123;</span><br><span class="line">        http.csrf().disable()</span><br><span class="line"></span><br><span class="line">                .exceptionHandling()</span><br><span class="line">        .authenticationEntryPoint(new AuthenticationEntryPointHandle())</span><br><span class="line">        &#x2F;&#x2F;.authenticationEntryPoint((request, response, authException) -&gt; response.sendError(HttpServletResponse.SC_UNAUTHORIZED))</span><br><span class="line">        .and()</span><br><span class="line"></span><br><span class="line">                .requestMatchers().antMatchers(&quot;&#x2F;api&#x2F;**&quot;)</span><br><span class="line">                .and()</span><br><span class="line">                .authorizeRequests()</span><br><span class="line">                .antMatchers(&quot;&#x2F;api&#x2F;**&quot;).authenticated()</span><br><span class="line">                .and()</span><br><span class="line">                .httpBasic();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然，权限拦截可能就相对简单了:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">package com.damon.config;</span><br><span class="line"></span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.core.annotation.Order;</span><br><span class="line">import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;</span><br><span class="line">import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> *</span><br><span class="line"> * 在接口上配置权限时使用</span><br><span class="line"> * @author Damon</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Configuration</span><br><span class="line">@EnableGlobalMethodSecurity(prePostEnabled &#x3D; true)</span><br><span class="line">@Order(101)</span><br><span class="line">public class SecurityConfig extends WebSecurityConfigurerAdapter &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样，这里也需要一个统一结果处理类，这里就不展示了。</p><p>接下来，我们主要看配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cas-server-url: http:&#x2F;&#x2F;oauth-cas #http:&#x2F;&#x2F;localhost:2000#设置可以访问的地址</span><br><span class="line"></span><br><span class="line">security:</span><br><span class="line">  oauth2: #与cas对应的配置</span><br><span class="line">    client:</span><br><span class="line">      client-id: provider-service</span><br><span class="line">      client-secret: provider-service-123</span><br><span class="line">      user-authorization-uri: $&#123;cas-server-url&#125;&#x2F;oauth&#x2F;authorize #是授权码认证方式需要的</span><br><span class="line">      access-token-uri: $&#123;cas-server-url&#125;&#x2F;oauth&#x2F;token #是密码模式需要用到的获取 token 的接口</span><br><span class="line">    resource:</span><br><span class="line">      loadBalanced: true</span><br><span class="line">      #jwt: #jwt存储token时开启</span><br><span class="line">        #key-uri: $&#123;cas-server-url&#125;&#x2F;oauth&#x2F;token_key</span><br><span class="line">        #key-value: test_jwt_sign_key</span><br><span class="line">      id: provider-service</span><br><span class="line">      #指定用户信息地址</span><br><span class="line">      user-info-uri: $&#123;cas-server-url&#125;&#x2F;api&#x2F;user #指定user info的URI，原生地址后缀为&#x2F;auth&#x2F;user</span><br><span class="line">      prefer-token-info: false</span><br><span class="line">      #token-info-uri:</span><br><span class="line">    authorization:</span><br><span class="line">      check-token-access: $&#123;cas-server-url&#125;&#x2F;oauth&#x2F;check_token #当此web服务端接收到来自UI客户端的请求后，需要拿着请求中的 token 到认证服务端做 token 验证，就是请求的这个接口</span><br></pre></td></tr></table></figure><p>在上面的配置里，我们看到了各种注释了，讲得很仔细，但是我要强调下：<strong>为了高可用，我们的认证中心可能多个，所以需要域名来作 LB。同时，开启了 loadBalanced=true。最后，如果是授权码认证模式，则需要 “user-authorization-uri”，如果是密码模式，需要 “access-token-uri” 来获取 token。我们通过它 “user-info-uri” 来获取认证中心的用户信息，从而判断该用户的权限，从而访问相应的资源。另外，上面的配置需要在 bootstrap 文件中，否则可能失败，大家可以试试。</strong></p><p>接下来，我们添加一般配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 2001</span><br><span class="line">  undertow:</span><br><span class="line">    uri-encoding: UTF-8</span><br><span class="line">    accesslog:</span><br><span class="line">      enabled: false</span><br><span class="line">      pattern: combined</span><br><span class="line">  servlet:</span><br><span class="line">    session:</span><br><span class="line">      timeout: PT120M</span><br><span class="line">      cookie:</span><br><span class="line">        name: PROVIDER-SERVICE-SESSIONID #防止Cookie冲突，冲突会导致登录验证不通过</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">backend:</span><br><span class="line">  ribbon:</span><br><span class="line">    client:</span><br><span class="line">      enabled: true</span><br><span class="line">    ServerListRefreshInterval: 5000</span><br><span class="line"></span><br><span class="line">ribbon:</span><br><span class="line">  ConnectTimeout: 3000</span><br><span class="line">  # 设置全局默认的ribbon的读超时</span><br><span class="line">  ReadTimeout: 1000</span><br><span class="line">  eager-load:</span><br><span class="line">    enabled: true</span><br><span class="line">    clients: oauth-cas,consumer-service</span><br><span class="line">  MaxAutoRetries: 1 #对第一次请求的服务的重试次数</span><br><span class="line">  MaxAutoRetriesNextServer: 1 #要重试的下一个服务的最大数量（不包括第一个服务）</span><br><span class="line">  #listOfServers: localhost:5556,localhost:5557</span><br><span class="line">  #ServerListRefreshInterval: 2000</span><br><span class="line">  OkToRetryOnAllOperations: true</span><br><span class="line">  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hystrix.command.BackendCall.execution.isolation.thread.timeoutInMilliseconds: 5000</span><br><span class="line">hystrix.threadpool.BackendCallThread.coreSize: 5</span><br></pre></td></tr></table></figure><p>这里，我们使用了 Ribbon 来做 LB，hystrix 来作熔断，最后需要注意的是：<strong>加上了 cookie name，防止 Cookie 冲突，冲突会导致登录验证不通过。</strong></p><p>配置启动类:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">@EnableAutoConfiguration</span><br><span class="line">@ComponentScan(basePackages &#x3D; &#123;&quot;com.damon&quot;&#125;)</span><br><span class="line">@EnableDiscoveryClient</span><br><span class="line">@EnableOAuth2Sso</span><br><span class="line">public class ProviderApp &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(ProviderApp.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们在上面配置了所有带有 “/api/**“ 的路径请求，都会加以拦截，根据用户的信息来判断其是否有权限访问。</p><p>写一个简单的测试类:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;&#x2F;api&#x2F;user&quot;)</span><br><span class="line">public class UserController &#123;</span><br><span class="line"></span><br><span class="line">private static final Logger logger &#x3D; LoggerFactory.getLogger(UserController.class);</span><br><span class="line"></span><br><span class="line">@Autowired</span><br><span class="line">private UserService userService;</span><br><span class="line"></span><br><span class="line">  @PreAuthorize(&quot;hasAuthority(&#39;admin&#39;)&quot;)</span><br><span class="line">    @GetMapping(&quot;&#x2F;auth&#x2F;admin&quot;)</span><br><span class="line">    public Object adminAuth() &#123;</span><br><span class="line">    logger.info(&quot;test password mode&quot;);</span><br><span class="line">        return &quot;Has admin auth!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码表示：如果用户具有 “admin” 的权限，则能够访问该接口，否则会被拒绝。</p><p>本文用的是 alibaba 的组件来作 LB，具体可以看前面的文章，用域名来找到服务。同时也加上了网关 Gateway。</p><p>最后，我们先来通过密码模式来进行认证吧:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X POST -d &quot;username&#x3D;admin&amp;password&#x3D;123456&amp;grant_type&#x3D;password&amp;client_id&#x3D;provider-service&amp;client_secret&#x3D;provider-service-123&quot; http:&#x2F;&#x2F;localhost:5555&#x2F;oauth-cas&#x2F;oauth&#x2F;token</span><br></pre></td></tr></table></figure><p>认证成功后，会返回如下结果:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;access_token&quot;:&quot;d2066f68-665b-4038-9dbe-5dd1035e75a0&quot;,&quot;token_type&quot;:&quot;bearer&quot;,&quot;refresh_token&quot;:&quot;44009836-731c-4e6a-9cc3-274ce3af8c6b&quot;,&quot;expires_in&quot;:3599,&quot;scope&quot;:&quot;all&quot;&#125;</span><br></pre></td></tr></table></figure><p>接下来，我们通过 token 来访问接口:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -H &quot;Accept: application&#x2F;json&quot; -H &quot;Authorization:bearer d2066f68-665b-4038-9dbe-5dd1035e75a0&quot; -X GET http:&#x2F;&#x2F;localhost:5555&#x2F;provider-service&#x2F;api&#x2F;user&#x2F;auth&#x2F;admin</span><br></pre></td></tr></table></figure><p>成功会返回结果:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Has admin auth!</span><br></pre></td></tr></table></figure><p>token 如果失效，会返回:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;error&quot;:&quot;invalid_token&quot;,&quot;error_description&quot;:&quot;d2066f68-665b-4038-9dbe-5dd1035e75a01&quot;&#125;</span><br></pre></td></tr></table></figure><br><br><br><h2 id="3、GitHub-的授权应用案例"><a href="#3、GitHub-的授权应用案例" class="headerlink" title="3、GitHub 的授权应用案例"></a>3、GitHub 的授权应用案例</h2><br><br><p>如果你的应用想要接入 GitHub，则可以通过如下办法来实现。</p><p>首先注册一个 GitHub 账号，登陆后，找到设置，打开页面，最下面有一个开发者设置：</p><p><img src="https://imgkr.cn-bj.ufileos.com/cad014e3-6542-4b6c-8fde-9268819bb38e.png" alt=""></p><p>找到后，点击，可以看到三个，可以选择第二个方式来接入：</p><p><img src="https://imgkr.cn-bj.ufileos.com/5c0a7b00-6980-4596-89c2-07fea678ca5b.png" alt=""></p><p>可以新增你的应用 app，新建时，应用名、回调地址必填项：</p><p><img src="https://imgkr.cn-bj.ufileos.com/03769bc7-d9b8-4350-a07a-16fb42a49af2.png" alt=""></p><p>最后，完成后会生成一个 Client ID、Client Secret。</p><p>然后利用 Github 官方给的文档来进行认证、接入，授权逻辑：</p><p>1.在注册完信息后生成了 Client ID、Client Secret，首先，用户点击 github 登录本地应用引导用户跳转到第三方授权页跳转地址:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;login&#x2F;oauth&#x2F;authorize?client_id&#x3D;&#123;client_id&#125;&amp;redirect_uri&#x3D;&#123;redirect_uri&#125;&amp;state&#x3D;&#123;state&#125;</span><br></pre></td></tr></table></figure><p>其中，client_id，client_secret 是注册好 Oauth APP 后 github 提供的，需要写在本地代码或者配置文件中，state 也是在本地生成的。redirect_uri 就是在 GitHub 官网填的 Authorization callback URL。此时带着 state 等参数去申请授权，但此时尚未登陆，未能通过 authorize，GitHub 返回 code 参数。</p><p>2.授权成功后会重定向带参数访问上面的 redirect_uri，并多了一个 code 参数<br>后台接收 code 这个参数,我们带着这个 code 再次访问 github 地址:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;login&#x2F;oauth&#x2F;access_token?client_id&#x3D;xxx&amp;client_secret&#x3D;xxx&amp;code&#x3D;xxx&amp;redirect_uri&#x3D;http:&#x2F;&#x2F;localhost:3001&#x2F;authCallback</span><br></pre></td></tr></table></figure><p>注意：上面的 redirect_uri 要与之前在新建 app 时填写的保持一直，否则会报错。</p><p>3.通过 state 参数和 code 参数，成功获取 access_token<br>有了 access_token，只需要把 access_token 参数放在 URL 后面即可，就可以换取用户信息了。访问地址:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;api.github.com&#x2F;user?access_token&#x3D;xxx</span><br></pre></td></tr></table></figure><p>4.得到 GitHub 授权用户的个人信息，就表明授权成功。</p><br><br><br><h2 id="4、微服务安全架构设计"><a href="#4、微服务安全架构设计" class="headerlink" title="4、微服务安全架构设计"></a>4、微服务安全架构设计</h2><br><br><p>在微服务中，安全性是一个很重要的问题。我们经常比较多的场景是：服务 A 需要调用服务 B，但是问题来了，到底是走外网调用呢？还是走局域网调用呢？这当然看 A、B 是否在同一个网段，如果在同一个局域网段，那肯定走局域网好。为什么呢？因为局域网快呀，如果说还有理由吗？当然有：除了网络快，降低网络开销，还可以保证安全性，不至于被黑客黑掉。这是安全的一个保证。</p><p>那么除了上面说的安全性，还有其他的吗？比如：在一个局域网下，有 N 个微服务模块，但是这些微服务并不想完全直接暴露给外部，这时候，就需要一个网关 Gateway 来处理。网关把所有的服务给路由了，就像在所有的服务上面一层，加了一个保护光环，突出<strong>高内聚</strong>的含义。同时还可以加上一些拦截，安全的拦截，鉴权、认证等。存在通过 token 的鉴权，也可以通过 jwt 的，等等。有时候，可以借助 redis 通过 session 共享。也可以通过 OAuth2 的鉴权模式来实现安全拦截。</p><p>最后安全性的考虑是在每个服务的接口设计上，比如：<strong>幂等</strong>的存在，让很多恶意攻击成为无用之功。更多的介绍可以看下面:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;mp.weixin.qq.com&#x2F;s&#x2F;G3yhwvLVTu_T5uPxgZD00w</span><br></pre></td></tr></table></figure><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>k8s master机器文件系统故障的一次恢复过程</title>
    <link href="http://www.damon8.cn/2020/07/23/k8s-01/"/>
    <id>http://www.damon8.cn/2020/07/23/k8s-01/</id>
    <published>2020-07-23T07:23:59.000Z</published>
    <updated>2020-11-04T08:43:58.482Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>研发反馈他们那边一套集群有台master文件系统损坏无法开机，他们是三台openstack上的虚机，是虚拟化宿主机故障导致的虚机文件系统损坏。三台机器是master+node，指导他修复后开机，修复过程和我之前文章opensuse的一次救援步骤一样</p><p>起来后我上去看，因为做了 HA 的，所以只有这个node有问题，集群没影响</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-m1 ~]# kubectl get node -o wide</span><br><span class="line">NAME             STATUS     ROLES    AGE   VERSION   INTERNAL-IP      EXTERNAL-IP   OS-IMAGE                KERNEL-VERSION                CONTAINER-RUNTIME</span><br><span class="line">10.252.146.104   NotReady   &lt;none&gt;   30d   v1.16.9   10.252.146.104   &lt;none&gt;        CentOS Linux 8 (Core)   4.18.0-193.6.3.el8_2.x86_64   docker:&#x2F;&#x2F;19.3.11</span><br><span class="line">10.252.146.105   Ready      &lt;none&gt;   30d   v1.16.9   10.252.146.105   &lt;none&gt;        CentOS Linux 8 (Core)   4.18.0-193.6.3.el8_2.x86_64   docker:&#x2F;&#x2F;19.3.11</span><br><span class="line">10.252.146.106   Ready      &lt;none&gt;   30d   v1.16.9   10.252.146.106   &lt;none&gt;        CentOS Linux 8 (Core)   4.18.0-193.6.3.el8_2.x86_64   docker:&#x2F;&#x2F;19.3.11</span><br></pre></td></tr></table></figure><p>启动docker试试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-m1 ~]# systemctl start docker</span><br><span class="line">Job for docker.service canceled.</span><br></pre></td></tr></table></figure><p>无法启动，查看下启动失败的服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-m1 ~]# systemctl --failed</span><br><span class="line">  UNIT               LOAD   ACTIVE SUB    DESCRIPTION</span><br><span class="line">● containerd.service loaded failed failed containerd container runtime</span><br></pre></td></tr></table></figure><p>查看下containerd的日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-m1 ~]# journalctl -xe -u containerd</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.481459735+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.service.v1.snapshots-service&quot;...&quot; type&#x3D;io.containerd.service.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.481472223+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.runtime.v1.linux&quot;...&quot; type&#x3D;io.containerd.runtime.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.481517630+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.runtime.v2.task&quot;...&quot; type&#x3D;io.containerd.runtime.v2</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.481562176+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.monitor.v1.cgroups&quot;...&quot; type&#x3D;io.containerd.monitor.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.481964349+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.service.v1.tasks-service&quot;...&quot; type&#x3D;io.containerd.service.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.481996158+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.internal.v1.restart&quot;...&quot; type&#x3D;io.containerd.internal.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.482048208+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.containers&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.482081110+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.content&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.482096598+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.diff&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.482112263+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.events&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.482123307+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.healthcheck&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.482133477+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.images&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.482142943+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.leases&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.482151644+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.namespaces&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.482160741+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.internal.v1.opt&quot;...&quot; type&#x3D;io.containerd.internal.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.482184201+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.snapshots&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.482194643+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.tasks&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.482206871+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.version&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.482215454+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.introspection&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.482365838+08:00&quot; level&#x3D;info msg&#x3D;serving... address&#x3D;&quot;&#x2F;run&#x2F;containerd&#x2F;containerd.sock&quot;</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: time&#x3D;&quot;2020-07-23T11:20:11.482404139+08:00&quot; level&#x3D;info msg&#x3D;&quot;containerd successfully booted in 0.003611s&quot;</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: panic: runtime error: invalid memory address or nil pointer dereference</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: [signal SIGSEGV: segmentation violation code&#x3D;0x1 addr&#x3D;0x8 pc&#x3D;0x5626b983c259]</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: goroutine 55 [running]:</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: github.com&#x2F;containerd&#x2F;containerd&#x2F;vendor&#x2F;go.etcd.io&#x2F;bbolt.(*Bucket).Cursor(...)</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]:         &#x2F;go&#x2F;src&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;vendor&#x2F;go.etcd.io&#x2F;bbolt&#x2F;bucket.go:84</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: github.com&#x2F;containerd&#x2F;containerd&#x2F;vendor&#x2F;go.etcd.io&#x2F;bbolt.(*Bucket).Get(0x0, 0x5626bb7e3f10, 0xb, 0xb, 0x0, 0x2, 0x4)</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]:         &#x2F;go&#x2F;src&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;vendor&#x2F;go.etcd.io&#x2F;bbolt&#x2F;bucket.go:260 +0x39</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: github.com&#x2F;containerd&#x2F;containerd&#x2F;metadata.scanRoots.func6(0x7fe557c63020, 0x2, 0x2, 0x0, 0x0, 0x0, 0x0, 0x5626b95eec72)</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]:         &#x2F;go&#x2F;src&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;metadata&#x2F;gc.go:222 +0xcb</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: github.com&#x2F;containerd&#x2F;containerd&#x2F;vendor&#x2F;go.etcd.io&#x2F;bbolt.(*Bucket).ForEach(0xc0003d1780, 0xc00057b640, 0xa, 0xa)</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]:         &#x2F;go&#x2F;src&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;vendor&#x2F;go.etcd.io&#x2F;bbolt&#x2F;bucket.go:388 +0x100</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: github.com&#x2F;containerd&#x2F;containerd&#x2F;metadata.scanRoots(0x5626bacedde0, 0xc0003d1680, 0xc0002ee2a0, 0xc00031a3c0, 0xc000527a60, 0x7fe586a43fff)</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]:         &#x2F;go&#x2F;src&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;metadata&#x2F;gc.go:216 +0x4df</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: github.com&#x2F;containerd&#x2F;containerd&#x2F;metadata.(*DB).getMarked.func1(0xc0002ee2a0, 0x0, 0x0)</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]:         &#x2F;go&#x2F;src&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;metadata&#x2F;db.go:359 +0x165</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: github.com&#x2F;containerd&#x2F;containerd&#x2F;vendor&#x2F;go.etcd.io&#x2F;bbolt.(*DB).View(0xc00000c1e0, 0xc00008b860, 0x0, 0x0)</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]:         &#x2F;go&#x2F;src&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;vendor&#x2F;go.etcd.io&#x2F;bbolt&#x2F;db.go:701 +0x92</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: github.com&#x2F;containerd&#x2F;containerd&#x2F;metadata.(*DB).getMarked(0xc0000a0a80, 0x5626bacede20, 0xc0000d6010, 0x203000, 0x203000, 0x400)</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]:         &#x2F;go&#x2F;src&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;metadata&#x2F;db.go:342 +0x7e</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: github.com&#x2F;containerd&#x2F;containerd&#x2F;metadata.(*DB).GarbageCollect(0xc0000a0a80, 0x5626bacede20, 0xc0000d6010, 0x0, 0x1, 0x0, 0x0)</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]:         &#x2F;go&#x2F;src&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;metadata&#x2F;db.go:257 +0xa3</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: github.com&#x2F;containerd&#x2F;containerd&#x2F;gc&#x2F;scheduler.(*gcScheduler).run(0xc0000a0b40, 0x5626bacede20, 0xc0000d6010)</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]:         &#x2F;go&#x2F;src&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;gc&#x2F;scheduler&#x2F;scheduler.go:310 +0x511</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: created by github.com&#x2F;containerd&#x2F;containerd&#x2F;gc&#x2F;scheduler.init.0.func1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]:         &#x2F;go&#x2F;src&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;gc&#x2F;scheduler&#x2F;scheduler.go:132 +0x462</span><br><span class="line">Jul 23 11:20:11 k8s-m1 systemd[1]: containerd.service: Main process exited, code&#x3D;exited, status&#x3D;2&#x2F;INVALIDARGUMENT</span><br><span class="line">Jul 23 11:20:11 k8s-m1 systemd[1]: containerd.service: Failed with result &#39;exit-code&#39;.</span><br></pre></td></tr></table></figure><p>这个问题从panic抛出的堆栈信息看和我之前文章docker启动panic很类似，都是 boltdb 文件出错，找下 git 信息去看看代码路径在哪</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-m1 ~]# systemctl cat containerd | grep ExecStart</span><br><span class="line">ExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe overlay</span><br><span class="line">ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;containerd</span><br><span class="line"></span><br><span class="line">[root@k8s-m1 ~]# &#x2F;usr&#x2F;bin&#x2F;containerd --version</span><br><span class="line">containerd containerd.io 1.2.13 7ad184331fa3e55e52b890ea95e65ba581ae3429</span><br></pre></td></tr></table></figure><p>按照这个blob去用github的url访问是404，只有去按照tag版本查看了，根据相关代码找到了 boltdb 的文件名是meta.db</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;blob&#x2F;v1.2.13&#x2F;metadata&#x2F;db.go#L257</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;blob&#x2F;v1.2.13&#x2F;metadata&#x2F;db.go#L79</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;blob&#x2F;v1.2.13&#x2F;services&#x2F;server&#x2F;server.go#L261-L268</span><br></pre></td></tr></table></figure><p>查找下ic.Root路径是多少</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-m1 ~]# &#x2F;usr&#x2F;bin&#x2F;containerd --help | grep config</span><br><span class="line">     config    information on the containerd config</span><br><span class="line">   --config value, -c value     path to the configuration file (default: &quot;&#x2F;etc&#x2F;containerd&#x2F;config.toml&quot;)</span><br><span class="line"></span><br><span class="line">[root@k8s-m1 ~]# grep root &#x2F;etc&#x2F;containerd&#x2F;config.toml</span><br><span class="line">#root &#x3D; &quot;&#x2F;var&#x2F;lib&#x2F;containerd&quot;</span><br><span class="line">[root@k8s-m1 ~]]# find &#x2F;var&#x2F;lib&#x2F;containerd -type f -name meta.db</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;containerd&#x2F;io.containerd.metadata.v1.bolt&#x2F;meta.db</span><br></pre></td></tr></table></figure><p>找到boltdb文件，改名启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-m1 ~]]# mv &#x2F;var&#x2F;lib&#x2F;containerd&#x2F;io.containerd.metadata.v1.bolt&#x2F;meta.db&#123;,.bak&#125;</span><br><span class="line">[root@k8s-m1 ~]# systemctl status containerd.service</span><br><span class="line">● containerd.service - containerd container runtime</span><br><span class="line">   Loaded: loaded (&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;containerd.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: failed (Result: exit-code) since Thu 2020-07-23 11:20:11 CST; 17min ago</span><br><span class="line">     Docs: https:&#x2F;&#x2F;containerd.io</span><br><span class="line">  Process: 9186 ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;containerd (code&#x3D;exited, status&#x3D;2)</span><br><span class="line">  Process: 9182 ExecStartPre&#x3D;&#x2F;sbin&#x2F;modprobe overlay (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)</span><br><span class="line"> Main PID: 9186 (code&#x3D;exited, status&#x3D;2)</span><br><span class="line"></span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: github.com&#x2F;containerd&#x2F;containerd&#x2F;metadata.(*DB).getMarked(0xc0000a0a80, 0x5626bacede20, 0xc0000d6010, 0x203000, 0x203000, 0x400)</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]:         &#x2F;go&#x2F;src&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;metadata&#x2F;db.go:342 +0x7e</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: github.com&#x2F;containerd&#x2F;containerd&#x2F;metadata.(*DB).GarbageCollect(0xc0000a0a80, 0x5626bacede20, 0xc0000d6010, 0x0, 0x1, 0x0, 0x0)</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]:         &#x2F;go&#x2F;src&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;metadata&#x2F;db.go:257 +0xa3</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: github.com&#x2F;containerd&#x2F;containerd&#x2F;gc&#x2F;scheduler.(*gcScheduler).run(0xc0000a0b40, 0x5626bacede20, 0xc0000d6010)</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]:         &#x2F;go&#x2F;src&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;gc&#x2F;scheduler&#x2F;scheduler.go:310 +0x511</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]: created by github.com&#x2F;containerd&#x2F;containerd&#x2F;gc&#x2F;scheduler.init.0.func1</span><br><span class="line">Jul 23 11:20:11 k8s-m1 containerd[9186]:         &#x2F;go&#x2F;src&#x2F;github.com&#x2F;containerd&#x2F;containerd&#x2F;gc&#x2F;scheduler&#x2F;scheduler.go:132 +0x462</span><br><span class="line">Jul 23 11:20:11 k8s-m1 systemd[1]: containerd.service: Main process exited, code&#x3D;exited, status&#x3D;2&#x2F;INVALIDARGUMENT</span><br><span class="line">Jul 23 11:20:11 k8s-m1 systemd[1]: containerd.service: Failed with result &#39;exit-code&#39;.</span><br><span class="line">[root@k8s-m1 ~]# systemctl restart containerd.service</span><br><span class="line">[root@k8s-m1 ~]# systemctl status containerd.service</span><br><span class="line">● containerd.service - containerd container runtime</span><br><span class="line">   Loaded: loaded (&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;containerd.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Thu 2020-07-23 11:25:37 CST; 1s ago</span><br><span class="line">     Docs: https:&#x2F;&#x2F;containerd.io</span><br><span class="line">  Process: 15661 ExecStartPre&#x3D;&#x2F;sbin&#x2F;modprobe overlay (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)</span><br><span class="line"> Main PID: 15663 (containerd)</span><br><span class="line">    Tasks: 16</span><br><span class="line">   Memory: 28.6M</span><br><span class="line">   CGroup: &#x2F;system.slice&#x2F;containerd.service</span><br><span class="line">           └─15663 &#x2F;usr&#x2F;bin&#x2F;containerd</span><br><span class="line"></span><br><span class="line">Jul 23 11:25:37 k8s-m1 containerd[15663]: time&#x3D;&quot;2020-07-23T11:25:37.496725460+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.images&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:25:37 k8s-m1 containerd[15663]: time&#x3D;&quot;2020-07-23T11:25:37.496734129+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.leases&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:25:37 k8s-m1 containerd[15663]: time&#x3D;&quot;2020-07-23T11:25:37.496742793+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.namespaces&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:25:37 k8s-m1 containerd[15663]: time&#x3D;&quot;2020-07-23T11:25:37.496751740+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.internal.v1.opt&quot;...&quot; type&#x3D;io.containerd.internal.v1</span><br><span class="line">Jul 23 11:25:37 k8s-m1 containerd[15663]: time&#x3D;&quot;2020-07-23T11:25:37.496775185+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.snapshots&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:25:37 k8s-m1 containerd[15663]: time&#x3D;&quot;2020-07-23T11:25:37.496785498+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.tasks&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:25:37 k8s-m1 containerd[15663]: time&#x3D;&quot;2020-07-23T11:25:37.496794873+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.version&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:25:37 k8s-m1 containerd[15663]: time&#x3D;&quot;2020-07-23T11:25:37.496803178+08:00&quot; level&#x3D;info msg&#x3D;&quot;loading plugin &quot;io.containerd.grpc.v1.introspection&quot;...&quot; type&#x3D;io.containerd.grpc.v1</span><br><span class="line">Jul 23 11:25:37 k8s-m1 containerd[15663]: time&#x3D;&quot;2020-07-23T11:25:37.496944458+08:00&quot; level&#x3D;info msg&#x3D;serving... address&#x3D;&quot;&#x2F;run&#x2F;containerd&#x2F;containerd.sock&quot;</span><br><span class="line">Jul 23 11:25:37 k8s-m1 containerd[15663]: time&#x3D;&quot;2020-07-23T11:25:37.496958031+08:00&quot; level&#x3D;info msg&#x3D;&quot;containerd successfully booted in 0.003994s&quot;</span><br></pre></td></tr></table></figure><p>containerd 起来后，启动下 docker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-m1 ~]# systemctl status docker</span><br><span class="line">● docker.service - Docker Application Container Engine</span><br><span class="line">   Loaded: loaded (&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service; enabled; vendor preset: disabled)</span><br><span class="line">  Drop-In: &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service.d</span><br><span class="line">           └─10-docker.conf</span><br><span class="line">   Active: inactive (dead) since Thu 2020-07-23 11:20:13 CST; 18min ago</span><br><span class="line">     Docs: https:&#x2F;&#x2F;docs.docker.com</span><br><span class="line">  Process: 9398 ExecStopPost&#x3D;&#x2F;bin&#x2F;bash -c &#x2F;sbin&#x2F;iptables -D FORWARD -s 0.0.0.0&#x2F;0 -j ACCEPT &amp;&gt; &#x2F;dev&#x2F;null || : (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)</span><br><span class="line">  Process: 9187 ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd -H fd:&#x2F;&#x2F; --containerd&#x3D;&#x2F;run&#x2F;containerd&#x2F;containerd.sock (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)</span><br><span class="line"> Main PID: 9187 (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)</span><br><span class="line"></span><br><span class="line">Jul 23 11:20:13 k8s-m1 dockerd[9187]: time&#x3D;&quot;2020-07-23T11:20:13.956503485+08:00&quot; level&#x3D;error msg&#x3D;&quot;Stop container error: Failed to stop container 68860c8d16b9ce7e74e8efd9db00e70a57eef1b752c2e6c703073c0bce5517d3 with error: Cannot kill c&gt;</span><br><span class="line">Jul 23 11:20:13 k8s-m1 dockerd[9187]: time&#x3D;&quot;2020-07-23T11:20:13.954347116+08:00&quot; level&#x3D;error msg&#x3D;&quot;Stop container error: Failed to stop container 5ec9922beed1276989f1866c3fd911f37cc26aae4e4b27c7ce78183a9a4725cc with error: Cannot kill c&gt;</span><br><span class="line">Jul 23 11:20:13 k8s-m1 dockerd[9187]: time&#x3D;&quot;2020-07-23T11:20:13.953615411+08:00&quot; level&#x3D;info msg&#x3D;&quot;Container failed to stop after sending signal 15 to the process, force killing&quot;</span><br><span class="line">Jul 23 11:20:13 k8s-m1 dockerd[9187]: time&#x3D;&quot;2020-07-23T11:20:13.956557179+08:00&quot; level&#x3D;error msg&#x3D;&quot;Stop container error: Failed to stop container 6d0096fbcd4055f8bafb6b38f502a0186cd1dfca34219e9dd6050f512971aef5 with error: Cannot kill c&gt;</span><br><span class="line">Jul 23 11:20:13 k8s-m1 dockerd[9187]: time&#x3D;&quot;2020-07-23T11:20:13.954601191+08:00&quot; level&#x3D;info msg&#x3D;&quot;Container failed to stop after sending signal 15 to the process, force killing&quot;</span><br><span class="line">Jul 23 11:20:13 k8s-m1 dockerd[9187]: time&#x3D;&quot;2020-07-23T11:20:13.956600790+08:00&quot; level&#x3D;error msg&#x3D;&quot;Stop container error: Failed to stop container 6d1175ba6c55cb05ad89f4134ba8e9d3495c5acb5f07938dc16339b7cca013bf with error: Cannot kill c&gt;</span><br><span class="line">Jul 23 11:20:13 k8s-m1 dockerd[9187]: time&#x3D;&quot;2020-07-23T11:20:13.957188989+08:00&quot; level&#x3D;info msg&#x3D;&quot;Daemon shutdown complete&quot;</span><br><span class="line">Jul 23 11:20:13 k8s-m1 dockerd[9187]: time&#x3D;&quot;2020-07-23T11:20:13.957212655+08:00&quot; level&#x3D;info msg&#x3D;&quot;stopping event stream following graceful shutdown&quot; error&#x3D;&quot;context canceled&quot; module&#x3D;libcontainerd namespace&#x3D;plugins.moby</span><br><span class="line">Jul 23 11:20:13 k8s-m1 dockerd[9187]: time&#x3D;&quot;2020-07-23T11:20:13.957209679+08:00&quot; level&#x3D;info msg&#x3D;&quot;stopping event stream following graceful shutdown&quot; error&#x3D;&quot;context canceled&quot; module&#x3D;libcontainerd namespace&#x3D;moby</span><br><span class="line">Jul 23 11:20:13 k8s-m1 systemd[1]: Stopped Docker Application Container Engine.</span><br><span class="line">[root@k8s-m1 ~]# systemctl start docker</span><br><span class="line">[root@k8s-m1 ~]# systemctl status docker</span><br><span class="line">● docker.service - Docker Application Container Engine</span><br><span class="line">   Loaded: loaded (&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service; enabled; vendor preset: disabled)</span><br><span class="line">  Drop-In: &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service.d</span><br><span class="line">           └─10-docker.conf</span><br><span class="line">   Active: active (running) since Thu 2020-07-23 11:26:11 CST; 1s ago</span><br><span class="line">     Docs: https:&#x2F;&#x2F;docs.docker.com</span><br><span class="line">  Process: 9398 ExecStopPost&#x3D;&#x2F;bin&#x2F;bash -c &#x2F;sbin&#x2F;iptables -D FORWARD -s 0.0.0.0&#x2F;0 -j ACCEPT &amp;&gt; &#x2F;dev&#x2F;null || : (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)</span><br><span class="line">  Process: 16156 ExecStartPost&#x3D;&#x2F;sbin&#x2F;iptables -I FORWARD -s 0.0.0.0&#x2F;0 -j ACCEPT (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)</span><br><span class="line"> Main PID: 15974 (dockerd)</span><br><span class="line">    Tasks: 62</span><br><span class="line">   Memory: 89.1M</span><br><span class="line">   CGroup: &#x2F;system.slice&#x2F;docker.service</span><br><span class="line">           └─15974 &#x2F;usr&#x2F;bin&#x2F;dockerd -H fd:&#x2F;&#x2F; --containerd&#x3D;&#x2F;run&#x2F;containerd&#x2F;containerd.sock</span><br><span class="line"></span><br><span class="line">Jul 23 11:26:10 k8s-m1 dockerd[15974]: time&#x3D;&quot;2020-07-23T11:26:10.851106564+08:00&quot; level&#x3D;error msg&#x3D;&quot;cb4e16249cd8eac48ed734c71237195f04d63c56c55c0199b3cdf3d49461903d cleanup: failed to delete container from containerd: no such container&quot;</span><br><span class="line">Jul 23 11:26:10 k8s-m1 dockerd[15974]: time&#x3D;&quot;2020-07-23T11:26:10.860456898+08:00&quot; level&#x3D;error msg&#x3D;&quot;d9bbcab186ccb59f96c95fc886ec1b66a52aa96e45b117cf7d12e3ff9b95db9f cleanup: failed to delete container from containerd: no such container&quot;</span><br><span class="line">Jul 23 11:26:10 k8s-m1 dockerd[15974]: time&#x3D;&quot;2020-07-23T11:26:10.872405757+08:00&quot; level&#x3D;error msg&#x3D;&quot;07eb7a09bc8589abcb4d79af4b46798327bfb00624a7b9ceea457de392ad8f3d cleanup: failed to delete container from containerd: no such container&quot;</span><br><span class="line">Jul 23 11:26:10 k8s-m1 dockerd[15974]: time&#x3D;&quot;2020-07-23T11:26:10.877896618+08:00&quot; level&#x3D;error msg&#x3D;&quot;f5867657025bd7c3951cbd3e08ad97338cf69df2a97967a419e0e78eda869b73 cleanup: failed to delete container from containerd: no such container&quot;</span><br><span class="line">Jul 23 11:26:11 k8s-m1 dockerd[15974]: time&#x3D;&quot;2020-07-23T11:26:11.143661583+08:00&quot; level&#x3D;info msg&#x3D;&quot;Default bridge (docker0) is assigned with an IP address 172.17.0.0&#x2F;16. Daemon option --bip can be used to set a preferred IP address&quot;</span><br><span class="line">Jul 23 11:26:11 k8s-m1 dockerd[15974]: time&#x3D;&quot;2020-07-23T11:26:11.198200760+08:00&quot; level&#x3D;info msg&#x3D;&quot;Loading containers: done.&quot;</span><br><span class="line">Jul 23 11:26:11 k8s-m1 dockerd[15974]: time&#x3D;&quot;2020-07-23T11:26:11.219959208+08:00&quot; level&#x3D;info msg&#x3D;&quot;Docker daemon&quot; commit&#x3D;42e35e61f3 graphdriver(s)&#x3D;overlay2 version&#x3D;19.03.11</span><br><span class="line">Jul 23 11:26:11 k8s-m1 dockerd[15974]: time&#x3D;&quot;2020-07-23T11:26:11.220049865+08:00&quot; level&#x3D;info msg&#x3D;&quot;Daemon has completed initialization&quot;</span><br><span class="line">Jul 23 11:26:11 k8s-m1 dockerd[15974]: time&#x3D;&quot;2020-07-23T11:26:11.232373131+08:00&quot; level&#x3D;info msg&#x3D;&quot;API listen on &#x2F;var&#x2F;run&#x2F;docker.sock&quot;</span><br><span class="line">Jul 23 11:26:11 k8s-m1 systemd[1]: Started Docker Application Container Engine.</span><br></pre></td></tr></table></figure><p>etcd启动也失败，journal 查看下 etcd 状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-m1 ~]# journalctl -xe -u etcd</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: Loading server configuration from &quot;&#x2F;etc&#x2F;etcd&#x2F;etcd.config.yml&quot;</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: etcd Version: 3.3.20</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: Git SHA: 9fd7e2b80</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: Go Version: go1.12.17</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: Go OS&#x2F;Arch: linux&#x2F;amd64</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: setting maximum number of CPUs to 16, total number of available CPUs is 16</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: found invalid file&#x2F;dir wal under data dir &#x2F;var&#x2F;lib&#x2F;etcd (Ignore this if you are upgrading etcd)</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: the server is already initialized as member before, starting as etcd member...</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: ignoring peer auto TLS since certs given</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: peerTLS: cert &#x3D; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;peer.crt, key &#x3D; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;peer.key, ca &#x3D; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;ca.crt, trusted-ca &#x3D; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;ca.crt, client-cert-auth &#x3D; fals&gt;</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: listening for peers on https:&#x2F;&#x2F;10.252.146.104:2380</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: ignoring client auto TLS since certs given</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: pprof is enabled under &#x2F;debug&#x2F;pprof</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: The scheme of client url http:&#x2F;&#x2F;127.0.0.1:2379 is HTTP while peer key&#x2F;cert files are presented. Ignored key&#x2F;cert files.</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: The scheme of client url http:&#x2F;&#x2F;127.0.0.1:2379 is HTTP while client cert auth (--client-cert-auth) is enabled. Ignored client cert auth for this url.</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: listening for client requests on 127.0.0.1:2379</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: listening for client requests on 10.252.146.104:2379</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: skipped unexpected non snapshot file 000000000000002e-000000000052f2be.snap.broken</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: recovered store from snapshot at index 5426092</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: restore compact to 3967425</span><br><span class="line">Jul 23 11:26:15 k8s-m1 etcd[18129]: cannot unmarshal event: proto: KeyValue: illegal tag 0 (wire type 0)</span><br><span class="line">Jul 23 11:26:15 k8s-m1 systemd[1]: etcd.service: Main process exited, code&#x3D;exited, status&#x3D;1&#x2F;FAILURE</span><br><span class="line">Jul 23 11:26:15 k8s-m1 systemd[1]: etcd.service: Failed with result &#39;exit-code&#39;.</span><br><span class="line">Jul 23 11:26:15 k8s-m1 systemd[1]: Failed to start Etcd Service.</span><br><span class="line">[root@k8s-m1 ~]# ll &#x2F;var&#x2F;lib&#x2F;etcd&#x2F;member&#x2F;snap&#x2F;</span><br><span class="line">total 8560</span><br><span class="line">-rw-r--r-- 1 root root   13499 Jul 20 13:36 000000000000002e-000000000052cbac.snap</span><br><span class="line">-rw-r--r-- 2 root root  128360 Jul 20 13:01 000000000000002e-000000000052f2be.snap.broken</span><br><span class="line">-rw------- 1 root root 8617984 Jul 23 11:26 db</span><br></pre></td></tr></table></figure><p>这套集群是使用我的ansible部署，求star的，自带了备份脚本，但是是三天前坏的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-m1 ~]# ll &#x2F;opt&#x2F;etcd_bak&#x2F;</span><br><span class="line">total 41524</span><br><span class="line">-rw-r--r-- 1 root root 8618016 Jul 17 02:00 etcd-2020-07-17-02:00:01.db</span><br><span class="line">-rw-r--r-- 1 root root 8618016 Jul 18 02:00 etcd-2020-07-18-02:00:01.db</span><br><span class="line">-rw-r--r-- 1 root root 8323104 Jul 19 02:00 etcd-2020-07-19-02:00:01.db</span><br><span class="line">-rw-r--r-- 1 root root 8618016 Jul 20 02:00 etcd-2020-07-20-02:00:01.db</span><br></pre></td></tr></table></figure><p>有恢复剧本，但是前提是etcd的v2和v3不能共存，否则无法恢复备份，我们线上都是把v2的存储关闭了的。主要是这个tasks里的26到42行步骤，这里复制了其他机器master上的 07/23 号的etcd备份文件，然后改了下host跑了下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-m1 ~]# cd Kubernetes-ansible</span><br><span class="line">[root@k8s-m1 Kubernetes-ansible]# ansible-playbook restoreETCD.yml -e &#39;db&#x3D;&#x2F;opt&#x2F;etcd_bak&#x2F;etcd-bak.db&#39;</span><br><span class="line"></span><br><span class="line">PLAY [10.252.146.104] **********************************************************************************************************************************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [Gathering Facts] *********************************************************************************************************************************************************************************************************************</span><br><span class="line">ok: [10.252.146.104]</span><br><span class="line"></span><br><span class="line">TASK [restoreETCD : fail] ******************************************************************************************************************************************************************************************************************</span><br><span class="line">skipping: [10.252.146.104]</span><br><span class="line"></span><br><span class="line">TASK [restoreETCD : 检测备份文件存在否] *************************************************************************************************************************************************************************************************************</span><br><span class="line">ok: [10.252.146.104]</span><br><span class="line"></span><br><span class="line">TASK [restoreETCD : fail] ******************************************************************************************************************************************************************************************************************</span><br><span class="line">skipping: [10.252.146.104]</span><br><span class="line"></span><br><span class="line">TASK [restoreETCD : set_fact] **************************************************************************************************************************************************************************************************************</span><br><span class="line">skipping: [10.252.146.104]</span><br><span class="line"></span><br><span class="line">TASK [restoreETCD : set_fact] **************************************************************************************************************************************************************************************************************</span><br><span class="line">ok: [10.252.146.104]</span><br><span class="line"></span><br><span class="line">TASK [restoreETCD : 停止etcd] ****************************************************************************************************************************************************************************************************************</span><br><span class="line">ok: [10.252.146.104]</span><br><span class="line"></span><br><span class="line">TASK [restoreETCD : 删除etcd数据目录] ************************************************************************************************************************************************************************************************************</span><br><span class="line">ok: [10.252.146.104] &#x3D;&gt; (item&#x3D;&#x2F;var&#x2F;lib&#x2F;etcd)</span><br><span class="line"></span><br><span class="line">TASK [restoreETCD : 分发备份文件] ****************************************************************************************************************************************************************************************************************</span><br><span class="line">ok: [10.252.146.104]</span><br><span class="line"></span><br><span class="line">TASK [restoreETCD : 恢复备份] ******************************************************************************************************************************************************************************************************************</span><br><span class="line">changed: [10.252.146.104]</span><br><span class="line"></span><br><span class="line">TASK [restoreETCD : 启动etcd] ****************************************************************************************************************************************************************************************************************</span><br><span class="line">fatal: [10.252.146.104]: FAILED! &#x3D;&gt; &#123;&quot;changed&quot;: false, &quot;msg&quot;: &quot;Unable to start service etcd: Job for etcd.service failed because the control process exited with error code.\nSee \&quot;systemctl status etcd.service\&quot; and \&quot;journalctl -xe\&quot; for details.\n&quot;&#125;</span><br><span class="line"></span><br><span class="line">PLAY RECAP *********************************************************************************************************************************************************************************************************************************</span><br><span class="line">10.252.146.104             : ok&#x3D;7    changed&#x3D;1    unreachable&#x3D;0    failed&#x3D;1    skipped&#x3D;3    rescued&#x3D;0    ignored&#x3D;0</span><br></pre></td></tr></table></figure><p>查看下日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-m1 Kubernetes-ansible]# journalctl -xe -u etcd</span><br><span class="line">Jul 23 11:27:46 k8s-m1 etcd[58954]: Loading server configuration from &quot;&#x2F;etc&#x2F;etcd&#x2F;etcd.config.yml&quot;</span><br><span class="line">Jul 23 11:27:46 k8s-m1 etcd[58954]: etcd Version: 3.3.20</span><br><span class="line">Jul 23 11:27:46 k8s-m1 etcd[58954]: Git SHA: 9fd7e2b80</span><br><span class="line">Jul 23 11:27:46 k8s-m1 etcd[58954]: Go Version: go1.12.17</span><br><span class="line">Jul 23 11:27:46 k8s-m1 etcd[58954]: Go OS&#x2F;Arch: linux&#x2F;amd64</span><br><span class="line">Jul 23 11:27:46 k8s-m1 etcd[58954]: setting maximum number of CPUs to 16, total number of available CPUs is 16</span><br><span class="line">Jul 23 11:27:46 k8s-m1 etcd[58954]: the server is already initialized as member before, starting as etcd member...</span><br><span class="line">Jul 23 11:27:46 k8s-m1 etcd[58954]: ignoring peer auto TLS since certs given</span><br><span class="line">Jul 23 11:27:46 k8s-m1 etcd[58954]: peerTLS: cert &#x3D; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;peer.crt, key &#x3D; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;peer.key, ca &#x3D; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;ca.crt, trusted-ca &#x3D; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;ca.crt, client-cert-auth &#x3D; fals&gt;</span><br><span class="line">Jul 23 11:27:46 k8s-m1 etcd[58954]: listening for peers on https:&#x2F;&#x2F;10.252.146.104:2380</span><br><span class="line">Jul 23 11:27:46 k8s-m1 etcd[58954]: ignoring client auto TLS since certs given</span><br><span class="line">Jul 23 11:27:46 k8s-m1 etcd[58954]: pprof is enabled under &#x2F;debug&#x2F;pprof</span><br><span class="line">Jul 23 11:27:46 k8s-m1 etcd[58954]: The scheme of client url http:&#x2F;&#x2F;127.0.0.1:2379 is HTTP while peer key&#x2F;cert files are presented. Ignored key&#x2F;cert files.</span><br><span class="line">Jul 23 11:27:46 k8s-m1 etcd[58954]: The scheme of client url http:&#x2F;&#x2F;127.0.0.1:2379 is HTTP while client cert auth (--client-cert-auth) is enabled. Ignored client cert auth for this url.</span><br><span class="line">Jul 23 11:27:46 k8s-m1 etcd[58954]: listening for client requests on 127.0.0.1:2379</span><br><span class="line">Jul 23 11:27:46 k8s-m1 etcd[58954]: listening for client requests on 10.252.146.104:2379</span><br><span class="line">Jul 23 11:27:47 k8s-m1 etcd[58954]: member ac2dcf6aed12e8f1 has already been bootstrapped</span><br><span class="line">Jul 23 11:27:47 k8s-m1 systemd[1]: etcd.service: Main process exited, code&#x3D;exited, status&#x3D;1&#x2F;FAILURE</span><br><span class="line">Jul 23 11:27:47 k8s-m1 systemd[1]: etcd.service: Failed with result &#39;exit-code&#39;.</span><br><span class="line">Jul 23 11:27:47 k8s-m1 systemd[1]: Failed to start Etcd Service.</span><br></pre></td></tr></table></figure><p>这个member xxxx has already been bootstrapped解决办法就是把配置文件的下面修改，后面启动完记得改回来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">initial-cluster-state: &#39;new&#39; 改成 initial-cluster-state: &#39;existing&#39;</span><br></pre></td></tr></table></figure><p>然后成功启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-m1 Kubernetes-ansible]# systemctl start etcd</span><br><span class="line">[root@k8s-m1 Kubernetes-ansible]# journalctl -xe -u etcd</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: Loading server configuration from &quot;&#x2F;etc&#x2F;etcd&#x2F;etcd.config.yml&quot;</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: etcd Version: 3.3.20</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: Git SHA: 9fd7e2b80</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: Go Version: go1.12.17</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: Go OS&#x2F;Arch: linux&#x2F;amd64</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: setting maximum number of CPUs to 16, total number of available CPUs is 16</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: found invalid file&#x2F;dir wal under data dir &#x2F;var&#x2F;lib&#x2F;etcd (Ignore this if you are upgrading etcd)</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: the server is already initialized as member before, starting as etcd member...</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: ignoring peer auto TLS since certs given</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: peerTLS: cert &#x3D; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;peer.crt, key &#x3D; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;peer.key, ca &#x3D; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;ca.crt, trusted-ca &#x3D; &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;ca.crt, client-cert-auth &#x3D; fals&gt;</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: listening for peers on https:&#x2F;&#x2F;10.252.146.104:2380</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: ignoring client auto TLS since certs given</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: pprof is enabled under &#x2F;debug&#x2F;pprof</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: The scheme of client url http:&#x2F;&#x2F;127.0.0.1:2379 is HTTP while peer key&#x2F;cert files are presented. Ignored key&#x2F;cert files.</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: The scheme of client url http:&#x2F;&#x2F;127.0.0.1:2379 is HTTP while client cert auth (--client-cert-auth) is enabled. Ignored client cert auth for this url.</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: listening for client requests on 127.0.0.1:2379</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: listening for client requests on 10.252.146.104:2379</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: recovered store from snapshot at index 5952463</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: restore compact to 4369703</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: name &#x3D; etcd-001</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: data dir &#x3D; &#x2F;var&#x2F;lib&#x2F;etcd</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: member dir &#x3D; &#x2F;var&#x2F;lib&#x2F;etcd&#x2F;member</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: dedicated WAL dir &#x3D; &#x2F;var&#x2F;lib&#x2F;etcd&#x2F;wal</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: heartbeat &#x3D; 100ms</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: election &#x3D; 1000ms</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: snapshot count &#x3D; 5000</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: advertise client URLs &#x3D; https:&#x2F;&#x2F;10.252.146.104:2379</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: restarting member ac2dcf6aed12e8f1 in cluster 367e2aebc6430cbe at commit index 5952491</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: ac2dcf6aed12e8f1 became follower at term 47</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: newRaft ac2dcf6aed12e8f1 [peers: [1e713be314744d53,8b1621b475555fd9,ac2dcf6aed12e8f1], term: 47, commit: 5952491, applied: 5952463, lastindex: 5952491, lastterm: 47]</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: enabled capabilities for version 3.3</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: added member 1e713be314744d53 [https:&#x2F;&#x2F;10.252.146.105:2380] to cluster 367e2aebc6430cbe from store</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: added member 8b1621b475555fd9 [https:&#x2F;&#x2F;10.252.146.106:2380] to cluster 367e2aebc6430cbe from store</span><br><span class="line">Jul 23 11:27:55 k8s-m1 etcd[59889]: added member ac2dcf6aed12e8f1 [https:&#x2F;&#x2F;10.252.146.104:2380] to cluster 367e2aebc6430cbe from store</span><br></pre></td></tr></table></figure><p>查看集群状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-m1 Kubernetes-ansible]# etcd-ha</span><br><span class="line">+-----------------------------+------------------+---------+---------+-----------+-----------+------------+</span><br><span class="line">|          ENDPOINT           |        ID        | VERSION | DB SIZE | IS LEADER | RAFT TERM | RAFT INDEX |</span><br><span class="line">+-----------------------------+------------------+---------+---------+-----------+-----------+------------+</span><br><span class="line">| https:&#x2F;&#x2F;10.252.146.104:2379 | ac2dcf6aed12e8f1 |  3.3.20 |  8.3 MB |     false |        47 |    5953557 |</span><br><span class="line">| https:&#x2F;&#x2F;10.252.146.105:2379 | 1e713be314744d53 |  3.3.20 |  8.6 MB |     false |        47 |    5953557 |</span><br><span class="line">| https:&#x2F;&#x2F;10.252.146.106:2379 | 8b1621b475555fd9 |  3.3.20 |  8.3 MB |      true |        47 |    5953557 |</span><br><span class="line">+-----------------------------+------------------+---------+---------+-----------+-----------+------------+</span><br></pre></td></tr></table></figure><p>然后给kube-apiserver三个组件和kubelet起来后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-m1 Kubernetes-ansible]# kubectl get node -o wide</span><br><span class="line">NAME             STATUS   ROLES    AGE   VERSION   INTERNAL-IP      EXTERNAL-IP   OS-IMAGE                KERNEL-VERSION                CONTAINER-RUNTIME</span><br><span class="line">10.252.146.104   Ready    &lt;none&gt;   30d   v1.16.9   10.252.146.104   &lt;none&gt;        CentOS Linux 8 (Core)   4.18.0-193.6.3.el8_2.x86_64   docker:&#x2F;&#x2F;19.3.11</span><br><span class="line">10.252.146.105   Ready    &lt;none&gt;   30d   v1.16.9   10.252.146.105   &lt;none&gt;        CentOS Linux 8 (Core)   4.18.0-193.6.3.el8_2.x86_64   docker:&#x2F;&#x2F;19.3.11</span><br><span class="line">10.252.146.106   Ready    &lt;none&gt;   30d   v1.16.9   10.252.146.106   &lt;none&gt;        CentOS Linux 8 (Core)   4.18.0-193.6.3.el8_2.x86_64   docker:&#x2F;&#x2F;19.3.11</span><br></pre></td></tr></table></figure><p>pod也在慢慢自愈了</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><code style="font-size: 20px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: red">特别声明 <br>原文作者：Zhangguanzhang <br>本文原链：http://zhangguanzhang.github.io/2020/07/23/fs-error-fix-k8s-master/ <br>本文转载如有侵权，请联系站长删除，谢谢 <br></code><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Spring Cloud Kubernetes之实战服务注册与发现</title>
    <link href="http://www.damon8.cn/2020/07/23/spring-cloud-k8s-discovery/"/>
    <id>http://www.damon8.cn/2020/07/23/spring-cloud-k8s-discovery/</id>
    <published>2020-07-23T01:38:22.000Z</published>
    <updated>2020-11-04T08:45:33.343Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>好久没写文章了，本文主讲利用 k8s 来实现服务的注册与发现，甚至负载均衡，简称 LB，完美无坑版！</p><p>环境：</p><pre><code>ubuntu16.04docker18.04k8s1.13.x +maven3.5.3java1.8 +springboot 2.1.1spring-cloud-kubernetes：1.0.1.RELEASE</code></pre><p>Relax</p><ol><li>前提</li></ol><p>Ubuntu下安装docker18.04 or 其它较高版本，k8s1.13.x及以上，jvm环境等。</p><ol start="2"><li>创建项目</li></ol><p>我们都知道，涉及到微服务，那必体现六个字，”高内聚，低耦合”，所以针对不同业务或应用场景，服务模块化很重要，这个不再赘述了。咱们先来创建服务提供方，同样，利用eclipse或IDEA创建一个项目，此处略了。</p><p>创建好项目之后，首先引入依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">            &lt;artifactId&gt;spring-boot-actuator&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">            &lt;artifactId&gt;spring-boot-actuator-autoconfigure&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-kubernetes-config&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">            &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-aop&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>其他数据库，中间件等，可根据项目自行添加。</p><p>同样，我们需要配置初始化bean，这就涉及到配置文件bootstrap.yaml：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"># we enable some of the management endpoints to make it possible to restart the application</span><br><span class="line"></span><br><span class="line">management:</span><br><span class="line"></span><br><span class="line">  endpoint:</span><br><span class="line"></span><br><span class="line">    restart:</span><br><span class="line"></span><br><span class="line">      enabled: true</span><br><span class="line"></span><br><span class="line">    health:</span><br><span class="line"></span><br><span class="line">      enabled: true</span><br><span class="line"></span><br><span class="line">    info:</span><br><span class="line"></span><br><span class="line">      enabled: true</span><br><span class="line"></span><br><span class="line">spring:</span><br><span class="line"></span><br><span class="line">  application:</span><br><span class="line"></span><br><span class="line">    name: edge-cas</span><br><span class="line"></span><br><span class="line">  cloud:</span><br><span class="line"></span><br><span class="line">    kubernetes:</span><br><span class="line"></span><br><span class="line">      reload:</span><br><span class="line"></span><br><span class="line">        #自动更新配置的开关设置为打开</span><br><span class="line"></span><br><span class="line">        enabled: true</span><br><span class="line"></span><br><span class="line">        #更新配置信息的模式：polling是主动拉取，event是事件通知</span><br><span class="line"></span><br><span class="line">        mode: event</span><br><span class="line"></span><br><span class="line">        #主动拉取的间隔时间是500毫秒</span><br><span class="line"></span><br><span class="line">        #period: 500</span><br><span class="line"></span><br><span class="line">      config:</span><br><span class="line"></span><br><span class="line">        sources:</span><br><span class="line"></span><br><span class="line">        - name: $&#123;spring.application.name&#125;</span><br><span class="line"></span><br><span class="line">          namespace: default</span><br><span class="line"></span><br><span class="line">      discovery:</span><br><span class="line"></span><br><span class="line">        all-namespaces: true</span><br><span class="line"></span><br><span class="line">  http:</span><br><span class="line"></span><br><span class="line">    encoding:</span><br><span class="line"></span><br><span class="line">      charset: UTF-8</span><br><span class="line"></span><br><span class="line">      enabled: true</span><br><span class="line"></span><br><span class="line">      force: true</span><br><span class="line"></span><br><span class="line">  mvc:</span><br><span class="line"></span><br><span class="line">    throw-exception-if-no-handler-found: true</span><br><span class="line"></span><br><span class="line">  main:</span><br><span class="line"></span><br><span class="line">    allow-bean-definition-overriding: true # 当遇到同样名称时，是否允许覆盖注册</span><br></pre></td></tr></table></figure><p>接下来就是application.yaml：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line"></span><br><span class="line">  port: 1000</span><br><span class="line"></span><br><span class="line">  undertow:</span><br><span class="line"></span><br><span class="line">    accesslog:</span><br><span class="line"></span><br><span class="line">      enabled: false</span><br><span class="line"></span><br><span class="line">      pattern: combined</span><br><span class="line"></span><br><span class="line">  servlet:</span><br><span class="line"></span><br><span class="line">    session:</span><br><span class="line"></span><br><span class="line">      timeout: PT120M</span><br><span class="line"></span><br><span class="line">logging:</span><br><span class="line"></span><br><span class="line">  path: &#x2F;data&#x2F;$&#123;spring.application.name&#125;&#x2F;logs</span><br><span class="line"></span><br><span class="line">client:</span><br><span class="line"></span><br><span class="line">  http:</span><br><span class="line"></span><br><span class="line">    request:</span><br><span class="line"></span><br><span class="line">      connectTimeout: 8000</span><br><span class="line"></span><br><span class="line">      readTimeout: 30000</span><br><span class="line"></span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">mybatis:</span><br><span class="line"></span><br><span class="line">  mapperLocations: classpath:mapper&#x2F;*.xml</span><br><span class="line"></span><br><span class="line">  typeAliasesPackage: com.gemantic.*.model</span><br></pre></td></tr></table></figure><p>到这，基本的配置即完成，同样，我们也引入了k8s的configmap功能，可以新建configmap的yaml文件来创建其configmap。</p><p>然后最重要的一点，就是我们需要创建service：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line"></span><br><span class="line">kind: Service</span><br><span class="line"></span><br><span class="line">metadata:</span><br><span class="line"></span><br><span class="line">  name: demo-cas-service</span><br><span class="line"></span><br><span class="line">  namespace: default</span><br><span class="line"></span><br><span class="line">spec:</span><br><span class="line"></span><br><span class="line">  ports:</span><br><span class="line"></span><br><span class="line">  - name: cas01</span><br><span class="line"></span><br><span class="line">    port: 1000</span><br><span class="line"></span><br><span class="line">    targetPort: cas01</span><br><span class="line"></span><br><span class="line">  selector:</span><br><span class="line"></span><br><span class="line">    app: demo-cas</span><br></pre></td></tr></table></figure><p>这一点很关键，即实现了服务的注册。</p><p>然后服务提供者的项目架子搭建好了，自己可以添加一些内容，比如我把它作为微服务架构的统一鉴权中心CAS。</p><p>接下来创建服务消费者的项目，同样引入依赖，但这一次不同：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">            &lt;artifactId&gt;spring-boot-actuator&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">            &lt;artifactId&gt;spring-boot-actuator-autoconfigure&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-kubernetes-config&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">            &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">            &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-aop&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;groupId&gt;io.kubernetes&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">&lt;artifactId&gt;client-java&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">&lt;version&gt;$&#123;kubernetes-client-version&#125;&lt;&#x2F;version&gt;</span><br><span class="line"></span><br><span class="line">&lt;exclusions&gt;</span><br><span class="line"></span><br><span class="line">&lt;exclusion&gt;</span><br><span class="line"></span><br><span class="line">&lt;groupId&gt;com.squareup.okio&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">    &lt;artifactId&gt;okio&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;exclusion&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;exclusions&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- springcloud-k8s-discovery --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">            &lt;artifactId&gt;spring-cloud-commons&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">            &lt;artifactId&gt;spring-cloud-kubernetes-core&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">            &lt;artifactId&gt;spring-cloud-kubernetes-discovery&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-kubernetes-ribbon&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-netflix-ribbon&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line"></span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line"></span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix&lt;&#x2F;artifactId&gt;</span><br><span class="line"></span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>以上是服务消费者的必须依赖，其他的可根据项目自行添加，比如：在线文档swagger，数据库，json解析，权限管理shiro等。</p><p>同样，我们也需要配置初始化bean，这就涉及到配置文件bootstrap.yaml：如上</p><p>接下来需要配置服务消费者的消费逻辑以及实现负载均衡的策略(application.yaml)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line"></span><br><span class="line">  port: 1002</span><br><span class="line"></span><br><span class="line">  undertow:</span><br><span class="line"></span><br><span class="line">    accesslog:</span><br><span class="line"></span><br><span class="line">      enabled: false</span><br><span class="line"></span><br><span class="line">      pattern: combined</span><br><span class="line"></span><br><span class="line">  servlet:</span><br><span class="line"></span><br><span class="line">    session:</span><br><span class="line"></span><br><span class="line">      timeout: PT120M</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">logging:</span><br><span class="line"></span><br><span class="line">  path: &#x2F;data&#x2F;$&#123;spring.application.name&#125;&#x2F;logs</span><br><span class="line"></span><br><span class="line">client:</span><br><span class="line"></span><br><span class="line">  http:</span><br><span class="line"></span><br><span class="line">    request:</span><br><span class="line"></span><br><span class="line">      connectTimeout: 8000</span><br><span class="line"></span><br><span class="line">      readTimeout: 30000</span><br><span class="line"></span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">mybatis:</span><br><span class="line"></span><br><span class="line">  mapperLocations: classpath:mapper&#x2F;*.xml</span><br><span class="line"></span><br><span class="line">  typeAliasesPackage: com.gemantic.*.model</span><br></pre></td></tr></table></figure><p>#这是针对所有的提供者服务的消费策略：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">backend:</span><br><span class="line"></span><br><span class="line">  ribbon:</span><br><span class="line"></span><br><span class="line">    eureka:</span><br><span class="line"></span><br><span class="line">      enabled: false</span><br><span class="line"></span><br><span class="line">    client:</span><br><span class="line"></span><br><span class="line">      enabled: true</span><br><span class="line"></span><br><span class="line">    ServerListRefreshInterval: 5000</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">ribbon:</span><br><span class="line"></span><br><span class="line">  ConnectTimeout: 3000</span><br><span class="line"></span><br><span class="line">  # 设置全局默认的ribbon的读超时</span><br><span class="line"></span><br><span class="line">  ReadTimeout: 1000</span><br><span class="line"></span><br><span class="line">  eager-load:</span><br><span class="line"></span><br><span class="line">    enabled: true</span><br><span class="line"></span><br><span class="line">    clients: demo-cas-service,cloud-admin-service</span><br><span class="line"></span><br><span class="line">  MaxAutoRetries: 1 #对第一次请求的服务的重试次数</span><br><span class="line"></span><br><span class="line">  MaxAutoRetriesNextServer: 1 #要重试的下一个服务的最大数量（不包括第一个服务）</span><br><span class="line"></span><br><span class="line">  #listOfServers: localhost:5556,localhost:5557</span><br><span class="line"></span><br><span class="line">  #ServerListRefreshInterval: 2000</span><br><span class="line"></span><br><span class="line">  OkToRetryOnAllOperations: true</span><br><span class="line"></span><br><span class="line"> NFLoadBalancerRuleClassName:com.netflix.loadbalancer.RoundRobinRule</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#这个是针对某个指定服务来进行配置负载均衡的策略</span><br><span class="line">#demo-cas-service:</span><br><span class="line"></span><br><span class="line">#  ribbon:</span><br><span class="line"></span><br><span class="line">#    ConnectTimeout: 3000</span><br><span class="line"></span><br><span class="line">#    ReadTimeout: 60000</span><br><span class="line"></span><br><span class="line">#    MaxAutoRetries: 1 #对第一次请求的服务的重试次数</span><br><span class="line"></span><br><span class="line">#    MaxAutoRetriesNextServer: 1 #要重试的下一个服务的最大数量（不包括第一个服务）</span><br><span class="line"></span><br><span class="line">#    listOfServers: localhost:5556,localhost:5557</span><br><span class="line"></span><br><span class="line">#    ServerListRefreshInterval: 2000</span><br><span class="line"></span><br><span class="line">#    OkToRetryOnAllOperations: true</span><br><span class="line"></span><br><span class="line">#NFLoadBalancerRuleClassName:com.netflix.loadbalancer.RoundRobinRule</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hystrix.command.BackendCall.execution.isolation.thread.timeoutInMilliseconds: 5000</span><br><span class="line"></span><br><span class="line">hystrix.threadpool.BackendCallThread.coreSize: 5</span><br></pre></td></tr></table></figure><p>这样，服务提供者与服务消费者就都新建成功了，接下来就需要丰满自己的业务应用逻辑了，同样，消费者也可以创建configmap来配置管理自己的配置。</p><p>接下来就是亲测：</p><p>这里，消费者调用提供者，提供者是个cas服务，则：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">MultiValueMap&lt;String, String&gt; map &#x3D; new LinkedMultiValueMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">map.add(&quot;username&quot;, username);</span><br><span class="line"></span><br><span class="line">map.add(&quot;password&quot;, password);</span><br><span class="line"></span><br><span class="line">logger.info(&quot;CAS URL: &#123;&#125;&quot;, envConfig.getCas_url());</span><br><span class="line"></span><br><span class="line">String respBody &#x3D; HttpRequestUtil.doPostForm(restTemplate, envConfig.getCas_url(), map);</span><br><span class="line"></span><br><span class="line">if (StringUtils.isNotBlank(respBody)) &#123;</span><br><span class="line"></span><br><span class="line">JSONObject pobj &#x3D; JSON.parseObject(respBody);</span><br><span class="line"></span><br><span class="line">Object object &#x3D; pobj.get(&quot;message&quot;);</span><br><span class="line"></span><br><span class="line">Integer code &#x3D; JSON.parseObject(object.toString()).getInteger(&quot;code&quot;);</span><br><span class="line"></span><br><span class="line">if (code &#x3D;&#x3D; LoginEnum.LOGIN_SUCCESS.getSeq()) &#123;</span><br><span class="line"></span><br><span class="line">Object data &#x3D; pobj.get(&quot;data&quot;);</span><br><span class="line"></span><br><span class="line">SysUserDto sysUser &#x3D; JSON.parseObject(data.toString(), SysUserDto.class);</span><br><span class="line"></span><br><span class="line">return sysUser;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的环境变量即使configmap提供，值：cas_url: <a href="http://demo-cas-service/login，这样我们就完成了调用的逻辑。" target="_blank" rel="noopener">http://demo-cas-service/login，这样我们就完成了调用的逻辑。</a></p><p>亲测有效：</p><p>接下来我们如果需要测试LB，需要添加一条脚本：</p><p>增加pod：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl scale --replicas&#x3D;2 deployment demo-cas-deployment</span><br></pre></td></tr></table></figure><p>这样，我们既看到两个demo-cas-deployment的pod：</p><p>同样测试，根据策略轮询调用的方式，这次会请求到该pod上，这里不贴截图了，大家可以试试。</p><p>以上，即是分享了k8s带来的第二大优点：</p><p>通过service的方式提供了服务的注册与发现，而且单机的k8s本身也不重，所以操作起来也非常之简单。避免了springboot原生提供的eureka、阿里的nacos、zk来作分布式的服务注册与发现要简单的多。减轻系统的繁重，以及避免了系统的冗余。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>k8s部署手册</title>
    <link href="http://www.damon8.cn/2020/07/23/k8s/"/>
    <id>http://www.damon8.cn/2020/07/23/k8s/</id>
    <published>2020-07-23T01:06:27.000Z</published>
    <updated>2020-11-04T08:41:06.696Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1、-K8S-的由来"><a href="#1、-K8S-的由来" class="headerlink" title="1、 K8S 的由来"></a>1、 K8S 的由来</h2><h4 id="K8S-是-kubernetes-的英文缩写，是用-8-代替-8-个字符-“ubernete”-而成的缩写。"><a href="#K8S-是-kubernetes-的英文缩写，是用-8-代替-8-个字符-“ubernete”-而成的缩写。" class="headerlink" title="K8S 是 kubernetes 的英文缩写，是用 8 代替 8 个字符 “ubernete” 而成的缩写。"></a>K8S 是 kubernetes 的英文缩写，是用 8 代替 8 个字符 “ubernete” 而成的缩写。</h4><br><br><h2 id="2、-K8S-单机版实战"><a href="#2、-K8S-单机版实战" class="headerlink" title="2、 K8S 单机版实战"></a>2、 K8S 单机版实战</h2><h5 id="环境："><a href="#环境：" class="headerlink" title="环境："></a>环境：</h5><ul><li><p>ubuntu 16.04</p></li><li><p>gpu 驱动 418.56</p></li><li><p>docker 18.06</p></li><li><p>k8s 1.13.5</p></li></ul><h3 id="一、设置环境"><a href="#一、设置环境" class="headerlink" title="一、设置环境"></a>一、设置环境</h3><p>首先备份一下源配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp &#x2F;etc&#x2F;apt&#x2F;sources.list &#x2F;etc&#x2F;apt&#x2F;sources.list.cp</span><br></pre></td></tr></table></figure><p>编辑，替换为阿里源:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br><span class="line"></span><br><span class="line">deb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu xenial main restricted</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial main restricted</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial main restricted multiverse universe</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial-updates main restricted</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial-updates main restricted multiverse universe</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial universe</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial-updates universe</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial-updates multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial-backports main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F;xenial-backports main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;archive.canonical.com&#x2F;ubuntu xenial partner</span><br><span class="line">deb-src http:&#x2F;&#x2F;archive.canonical.com&#x2F;ubuntu xenial partner</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial-security main restricted</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial-security main restricted multiverse universe</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial-security universe</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; xenial-security multiverse</span><br></pre></td></tr></table></figure><p>更新源:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure><p>自动修复安装出现 broken 的 package:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt --fix-broken install</span><br></pre></td></tr></table></figure><p>升级，对于 gpu 机器可不执行，否则可能升级 gpu 驱动导致问题:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get upgrade</span><br></pre></td></tr></table></figure><p>关闭防火墙:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw disable</span><br></pre></td></tr></table></figure><p>安装 selinux:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install selinux-utils</span><br></pre></td></tr></table></figure><p>selinux 防火墙配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line"></span><br><span class="line">vim&#x2F;etc&#x2F;selinux&#x2F;conifg</span><br><span class="line"></span><br><span class="line">SELINUX&#x3D;disabled</span><br></pre></td></tr></table></figure><p>设置网络:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tee &#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf &lt;&lt;-&#39;EOF&#39;</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables &#x3D; 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables &#x3D; 1</span><br><span class="line">net.ipv4.ip_forward &#x3D; 1</span><br><span class="line">EOF</span><br><span class="line">​</span><br><span class="line">modprobe br_netfilter</span><br></pre></td></tr></table></figure><p>查看 ipv4 与 v6 配置是否生效:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl --system</span><br></pre></td></tr></table></figure><p>配置 iptables:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iptables -P FORWARD ACCEPT</span><br><span class="line"></span><br><span class="line">vim &#x2F;etc&#x2F;rc.local</span><br><span class="line">&#x2F;usr&#x2F;sbin&#x2F;iptables -P FORWARD ACCEPT</span><br></pre></td></tr></table></figure><p>永久关闭 swap 分区:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#39;s&#x2F;.*swap.*&#x2F;#&amp;&#x2F;&#39; &#x2F;etc&#x2F;fstab</span><br></pre></td></tr></table></figure><h3 id="二、安装-docker"><a href="#二、安装-docker" class="headerlink" title="二、安装 docker"></a>二、安装 docker</h3><p>执行下面的命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">apt-get install apt-transport-https ca-certificates curl software-properties-common</span><br><span class="line">​</span><br><span class="line">curl -fsSL https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu&#x2F;gpg | apt-key add -</span><br><span class="line">​</span><br><span class="line">add-apt-repository &quot;deb [arch&#x3D;amd64] https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu $(lsb_release -cs) stable&quot; apt-get update</span><br><span class="line">​</span><br><span class="line">apt-get purge docker-ce docker docker-engine docker.io  &amp;&amp; rm -rf &#x2F;var&#x2F;lib&#x2F;docker</span><br><span class="line"></span><br><span class="line">apt-get autoremove docker-ce docker docker-engine docker.io</span><br><span class="line">​</span><br><span class="line">apt-get install -y docker-ce&#x3D;18.06.3~ce~3-0~ubuntu</span><br></pre></td></tr></table></figure><p>启动 docker 并设置开机自重启:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker &amp;&amp; systemctl start docker</span><br></pre></td></tr></table></figure><p>Docker 配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;docker&#x2F;daemon.json</span><br><span class="line">&#123;</span><br><span class="line"> &quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class="line"> &quot;log-opts&quot;: &#123;</span><br><span class="line">   &quot;max-size&quot;: &quot;100m&quot;,</span><br><span class="line">   &quot;max-file&quot;: &quot;10&quot;</span><br><span class="line"> &#125;,</span><br><span class="line"> &quot;insecure-registries&quot;: [&quot;http:&#x2F;&#x2F;k8s.gcr.io&quot;],</span><br><span class="line"> &quot;data-root&quot;: &quot;&quot;,</span><br><span class="line"> &quot;default-runtime&quot;: &quot;nvidia&quot;,</span><br><span class="line"> &quot;runtimes&quot;: &#123;</span><br><span class="line">     &quot;nvidia&quot;: &#123;</span><br><span class="line">         &quot;path&quot;: &quot;&#x2F;usr&#x2F;bin&#x2F;nvidia-container-runtime&quot;,</span><br><span class="line">         &quot;runtimeArgs&quot;: []</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面是含 GPU 的配置，不含 GPU 的配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;registry-mirrors&quot;:[</span><br><span class="line">&quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;</span><br><span class="line">],</span><br><span class="line">&quot;storage-driver&quot;:&quot;overlay2&quot;,</span><br><span class="line">&quot;log-driver&quot;:&quot;json-file&quot;,</span><br><span class="line">&quot;log-opts&quot;:&#123;</span><br><span class="line">&quot;max-size&quot;:&quot;100m&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;exec-opts&quot;:[</span><br><span class="line">&quot;native.cgroupdriver&#x3D;systemd&quot;</span><br><span class="line">],</span><br><span class="line">&quot;insecure-registries&quot;:[&quot;http:&#x2F;&#x2F;k8s.gcr.io&quot;],</span><br><span class="line">&quot;live-restore&quot;:true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启服务并设置开机自动重启:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload &amp;&amp; systemctl restart docker &amp;&amp; docker info</span><br></pre></td></tr></table></figure><h3 id="三、安装-k8s"><a href="#三、安装-k8s" class="headerlink" title="三、安装 k8s"></a>三、安装 k8s</h3><p>拉取镜像前的设置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y apt-transport-https curl</span><br><span class="line">​</span><br><span class="line">curl -s https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;apt&#x2F;doc&#x2F;apt-key.gpg | apt-key add -</span><br><span class="line">​</span><br><span class="line">tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;kubernetes.list &lt;&lt;-&#39;EOF&#39;</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;apt kubernetes-xenial main</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>更新:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get purge kubelet&#x3D;1.13.5-00 kubeadm&#x3D;1.13.5-00 kubectl&#x3D;1.13.5-00</span><br><span class="line">apt-get autoremove kubelet&#x3D;1.13.5-00 kubeadm&#x3D;1.13.5-00 kubectl&#x3D;1.13.5-00</span><br><span class="line">apt-get install -y kubelet&#x3D;1.13.5-00 kubeadm&#x3D;1.13.5-00 kubectl&#x3D;1.13.5-00</span><br><span class="line">apt-mark hold kubelet&#x3D;1.13.5-00 kubeadm&#x3D;1.13.5-00 kubectl&#x3D;1.13.5-00</span><br></pre></td></tr></table></figure><p>启动服务并设置开机自动重启:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable kubelet &amp;&amp; sudo systemctl start kubelet</span><br></pre></td></tr></table></figure><p>安装 k8s 相关镜像，由于 gcr.io 网络访问不了，从 registry.cn-hangzhou.aliyuncs.com 镜像地址下载:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com&#x2F;gg-gcr-io&#x2F;kube-apiserver:v1.13.5</span><br><span class="line"></span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com&#x2F;gg-gcr-io&#x2F;kube-controller-manager:v1.13.5</span><br><span class="line"></span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com&#x2F;gg-gcr-io&#x2F;kube-scheduler:v1.13.5</span><br><span class="line"></span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com&#x2F;gg-gcr-io&#x2F;kube-proxy:v1.13.5</span><br><span class="line"></span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com&#x2F;kuberimages&#x2F;pause:3.1</span><br><span class="line"></span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com&#x2F;kuberimages&#x2F;etcd:3.2.24</span><br><span class="line"></span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com&#x2F;kuberimages&#x2F;coredns:1.2.6</span><br></pre></td></tr></table></figure><p>打标签:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com&#x2F;gg-gcr-io&#x2F;kube-apiserver:v1.13.5 k8s.gcr.io&#x2F;kube-apiserver:v1.13.5</span><br><span class="line"></span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com&#x2F;gg-gcr-io&#x2F;kube-controller-manager:v1.13.5 k8s.gcr.io&#x2F;kube-controller-manager:v1.13.5</span><br><span class="line"></span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com&#x2F;gg-gcr-io&#x2F;kube-scheduler:v1.13.5 k8s.gcr.io&#x2F;kube-scheduler:v1.13.5</span><br><span class="line"></span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com&#x2F;gg-gcr-io&#x2F;kube-proxy:v1.13.5 k8s.gcr.io&#x2F;kube-proxy:v1.13.5</span><br><span class="line"></span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com&#x2F;kuberimages&#x2F;pause:3.1 k8s.gcr.io&#x2F;pause:3.1</span><br><span class="line"></span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com&#x2F;kuberimages&#x2F;etcd:3.2.24 k8s.gcr.io&#x2F;etcd:3.2.24</span><br><span class="line"></span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com&#x2F;kuberimages&#x2F;coredns:1.2.6 k8s.gcr.io&#x2F;coredns:1.2.6</span><br></pre></td></tr></table></figure><h3 id="四、kubeadm-初始化"><a href="#四、kubeadm-初始化" class="headerlink" title="四、kubeadm 初始化"></a>四、kubeadm 初始化</h3><p>利用 kubeadm 初始化 k8s，其中主机 IP 根据自己的实际情况输入:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --kubernetes-version&#x3D;v1.13.5 --pod-network-cidr&#x3D;10.244.0.0&#x2F;16 --service-cidr&#x3D;10.16.0.0&#x2F;16 --apiserver-advertise-address&#x3D;$&#123;masterIp&#125; | tee kubeadm-init.log</span><br></pre></td></tr></table></figure><p>此时，如果未知主机 IP，也可利用 yaml 文件动态初始化:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;hosts</span><br><span class="line">10.10.5.100 k8s.api.server</span><br><span class="line"></span><br><span class="line">vi kube-init.yaml</span><br><span class="line"></span><br><span class="line">apiVersion: kubeadm.k8s.io&#x2F;v1beta1</span><br><span class="line">kind: ClusterConfiguration</span><br><span class="line">kubernetesVersion: v1.13.5</span><br><span class="line">imageRepository: registry.aliyuncs.com&#x2F;google_containers</span><br><span class="line">apiServer:</span><br><span class="line">  certSANs:</span><br><span class="line">  - &quot;k8s.api.server&quot;</span><br><span class="line">controlPlaneEndpoint: &quot;k8s.api.server:6443&quot;</span><br><span class="line">networking:</span><br><span class="line">  serviceSubnet: &quot;10.1.0.0&#x2F;16&quot;</span><br><span class="line">  podSubnet: &quot;10.244.0.0&#x2F;16&quot;</span><br></pre></td></tr></table></figure><p>HA 版本:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: kubeadm.k8s.io&#x2F;v1beta1</span><br><span class="line">kind: ClusterConfiguration</span><br><span class="line">kubernetesVersion: v1.13.5</span><br><span class="line">imageRepository: registry.aliyuncs.com&#x2F;google_containers</span><br><span class="line">apiServer:</span><br><span class="line">  certSANs:</span><br><span class="line">  - &quot;api.k8s.com&quot;</span><br><span class="line">controlPlaneEndpoint: &quot;api.k8s.com:6443&quot;</span><br><span class="line">etcd:</span><br><span class="line">    external:</span><br><span class="line">        endpoints:</span><br><span class="line">        - https:&#x2F;&#x2F;ETCD_0_IP:2379</span><br><span class="line">        - https:&#x2F;&#x2F;ETCD_1_IP:2379</span><br><span class="line">        - https:&#x2F;&#x2F;ETCD_2_IP:2379</span><br><span class="line">networking:</span><br><span class="line">  serviceSubnet: 10.1.0.0&#x2F;16</span><br><span class="line">  podSubnet: 10.244.0.0&#x2F;16</span><br></pre></td></tr></table></figure><p>注意: apiVersion 中用 kubeadm，因为需要用 kubeadm 来初始化，最后执行下面来初始化:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --config&#x3D;kube-init.yaml</span><br></pre></td></tr></table></figure><p>出现问题，解决后，reset 后再执行，如果需要更多，执行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm --help</span><br></pre></td></tr></table></figure><h3 id="五、部署出现问题"><a href="#五、部署出现问题" class="headerlink" title="五、部署出现问题"></a>五、部署出现问题</h3><p>先删除 node 节点(集群版)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl drain &lt;node name&gt; --delete-local-data --force --ignore-daemonsets</span><br><span class="line">​</span><br><span class="line">kubectl delete node &lt;node name&gt;</span><br></pre></td></tr></table></figure><p>清空 init 配置在需要删除的节点上执行（注意，当执行 init 或者 join 后出现任何错误，都可以使用此命令返回）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm reset</span><br></pre></td></tr></table></figure><h3 id="六、查问题"><a href="#六、查问题" class="headerlink" title="六、查问题"></a>六、查问题</h3><p>初始化后出现问题，可以通过以下命令先查看其容器状态以及网络情况:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sudo docker ps -a | grep kube | grep -v pause</span><br><span class="line">​</span><br><span class="line">sudo docker logs CONTAINERID</span><br><span class="line">​</span><br><span class="line">sudo docker images &amp;&amp; systemctl status -l kubelet</span><br><span class="line">​</span><br><span class="line">netstat -nlpt</span><br><span class="line">​</span><br><span class="line">kubectl describe ep kubernetes</span><br><span class="line"></span><br><span class="line">kubectl describe svc kubernetes</span><br><span class="line">​</span><br><span class="line">kubectl get svc kubernetes</span><br><span class="line">​</span><br><span class="line">kubectl get ep</span><br><span class="line">​</span><br><span class="line">netstat -nlpt | grep apiser</span><br><span class="line"></span><br><span class="line">vi &#x2F;var&#x2F;log&#x2F;syslog</span><br></pre></td></tr></table></figure><h3 id="七、给当前用户配置-k8s-apiserver-访问公钥"><a href="#七、给当前用户配置-k8s-apiserver-访问公钥" class="headerlink" title="七、给当前用户配置 k8s apiserver 访问公钥"></a>七、给当前用户配置 k8s apiserver 访问公钥</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p $HOME&#x2F;.kube</span><br><span class="line">​</span><br><span class="line">sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class="line">​</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br></pre></td></tr></table></figure><h3 id="八、网络插件"><a href="#八、网络插件" class="headerlink" title="八、网络插件"></a>八、网络插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https:&#x2F;&#x2F;docs.projectcalico.org&#x2F;v3.3&#x2F;getting-started&#x2F;kubernetes&#x2F;installation&#x2F;hosted&#x2F;rbac-kdd.yaml</span><br><span class="line">​</span><br><span class="line">wget https:&#x2F;&#x2F;docs.projectcalico.org&#x2F;v3.3&#x2F;getting-started&#x2F;kubernetes&#x2F;installation&#x2F;hosted&#x2F;kubernetes-datastore&#x2F;calico-networking&#x2F;1.7&#x2F;calico.yaml</span><br><span class="line"></span><br><span class="line">vi calico.yaml</span><br><span class="line"></span><br><span class="line">- name: CALICO_IPV4POOL_IPIP</span><br><span class="line"> value:&quot;off&quot;</span><br><span class="line">- name: CALICO_IPV4POOL_CIDR</span><br><span class="line"> value: &quot;10.244.0.0&#x2F;16</span><br><span class="line">​</span><br><span class="line">kubectl apply -f calico.yaml</span><br></pre></td></tr></table></figure><p>单机下允许 master 节点部署 pod 命令如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl taint nodes --all node-role.kubernetes.io&#x2F;master-</span><br></pre></td></tr></table></figure><p>禁止 master 部署 pod:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl taint nodes k8s node-role.kubernetes.io&#x2F;master&#x3D;true:NoSchedule</span><br></pre></td></tr></table></figure><p>以上单机版部署结束，如果你的项目中，交付的是软硬件结合的一体机，那么到此就结束了。记得<code>单机下要允许 master 节点部署</code>哟！</p><h5 id="接下来，集群版本上线咯！"><a href="#接下来，集群版本上线咯！" class="headerlink" title="接下来，集群版本上线咯！"></a>接下来，集群版本上线咯！</h5><p>以上面部署的机器为例，作为 master 节点，继续执行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">scp &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $nodeUser@$nodeIp:&#x2F;home&#x2F;$nodeUser</span><br><span class="line">​</span><br><span class="line">scp &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;* $nodeUser@$nodeIp:&#x2F;home&#x2F;$nodeUser&#x2F;etcd</span><br><span class="line">​</span><br><span class="line">kubeadm token generate</span><br><span class="line">​</span><br><span class="line">kubeadm token create $token_name --print-join-command --ttl&#x3D;0</span><br><span class="line">​</span><br><span class="line">kubeadm join $masterIP:6443 --token  $token_name --discovery-token-ca-cert-hash $hash</span><br></pre></td></tr></table></figure><p>Node 机器执行时，如果需要 cuda ，可以参考以下资料:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;docs.nvidia.com&#x2F;cuda&#x2F;cuda-installation-guide-linux&#x2F;index.html#ubuntu-installation</span><br><span class="line">​https:&#x2F;&#x2F;blog.csdn.net&#x2F;u012235003&#x2F;article&#x2F;details&#x2F;54575758</span><br><span class="line">https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_39670011&#x2F;article&#x2F;details&#x2F;90404111</span><br></pre></td></tr></table></figure><p>正式执行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;modprobe.d&#x2F;blacklist-nouveau.conf</span><br><span class="line">blacklist nouveau</span><br><span class="line">options nouveau modeset&#x3D;0</span><br><span class="line">update-initramfs -u</span><br></pre></td></tr></table></figure><p>重启 ubuntu 查看是否禁用成功:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep nouveau</span><br><span class="line"></span><br><span class="line">apt-get remove --purge nvidia*</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;developer.nvidia.com&#x2F;cuda-downloads</span><br><span class="line">​</span><br><span class="line">sudo apt-get install freeglut3-dev build-essential libx11-dev libxmu-dev libxi-dev libgl1-mesa-glx libglu1-mesa libglu1-mesa-dev</span><br></pre></td></tr></table></figure><p>安装 cuda:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">​accept</span><br><span class="line">select &quot;Install&quot; &#x2F; Enter</span><br><span class="line">select &quot;Yes&quot;</span><br><span class="line">sh cuda_10.1.168_418.67_linux.run</span><br><span class="line">​</span><br><span class="line">echo &#39;export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-10.1&#x2F;bin:$PATH&#39; &gt;&gt; ~&#x2F;.bashrc</span><br><span class="line">echo &#39;export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-10.1&#x2F;NsightCompute-2019.3:$PATH&#39; &gt;&gt; ~&#x2F;.bashrc</span><br><span class="line">echo &#39;export LD_LIBRARY_PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;cuda-10.1&#x2F;lib64:$LD_LIBRARY_PATH&#39; &gt;&gt; ~&#x2F;.bashrc</span><br><span class="line">source ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure><p>重启机器，检查 cuda 是否安装成功。</p><p>查看是否有“nvidia*”的设备:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;dev &amp;&amp; ls -al</span><br></pre></td></tr></table></figure><p>如果没有，创建一个 nv.sh:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">vi nv.sh</span><br><span class="line">#!&#x2F;bin&#x2F;bash &#x2F;sbin&#x2F;modprobe nvidia</span><br><span class="line">if [ &quot;$?&quot; -eq 0 ];</span><br><span class="line">then</span><br><span class="line">NVDEVS&#x3D;&#96;lspci |</span><br><span class="line"> grep -i NVIDIA</span><br><span class="line">&#96;</span><br><span class="line">N3D&#x3D;&#96;</span><br><span class="line">echo</span><br><span class="line">&quot;$NVDEVS&quot;</span><br><span class="line">| grep &quot;3D controller&quot; |</span><br><span class="line"> wc -l</span><br><span class="line">&#96;</span><br><span class="line">NVGA&#x3D;&#96;</span><br><span class="line">echo</span><br><span class="line">&quot;$NVDEVS&quot;</span><br><span class="line">| grep &quot;VGA compatible controller&quot; |</span><br><span class="line"> wc -l</span><br><span class="line">&#96;</span><br><span class="line">N&#x3D;&#96;</span><br><span class="line">expr $N3D + $NVGA -</span><br><span class="line">1</span><br><span class="line">&#96;</span><br><span class="line">for i in &#96;</span><br><span class="line">seq</span><br><span class="line">0</span><br><span class="line"> $N</span><br><span class="line">&#96;; do</span><br><span class="line">    mknod -m 666 &#x2F;dev&#x2F;nvidia$i c 195 $i</span><br><span class="line">done</span><br><span class="line">    mknod -m 666 &#x2F;dev&#x2F;nvidiactl c 195 255</span><br><span class="line">else</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line">​</span><br><span class="line">chmod +x nv.sh &amp;&amp; bash nv.sh</span><br></pre></td></tr></table></figure><p>再次重启机器查看 cuda 版本:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvcc -V</span><br></pre></td></tr></table></figure><p>编译:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;cuda-10.1&#x2F;samples &amp;&amp;  make</span><br><span class="line"></span><br><span class="line">cd  &#x2F;usr&#x2F;local&#x2F;cuda-10.1&#x2F;samples&#x2F;bin&#x2F;x86_64&#x2F;linux&#x2F;release .&#x2F;deviceQuery</span><br></pre></td></tr></table></figure><p>以上如果输出：“Result = PASS” 代表 cuda 安装成功。</p><p>安装 nvdocker:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;docker&#x2F;daemon.json</span><br><span class="line">&#123;</span><br><span class="line">&quot;runtimes&quot;:&#123;</span><br><span class="line">    &quot;nvidia&quot;:&#123;</span><br><span class="line">         &quot;path&quot;:&quot;nvidia-container-runtime&quot;,</span><br><span class="line">          &quot;runtimeArgs&quot;:[]</span><br><span class="line">     &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;registry-mirrors&quot;:[&quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;],</span><br><span class="line">&quot;storage-driver&quot;:&quot;overlay2&quot;,</span><br><span class="line">&quot;default-runtime&quot;:&quot;nvidia&quot;,</span><br><span class="line">&quot;log-driver&quot;:&quot;json-file&quot;,</span><br><span class="line">&quot;log-opts&quot;:&#123;</span><br><span class="line"> &quot;max-size&quot;:&quot;100m&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;exec-opts&quot;: [&quot;native.cgroupdriver&#x3D;systemd&quot;],</span><br><span class="line">&quot;insecure-registries&quot;: [$harborRgistry],</span><br><span class="line">&quot;live-restore&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启 docker:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload &amp;&amp; sudo systemctl restart docker &amp;&amp; docker info</span><br></pre></td></tr></table></figure><p>检查 nvidia-docker 安装是否成功:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --runtime&#x3D;nvidia --rm nvidia&#x2F;cuda:9.0-base nvidia-smi</span><br></pre></td></tr></table></figure><p>在节点机器进入 su 模式:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su $nodeUser</span><br></pre></td></tr></table></figure><p>给当前节点用户配置 k8s apiserver 访问公钥:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p $HOME&#x2F;.kube</span><br><span class="line">​</span><br><span class="line">cp -i  admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class="line">​</span><br><span class="line">chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br><span class="line">​</span><br><span class="line">mkdir -p $HOME&#x2F;etcd</span><br><span class="line">​</span><br><span class="line">sudo rm -rf &#x2F;etc&#x2F;kubernetes</span><br><span class="line">​</span><br><span class="line">sudo mkdir -p &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd</span><br><span class="line">​</span><br><span class="line">sudo cp &#x2F;home&#x2F;$nodeUser&#x2F;etcd&#x2F;* &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd</span><br><span class="line">​</span><br><span class="line">sudo kubeadm join $masterIP:6443 --token  $token_name --discovery-token-ca-cert-hash $hash</span><br></pre></td></tr></table></figure><p>如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo kubeadm join 192.168.8.116:6443 --token vyi4ga.foyxqr2iz9i391q3 --discovery-token-ca-cert-hash sha256:929143bcdaa3e23c6faf20bc51ef6a57df02edf9df86cedf200320a9b4d3220a</span><br></pre></td></tr></table></figure><p>检查 node 是否加入 master:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get node</span><br></pre></td></tr></table></figure><h6 id="以上介绍了单机的-k8s-部署，以及-HA-的-master-节点的部署安装。"><a href="#以上介绍了单机的-k8s-部署，以及-HA-的-master-节点的部署安装。" class="headerlink" title="以上介绍了单机的 k8s 部署，以及 HA 的 master 节点的部署安装。"></a>以上介绍了单机的 k8s 部署，以及 HA 的 master 节点的部署安装。</h6><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>浅入Spring Cloud架构</title>
    <link href="http://www.damon8.cn/2020/07/23/micro-service03/"/>
    <id>http://www.damon8.cn/2020/07/23/micro-service03/</id>
    <published>2020-07-23T01:00:09.000Z</published>
    <updated>2020-11-04T08:44:29.728Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1、-微服务简介"><a href="#1、-微服务简介" class="headerlink" title="1、 微服务简介"></a>1、 微服务简介</h2><br><br><h3 id="1-1-什么是微服务"><a href="#1-1-什么是微服务" class="headerlink" title="1.1 什么是微服务"></a>1.1 什么是微服务</h3><p>&emsp;&emsp;所谓微服务，就是把一个比较大的单个应用程序或服务拆分为若干个独立的、粒度很小的服务或组件。</p><br><h3 id="1-2-为什么使用微服务"><a href="#1-2-为什么使用微服务" class="headerlink" title="1.2 为什么使用微服务"></a>1.2 为什么使用微服务</h3><p>&emsp;&emsp;微服务的拆解业务，这一策略，可扩展单个组件，而不需要整个的应用程序堆栈做修改，从而满足服务等级协议。微服务带来的好处是，它们更快且更容易更新。当开发者对一个传统的单体应用程序进行变更时，他们必须做详细、完整的 QA 测试，以确保变更不会影响其他特性或功能。但有了微服务，开发者可以更新应用程序的单个组件，而不会影响其他的部分。测试微服务应用程序仍然是必需的，但使得其更容易被识别和隔离，从而加快开发速度并支持 DevOps 和持续应用程序开发。</p><br><h3 id="1-3-微服务的架构组成"><a href="#1-3-微服务的架构组成" class="headerlink" title="1.3 微服务的架构组成"></a>1.3 微服务的架构组成</h3><p>&emsp;&emsp;这几年的快速发展，微服务已经变得越来越流行。其中，Spring Cloud 一直在更新，并被大部分公司所使用。代表性的有 Alibaba，2018 年 11 月左右，Spring Cloud 联合创始人 Spencer Gibb 在 Spring 官网的博客页面宣布：阿里巴巴开源 Spring Cloud Alibaba，并发布了首个预览版本。随后，Spring Cloud 官方 Twitter 也发布了此消息。Spring Cloud 的版本也很多:</p><br><table><thead><tr><th>Spring Cloud</th><th>Spring Cloud Alibaba</th><th>Spring Boot</th></tr></thead><tbody><tr><td>Spring Cloud Hoxton</td><td>2.2.0.RELEASE</td><td>2.2.X.RELEASE</td></tr><tr><td>Spring Cloud Greenwich</td><td>2.1.1.RELEASE</td><td>2.1.X.RELEASE</td></tr><tr><td>Spring Cloud Finchley</td><td>2.0.1.RELEASE</td><td>2.0.X.RELEASE</td></tr><tr><td>Spring Cloud Edgware</td><td>1.5.1.RELEASE</td><td>1.5.X.RELEASE</td></tr></tbody></table><br><p>以 Spring Boot1.x 为例，主要包括 Eureka、Zuul、Config、Ribbon、Hystrix 等。而在 Spring Boot2.x 中，网关采用了自己的 Gateway。当然在 Alibaba 版本中，其组件更是丰富：使用 Alibaba 的 Nacos 作为注册中心和配置中心。使用自带组件 Sentinel 作为限流、熔断神器。</p><br><br><br><h2 id="2、-微服务之网关"><a href="#2、-微服务之网关" class="headerlink" title="2、 微服务之网关"></a>2、 微服务之网关</h2><br><br><h3 id="2-1-常见的几种网关"><a href="#2-1-常见的几种网关" class="headerlink" title="2.1 常见的几种网关"></a>2.1 常见的几种网关</h3><p>&emsp;&emsp;目前，在 Spring Boot1.x 中，用到的比较多的网关就是 Zuul。Zuul 是 Netflix 公司开源的一个网关服务，而 Spring Boot2.x 中，采用了自家推出的 Spring Cloud Gateway。</p><br><h3 id="2-2-API-网关的作用"><a href="#2-2-API-网关的作用" class="headerlink" title="2.2 API 网关的作用"></a>2.2 API 网关的作用</h3><p>&emsp;&emsp;API 网关的主要作用是反向路由、安全认证、负载均衡、限流熔断、日志监控。在 Zuul 中，我们可以通过注入 Bean 的方式来配置路由，也可以在直接通过配置文件来配置:<br><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">zuul.routes.api-d.sensitiveHeaders&#x3D;&quot;*&quot;</span><br><span class="line">zuul.routes.api-d.path&#x3D;&#x2F;business&#x2F;api&#x2F;**</span><br><span class="line">zuul.routes.api-d.serviceId&#x3D;business-web</span><br></pre></td></tr></table></figure><br>我们可以通过网关来做一些安全的认证：如统一鉴权。在 Zuul 中：<br>Zuul 的工作原理<br><ul><li>过滤器机制</li></ul><p>&emsp;&emsp;zuul 的核心是一系列的 filters, 其作用可以类比 Servlet 框架的 Filter，或者 AOP。zuul 把 Request route 到用户处理逻辑的过程中，这些 filter 参与一些过滤处理，比如 Authentication，Load Shedding 等。几种标准的过滤器类型：<br><br></p><p>&emsp;&emsp;(1) PRE：这种过滤器在请求被路由之前调用。我们可利用这种过滤器实现身份验证、在集群中选择请求的微服务、记录调试信息等。<br><br></p><p>&emsp;&emsp;(2) ROUTING：这种过滤器用于构建发送给微服务的请求，并使用 Apache HttpClient 或 Netfilx Ribbon 请求微服务。<br><br></p><p>&emsp;&emsp;(3) POST：这种过滤器在路由到微服务以后执行。这种过滤器可用来为响应添加标准的 HTTP Header、收集统计信息和指标、将响应从微服务发送给客户端等。<br><br></p><p>&emsp;&emsp;(4) ERROR：在其他阶段发生错误时执行该过滤器。<br><br></p><ul><li>过滤器的生命周期</li></ul><p>&emsp;&emsp;filterOrder：通过 int 值来定义过滤器的执行顺序，越小优先级越高。<br><br></p><p>&emsp;&emsp;shouldFilter：返回一个 boolean 类型来判断该过滤器是否要执行，所以通过此函数可实现过滤器的开关。在上例中，我们直接返回 true，所以该过滤器总是生效。<br><br></p><p>&emsp;&emsp;run：过滤器的具体逻辑。需要注意，这里我们通过 ctx.setSendZuulResponse(false) 令 zuul 过滤该请求，不对其进行路由，然后通过 ctx.setResponseStatusCode(401) 设置了其返回的错误码。<br><br></p><p>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccessFilter</span> <span class="keyword">extends</span> <span class="title">ZuulFilter</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(AccessFilter<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">RedisCacheConfiguration redisCacheConfiguration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">EnvironmentConfig env;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] PASS_PATH_ARRAY = &#123; <span class="string">"/login"</span>, <span class="string">"openProject"</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">filterType</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"pre"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">filterOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">RequestContext ctx = RequestContext.getCurrentContext();</span><br><span class="line">HttpServletRequest request = ctx.getRequest();</span><br><span class="line">HttpServletResponse response = ctx.getResponse();</span><br><span class="line">response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">response.setHeader(<span class="string">"content-type"</span>, <span class="string">"text/html;charset=UTF-8"</span>);</span><br><span class="line"></span><br><span class="line">logger.info(<span class="string">"&#123;&#125; request to &#123;&#125;"</span>, request.getMethod(), request.getRequestURL());</span><br><span class="line"><span class="keyword">for</span> (String path : PASS_PATH_ARRAY) &#123;</span><br><span class="line"><span class="keyword">if</span> (StringUtils.contains(request.getRequestURL().toString(), path)) &#123;</span><br><span class="line">logger.debug(<span class="string">"request path: &#123;&#125; is pass"</span>, path);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">String token = request.getHeader(<span class="string">"token"</span>);</span><br><span class="line"><span class="keyword">if</span> (StringUtils.isEmpty(token)) &#123;</span><br><span class="line">logger.warn(<span class="string">"access token is empty"</span>);</span><br><span class="line">ctx.setSendZuulResponse(<span class="keyword">false</span>);</span><br><span class="line">ctx.setResponseStatusCode(<span class="number">404</span>);</span><br><span class="line">ctx.setResponseBody(JSONObject.toJSONString(</span><br><span class="line">Response.error(<span class="number">200</span>, -<span class="number">3</span>, <span class="string">"header param error"</span>, <span class="keyword">null</span>)));</span><br><span class="line"><span class="keyword">return</span> ctx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Jedis jedis = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">JedisPool jedisPool = redisCacheConfiguration.getJedisPool();</span><br><span class="line">jedis = jedisPool.getResource();</span><br><span class="line">logger.debug(<span class="string">"zuul gateway service get redisResource success"</span>);</span><br><span class="line">String key = env.getPrefix() + token;</span><br><span class="line">String value = jedis.get(key);</span><br><span class="line"><span class="keyword">if</span> (StringUtils.isBlank(value)) &#123;</span><br><span class="line">ctx.setSendZuulResponse(<span class="keyword">false</span>);</span><br><span class="line">ctx.setResponseStatusCode(<span class="number">401</span>);</span><br><span class="line">ctx.setResponseBody(JSONObject.toJSONString(Response.error(<span class="number">200</span>, -<span class="number">1</span>, <span class="string">"login timeout"</span>,<span class="keyword">null</span>)));</span><br><span class="line"><span class="keyword">return</span> ctx;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">logger.debug(<span class="string">"access token ok"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">logger.error(<span class="string">"get redisResource failed"</span>);</span><br><span class="line">logger.error(e.getMessage(), e);</span><br><span class="line">ctx.setSendZuulResponse(<span class="keyword">false</span>);</span><br><span class="line">ctx.setResponseStatusCode(<span class="number">500</span>);</span><br><span class="line">ctx.setResponseBody(JSONObject.toJSONString(</span><br><span class="line">Response.error(<span class="number">200</span>, -<span class="number">8</span>, <span class="string">"redis connect failed"</span>, <span class="keyword">null</span>)));</span><br><span class="line"><span class="keyword">return</span> ctx;</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (jedis != <span class="keyword">null</span>) &#123;</span><br><span class="line">jedis.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><br><br><h2 id="3、-微服务之服务注册与发现"><a href="#3、-微服务之服务注册与发现" class="headerlink" title="3、 微服务之服务注册与发现"></a>3、 微服务之服务注册与发现</h2><br><br><h3 id="3-1-常见的几种注册中心"><a href="#3-1-常见的几种注册中心" class="headerlink" title="3.1 常见的几种注册中心"></a>3.1 常见的几种注册中心</h3><p>&emsp;&emsp;目前常见的几种注册中心有：Eureka、Consul、Nacos，但其实 Kubernetes 也可以实现服务的注册与发现功能，且听下面讲解。</p><br><h4 id="Eureka-的高可用"><a href="#Eureka-的高可用" class="headerlink" title="Eureka 的高可用"></a>Eureka 的高可用</h4><br>&emsp;&emsp;在注册中心部署时，有可能出现节点问题，我们先看看 Eureka 集群如何实现高可用，首先配置基础的 Eureka 配置：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">spring.application.name&#x3D;eureka-server</span><br><span class="line">server.port&#x3D;1111</span><br><span class="line"></span><br><span class="line">spring.profiles.active&#x3D;dev</span><br><span class="line"></span><br><span class="line">eureka.instance.hostname&#x3D;localhost</span><br><span class="line"></span><br><span class="line">eureka.client.serviceUrl.defaultZone&#x3D;http:&#x2F;&#x2F;$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;&#x2F;eureka&#x2F;</span><br><span class="line"></span><br><span class="line">logging.path&#x3D;&#x2F;data&#x2F;$&#123;spring.application.name&#125;&#x2F;logs</span><br><span class="line"></span><br><span class="line">eureka.server.enable-self-preservation&#x3D;false</span><br><span class="line">eureka.client.register-with-eureka&#x3D;false</span><br><span class="line">eureka.client.fetch-registry&#x3D;false</span><br><span class="line"></span><br><span class="line">eureka.server.eviction-interval-timer-in-ms&#x3D;5000</span><br><span class="line">eureka.server.responseCacheUpdateInvervalMs&#x3D;60000</span><br><span class="line"></span><br><span class="line">eureka.instance.lease-expiration-duration-in-seconds&#x3D;10</span><br><span class="line"></span><br><span class="line">eureka.instance.lease-renewal-interval-in-seconds&#x3D;3</span><br><span class="line"></span><br><span class="line">eureka.server.responseCacheAutoExpirationInSeconds&#x3D;180</span><br><span class="line"></span><br><span class="line">server.undertow.accesslog.enabled&#x3D;false</span><br><span class="line">server.undertow.accesslog.pattern&#x3D;combined</span><br></pre></td></tr></table></figure><br>配置好后，新建一个 application-peer1.properties 文件：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spring.application.name&#x3D;eureka-server</span><br><span class="line">server.port&#x3D;1111</span><br><span class="line">eureka.instance.hostname&#x3D;peer1</span><br><span class="line">eureka.client.serviceUrl.defaultZone&#x3D;http:&#x2F;&#x2F;peer2:1112&#x2F;eureka&#x2F;</span><br></pre></td></tr></table></figure><p>application-peer2.properties 文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spring.application.name&#x3D;eureka-server</span><br><span class="line">server.port&#x3D;1112</span><br><span class="line">eureka.instance.hostname&#x3D;peer2</span><br><span class="line">eureka.client.serviceUrl.defaultZone&#x3D;http:&#x2F;&#x2F;peer1:1111&#x2F;eureka&#x2F;</span><br></pre></td></tr></table></figure><br><p>这样通过域名 peer1、peer2 的形式来实现高可用，那么如何配置域名呢？有几种方式：</p><ul><li>通过 hosts 来配置域名，vi /etc/hosts:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10.12.3.2 peer1</span><br><span class="line">10.12.3.5 peer2</span><br></pre></td></tr></table></figure><br><ul><li>通过 kubernetes 部署服务时来配置域名：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hostAliases:</span><br><span class="line">- ip: &quot;10.12.3.2&quot;</span><br><span class="line">  hostnames:</span><br><span class="line">  - &quot;peer1&quot;</span><br><span class="line">- ip: &quot;10.12.3.5&quot;</span><br><span class="line">  hostnames:</span><br><span class="line">  - &quot;peer2&quot;</span><br></pre></td></tr></table></figure><br><h4 id="Nacos-实现服务注册、发现"><a href="#Nacos-实现服务注册、发现" class="headerlink" title="Nacos 实现服务注册、发现"></a>Nacos 实现服务注册、发现</h4><br>&emsp;&emsp;Nacos 是 Alibaba 推出来的，目前最新版本是 v1.2.1。其功能可以实现服务的注册、发现，也可以作为配置管理来提供配置服务。可以手动去官网下载安装，Nacos 地址：https://github.com/alibaba/nacos/releases。<br>执行，Linux/Unix/Mac：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh startup.sh -m standalone</span><br></pre></td></tr></table></figure><p>Windows：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd startup.cmd -m standalone</span><br></pre></td></tr></table></figure><br><p>当我们引入 Nacos 相关配置时，即可使用它：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">     &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;&#x2F;artifactId&gt;</span><br><span class="line"> &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line"> &lt;dependency&gt;</span><br><span class="line">     &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;&#x2F;artifactId&gt;</span><br><span class="line"> &lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><br><h5 id="注意：下面这个配置文件需要是-bootstrap，否则可能失败，至于为什么，大家可以自己试试。"><a href="#注意：下面这个配置文件需要是-bootstrap，否则可能失败，至于为什么，大家可以自己试试。" class="headerlink" title="注意：下面这个配置文件需要是 bootstrap，否则可能失败，至于为什么，大家可以自己试试。"></a>注意：下面这个配置文件需要是 bootstrap，否则可能失败，至于为什么，大家可以自己试试。</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: oauth-cas</span><br><span class="line">  cloud:</span><br><span class="line">    nacos:</span><br><span class="line">      discovery:</span><br><span class="line">        server-addr: 127.0.0.1:8848</span><br><span class="line">      config:</span><br><span class="line">        server-addr: 127.0.0.1:8848</span><br><span class="line">        refreshable-dataids: actuator.properties,log.properties</span><br></pre></td></tr></table></figure><br><p>配置完成后，完成 main：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">package com.damon;</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.SpringApplication;</span><br><span class="line">import org.springframework.boot.autoconfigure.EnableAutoConfiguration;</span><br><span class="line">import org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line">import org.springframework.context.annotation.ComponentScan;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">@EnableAutoConfiguration</span><br><span class="line">@ComponentScan(basePackages &#x3D; &#123;&quot;com.damon&quot;&#125;)</span><br><span class="line">@EnableDiscoveryClient</span><br><span class="line">public class CasApp &#123;</span><br><span class="line">  public static void main(String[] args) &#123;</span><br><span class="line">    SpringApplication.run(CasApp.class, args);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p>完成以上，我们运行启动类，我们打开 Nacos 登录后，打开服务列表，即可看到：</p><p><img src="https://images.gitbook.cn/b9eb76d0-7df4-11ea-b59d-2db101c69ebc" alt="在这里插入图片描述"></p><br><h4 id="Kubernetes-服务注册与发现"><a href="#Kubernetes-服务注册与发现" class="headerlink" title="Kubernetes 服务注册与发现"></a>Kubernetes 服务注册与发现</h4><br>&emsp;&emsp;接下来，请允许我为大家引入 Kubernetes 的服务注册与发现功能，spring-cloud-kubernetes 的 DiscoveryClient 服务将 Kubernetes 中的 "Service" 资源与 Spring Cloud 中的服务对应起来了，有了这个 DiscoveryClient，我们在 Kubernetes 环境下就不需要 Eureka 等来做注册发现了，而是直接使用 Kubernetes 的服务机制。<br><br><p>在 pom.xml 中，有对 spring-cloud-kubernetes 框架的依赖配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-kubernetes-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-kubernetes-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><p>为何 spring-cloud-kubernetes 可以完成服务注册发现呢？首先，创建一个 Spring Boot 项目的启动类，且引入服务发现注解 @EnableDiscoveryClient，同时需要开启服务发现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: edge-admin</span><br><span class="line">  cloud:</span><br><span class="line">    kubernetes:</span><br><span class="line">      discovery:</span><br><span class="line">        all-namespaces: true</span><br></pre></td></tr></table></figure><br><br>开启后，我们打开spring-cloud-kubernetes-discovery的源码，地址是：https://github.com/spring-cloud/spring-cloud-kubernetes/tree/master/spring-cloud-kubernetes-discovery，看到内容：<p><img src="https://images.gitbook.cn/d2b1ce30-7bb0-11ea-8940-6df1558f5aa2" alt="在这里插入图片描述"><br><br><br>为什么要看这个文件呢？因为 spring 容器启动时，会寻找 classpath 下所有 spring.factories 文件(包括 jar 文件中的)，spring.factories 中配置的所有类都会实例化，我们在开发 springboot 时常用到的***-starter.jar 就用到了这个技术，效果是一旦依赖了某个 starter.jar 很多功能就在 spring 初始化时候自动执行。</p><br><p>spring.factories 文件中有两个类：KubernetesDiscoveryClientAutoConfiguration 和 KubernetesDiscoveryClientConfigClientBootstrapConfiguration 都会被实例化。先看 KubernetesDiscoveryClientConfigClientBootstrapConfiguration，KubernetesAutoConfiguration 和 KubernetesDiscoveryClientAutoConfiguration 这两个类会被实例化：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> * Copyright <span class="number">2013</span>-<span class="number">2019</span> the original author or authors.</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> org.springframework.cloud.kubernetes.discovery;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.kubernetes.KubernetesAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Import;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty</span>(<span class="string">"spring.cloud.config.discovery.enabled"</span>)</span><br><span class="line"><span class="meta">@Import</span>(&#123; KubernetesAutoConfiguration<span class="class">.<span class="keyword">class</span>,</span></span><br><span class="line"><span class="class"><span class="title">KubernetesDiscoveryClientAutoConfiguration</span>.<span class="title">class</span> &#125;)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">KubernetesDiscoveryClientConfigClientBootstrapConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p>再看 KubernetesAutoConfiguration 的源码，会实例化一个重要的类 DefaultKubernetesClient，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> KubernetesClient <span class="title">kubernetesClient</span><span class="params">(Config config)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> DefaultKubernetesClient(config);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>最后我们再看 KubernetesDiscoveryClientAutoConfiguration 源码，注意 kubernetesDiscoveryClient 方法，这里面是接口实现的重点，还要重点关注的地方是 KubernetesClient 参数的值，是上面提到的 DefaultKubernetesClient 对象：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty</span>(name = <span class="string">"spring.cloud.kubernetes.discovery.enabled"</span>, matchIfMissing = <span class="keyword">true</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> KubernetesDiscoveryClient <span class="title">kubernetesDiscoveryClient</span><span class="params">(KubernetesClient client,</span></span></span><br><span class="line"><span class="function"><span class="params">KubernetesDiscoveryProperties properties,</span></span></span><br><span class="line"><span class="function"><span class="params">KubernetesClientServicesFunction kubernetesClientServicesFunction,</span></span></span><br><span class="line"><span class="function"><span class="params">DefaultIsServicePortSecureResolver isServicePortSecureResolver)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> KubernetesDiscoveryClient(client, properties, kubernetesClientServicesFunction, isServicePortSecureResolver);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p>接下来，我们看 spring-cloud-kubernetes 中的 KubernetesDiscoveryClient.java，看方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public List&lt;String&gt; getServices(Predicate&lt;Service&gt; filter) &#123;</span><br><span class="line">return this.kubernetesClientServicesFunction.apply(this.client).list().getItems()</span><br><span class="line">.stream().filter(filter).map(s -&gt; s.getMetadata().getName())</span><br><span class="line">.collect(Collectors.toList());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p>在 apply(this.client).list()，可以看到数据源其实就是 this.client，并且 KubernetesClientServicesFunction 实例化时：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@Bean</span><br><span class="line">public KubernetesClientServicesFunction servicesFunction(</span><br><span class="line">KubernetesDiscoveryProperties properties) &#123;</span><br><span class="line">  if (properties.getServiceLabels().isEmpty()) &#123;</span><br><span class="line">    return KubernetesClient::services;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  return (client) -&gt; client.services().withLabels(properties.getServiceLabels());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><p>调用其 services 方法的返回结果，KubernetesDiscoveryClient.getServices 方法中的 this.client 是什么呢？在前面的分析时已经提到了，就是 DefaultKubernetesClient 类的实例，所以，此时要去去看 DefaultKubernetesClient.services 方法，发现 client 是  ServiceOperationsImpl：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">  public MixedOperation&lt;Service, ServiceList, DoneableService, ServiceResource&lt;Service, DoneableService&gt;&gt; services() &#123;</span><br><span class="line">    return new ServiceOperationsImpl(httpClient, getConfiguration(), getNamespace());</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><br><p>接着我们在实例 ServiceOperationsImpl 中看其 list 函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public L list() throws KubernetesClientException &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">      HttpUrl.Builder requestUrlBuilder &#x3D; HttpUrl.get(getNamespacedUrl()).newBuilder();</span><br><span class="line"></span><br><span class="line">      String labelQueryParam &#x3D; getLabelQueryParam();</span><br><span class="line">      if (Utils.isNotNullOrEmpty(labelQueryParam)) &#123;</span><br><span class="line">        requestUrlBuilder.addQueryParameter(&quot;labelSelector&quot;, labelQueryParam);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      String fieldQueryString &#x3D; getFieldQueryParam();</span><br><span class="line">      if (Utils.isNotNullOrEmpty(fieldQueryString)) &#123;</span><br><span class="line">        requestUrlBuilder.addQueryParameter(&quot;fieldSelector&quot;, fieldQueryString);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      Request.Builder requestBuilder &#x3D; new Request.Builder().get().url(requestUrlBuilder.build());</span><br><span class="line">      L answer &#x3D; handleResponse(requestBuilder, listType);</span><br><span class="line">      updateApiVersion(answer);</span><br><span class="line">      return answer;</span><br><span class="line">    &#125; catch (InterruptedException | ExecutionException | IOException e) &#123;</span><br><span class="line">      throw KubernetesClientException.launderThrowable(forOperationType(&quot;list&quot;), e);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><br><p>接着展开上面代码的 handleResponse 函数，可见里面是一次 http 请求，至于请求的地址，可以展开 getNamespacedUrl() 方法，里面调用的 getRootUrl 方法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public URL getRootUrl() &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">      if (apiGroup !&#x3D; null) &#123;</span><br><span class="line">        return new URL(URLUtils.join(config.getMasterUrl().toString(), &quot;apis&quot;, apiGroup, apiVersion));</span><br><span class="line">      &#125;</span><br><span class="line">      return new URL(URLUtils.join(config.getMasterUrl().toString(), &quot;api&quot;, apiVersion));</span><br><span class="line">    &#125; catch (MalformedURLException e) &#123;</span><br><span class="line">      throw KubernetesClientException.launderThrowable(e);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><br><p>我们看到逻辑中，貌似了解到其结果是这样的格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxx&#x2F;api&#x2F;version 或 xxx&#x2F;apis&#x2F;xxx&#x2F;version</span><br></pre></td></tr></table></figure><p>看到这样的结果，感觉比较像访问 kubernetes 的 API Server 时用的 URL 标准格式，有关 API Server 服务的详情请参考官方文档，地址是: <a href="https://kubernetes.io/docs/reference/using-api/api-concepts/。" target="_blank" rel="noopener">https://kubernetes.io/docs/reference/using-api/api-concepts/。</a></p><br>弄清楚以上，我们发现了其实最终是向 kubernetes 的 API Server  发起 http 请求，获取 Service 资源的数据列表。因此，我们在最后还得在 k8s 底层新建 Service 资源来让其获取：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-web-service</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: admin-web01</span><br><span class="line">    port: 2001</span><br><span class="line">    targetPort: admin-web01</span><br><span class="line">  selector:</span><br><span class="line">    app: admin-web</span><br></pre></td></tr></table></figure><br>当然，在部署时，不管是以 Deployment 形式，还是以 DaemonSet 来部署，其最后还是 pod，如果要实现单个服务的多节点部署，可以用：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl scale --replicas&#x3D;2 deployment admin-web-deployment</span><br></pre></td></tr></table></figure><br><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><br><h5 id="spring-cloud-kubernetes-这个组件的服务发现目的就是获取-Kubernetes-中一个或者多个-Namespace-下的所有服务列表，且在过滤列表时候设置过滤的端口号-，这样获取到服务列表后就能让依赖它们的-Spring-Boot-或其它框架的应用完成服务发现工作，让服务能够通过-http-serviceName-这种方式进行访问。"><a href="#spring-cloud-kubernetes-这个组件的服务发现目的就是获取-Kubernetes-中一个或者多个-Namespace-下的所有服务列表，且在过滤列表时候设置过滤的端口号-，这样获取到服务列表后就能让依赖它们的-Spring-Boot-或其它框架的应用完成服务发现工作，让服务能够通过-http-serviceName-这种方式进行访问。" class="headerlink" title="spring-cloud-kubernetes 这个组件的服务发现目的就是获取 Kubernetes 中一个或者多个 Namespace 下的所有服务列表，且在过滤列表时候设置过滤的端口号 ，这样获取到服务列表后就能让依赖它们的 Spring Boot 或其它框架的应用完成服务发现工作，让服务能够通过 http://serviceName 这种方式进行访问。"></a>spring-cloud-kubernetes 这个组件的服务发现目的就是获取 Kubernetes 中一个或者多个 Namespace 下的所有服务列表，且在过滤列表时候设置过滤的端口号 ，这样获取到服务列表后就能让依赖它们的 Spring Boot 或其它框架的应用完成服务发现工作，让服务能够通过 <a href="http://serviceName" target="_blank" rel="noopener">http://serviceName</a> 这种方式进行访问。</h5><br><br><br><h2 id="4、-微服务之配置管理"><a href="#4、-微服务之配置管理" class="headerlink" title="4、 微服务之配置管理"></a>4、 微服务之配置管理</h2><br><br><h3 id="4-1-常见的配置中心"><a href="#4-1-常见的配置中心" class="headerlink" title="4.1 常见的配置中心"></a>4.1 常见的配置中心</h3><br><p>&emsp;&emsp;目前常见的几种配置中心有：Spring Cloud Config、Apollo、Nacos，但其实 Kubernetes 组件 configMap 就可以实现服务的配置管理。并且，在 Spring Boot2.x 中，就已经引入使用了。</p><br><h4 id="Nacos-配置中心"><a href="#Nacos-配置中心" class="headerlink" title="Nacos 配置中心"></a>Nacos 配置中心</h4><br><p>&emsp;&emsp;在上面注册中心中，我们讲到 Nacos，作为注册中心，其实也可以作为配置来管理服务的环境变量。</p><br>同样，引入其以依赖：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">     &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;&#x2F;artifactId&gt;</span><br><span class="line"> &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line"> &lt;dependency&gt;</span><br><span class="line">     &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;&#x2F;artifactId&gt;</span><br><span class="line"> &lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><br><p>同样，注意：下面这个配置文件需要是 bootstrap，否则可能失败。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: oauth-cas</span><br><span class="line">  cloud:</span><br><span class="line">    nacos:</span><br><span class="line">      discovery:</span><br><span class="line">        server-addr: 127.0.0.1:8848</span><br><span class="line">      config:</span><br><span class="line">        server-addr: 127.0.0.1:8848</span><br><span class="line">        refreshable-dataids: actuator.properties,log.properties</span><br></pre></td></tr></table></figure><br>启动类在上面的注册中心已经讲过了，现在看其配置类:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">package com.damon.config;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Value;</span><br><span class="line">import org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line">import org.springframework.cloud.context.config.annotation.RefreshScope;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Component</span><br><span class="line">@RefreshScope</span><br><span class="line">public class EnvConfig &#123;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;jdbc.driverClassName:&#125;&quot;)</span><br><span class="line">    private String jdbc_driverClassName;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;jdbc.url:&#125;&quot;)</span><br><span class="line">    private String jdbc_url;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;jdbc.username:&#125;&quot;)</span><br><span class="line">    private String jdbc_username;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;jdbc.password:&#125;&quot;)</span><br><span class="line">    private String jdbc_password;</span><br><span class="line"></span><br><span class="line">public String getJdbc_driverClassName() &#123;</span><br><span class="line">return jdbc_driverClassName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setJdbc_driverClassName(String jdbc_driverClassName) &#123;</span><br><span class="line">this.jdbc_driverClassName &#x3D; jdbc_driverClassName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getJdbc_url() &#123;</span><br><span class="line">return jdbc_url;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setJdbc_url(String jdbc_url) &#123;</span><br><span class="line">this.jdbc_url &#x3D; jdbc_url;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getJdbc_username() &#123;</span><br><span class="line">return jdbc_username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setJdbc_username(String jdbc_username) &#123;</span><br><span class="line">this.jdbc_username &#x3D; jdbc_username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getJdbc_password() &#123;</span><br><span class="line">return jdbc_password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setJdbc_password(String jdbc_password) &#123;</span><br><span class="line">this.jdbc_password &#x3D; jdbc_password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们通过注解 <code>@Component</code>、<code>@RefreshScope</code>，来实现其配置可被获取。<strong>注意 <code>@Value(&quot;${jdbc.username:}&quot;)</code>最后需要冒号的，否则启动后会报错的。</strong></p><br>接下来可以配置属性值来，点击配置管理，查看配置：<p><img src="https://images.gitbook.cn/c5e26b80-7bc7-11ea-9792-81939fbf7f0c" alt="在这里插入图片描述"></p><br>如果首次打开没有配置，可以新建配置：<p><img src="https://images.gitbook.cn/07105d10-7bc8-11ea-b2e6-fdc2f968c34f" alt="在这里插入图片描述"><br><br><br>编辑配置：</p><p><img src="https://images.gitbook.cn/21327ab0-7df4-11ea-aeaa-0141df86c50d" alt="在这里插入图片描述"><br><br><br>新建完之后，可以编辑，也可以删除，这里就不操作了。</p><br><h4 id="ConfigMap-作为配置管理"><a href="#ConfigMap-作为配置管理" class="headerlink" title="ConfigMap 作为配置管理"></a>ConfigMap 作为配置管理</h4><br>&emsp;&emsp;spring-cloud-kubernetes 在上面提供了服务发现的功能，其实它还很强大，也提供了服务的配置管理：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-boot-actuator-autoconfigure&lt;&#x2F;artifactId&gt;</span><br><span class="line">  &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">  &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-cloud-starter-kubernetes-config&lt;&#x2F;artifactId&gt;</span><br><span class="line">  &lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><br><p>在初始化时，引入注解来自动注入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">package com.damon;</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.SpringApplication;</span><br><span class="line">import org.springframework.boot.autoconfigure.EnableAutoConfiguration;</span><br><span class="line">import org.springframework.boot.autoconfigure.security.oauth2.client.EnableOAuth2Sso;</span><br><span class="line">import org.springframework.boot.context.properties.EnableConfigurationProperties;</span><br><span class="line">import org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line">import org.springframework.context.annotation.ComponentScan;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line">import com.damon.config.EnvConfig;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">@EnableAutoConfiguration</span><br><span class="line">@ComponentScan(basePackages &#x3D; &#123;&quot;com.damon&quot;&#125;)</span><br><span class="line">@EnableConfigurationProperties(EnvConfig.class)</span><br><span class="line">@EnableDiscoveryClient</span><br><span class="line">public class AdminApp &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(AdminApp.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>其中，EnvConfig 类来配置环境变量配置：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line">package com.damon.config;</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">@ConfigurationProperties(prefix &#x3D; &quot;damon&quot;)</span><br><span class="line">public class EnvConfig &#123;</span><br><span class="line"></span><br><span class="line">    private String message &#x3D; &quot;This is a dummy message&quot;;</span><br><span class="line"></span><br><span class="line">    private String spring_mq_host;</span><br><span class="line">    private String spring_mq_port;</span><br><span class="line">    private String spring_mq_user;</span><br><span class="line">    private String spring_mq_pwd;</span><br><span class="line">    private String jdbc_driverClassName &#x3D; &quot;com.mysql.jdbc.Driver&quot;;</span><br><span class="line">    private String jdbc_url &#x3D; &quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;data_test?zeroDateTimeBehavior&#x3D;convertToNull&amp;useUnicode&#x3D;true&amp;characterEncoding&#x3D;utf-8&amp;useSSL&#x3D;false&quot;;</span><br><span class="line">    private String jdbc_username &#x3D; &quot;root&quot;;</span><br><span class="line">    private String jdbc_password &#x3D; &quot;wwww&quot;;</span><br><span class="line">    private String spring_redis_host;</span><br><span class="line">    private String spring_redis_port;</span><br><span class="line">    private String spring_redis_pwd;</span><br><span class="line">    private String base_path;</span><br><span class="line">    private String chunk_size;</span><br><span class="line">    private Long expire_time&#x3D; 600000L;</span><br><span class="line"></span><br><span class="line">    public String getMessage() &#123;</span><br><span class="line">        return this.message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setMessage(String message) &#123;</span><br><span class="line">        this.message &#x3D; message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public String getSpring_mq_host() &#123;</span><br><span class="line">return spring_mq_host;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setSpring_mq_host(String spring_mq_host) &#123;</span><br><span class="line">this.spring_mq_host &#x3D; spring_mq_host;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getSpring_mq_port() &#123;</span><br><span class="line">return spring_mq_port;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setSpring_mq_port(String spring_mq_port) &#123;</span><br><span class="line">this.spring_mq_port &#x3D; spring_mq_port;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getSpring_mq_user() &#123;</span><br><span class="line">return spring_mq_user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setSpring_mq_user(String spring_mq_user) &#123;</span><br><span class="line">this.spring_mq_user &#x3D; spring_mq_user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getSpring_mq_pwd() &#123;</span><br><span class="line">return spring_mq_pwd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setSpring_mq_pwd(String spring_mq_pwd) &#123;</span><br><span class="line">this.spring_mq_pwd &#x3D; spring_mq_pwd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getJdbc_driverClassName() &#123;</span><br><span class="line">return jdbc_driverClassName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setJdbc_driverClassName(String jdbc_driverClassName) &#123;</span><br><span class="line">this.jdbc_driverClassName &#x3D; jdbc_driverClassName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getJdbc_url() &#123;</span><br><span class="line">return jdbc_url;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setJdbc_url(String jdbc_url) &#123;</span><br><span class="line">this.jdbc_url &#x3D; jdbc_url;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getJdbc_username() &#123;</span><br><span class="line">return jdbc_username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setJdbc_username(String jdbc_username) &#123;</span><br><span class="line">this.jdbc_username &#x3D; jdbc_username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getJdbc_password() &#123;</span><br><span class="line">return jdbc_password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setJdbc_password(String jdbc_password) &#123;</span><br><span class="line">this.jdbc_password &#x3D; jdbc_password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getSpring_redis_host() &#123;</span><br><span class="line">return spring_redis_host;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setSpring_redis_host(String spring_redis_host) &#123;</span><br><span class="line">this.spring_redis_host &#x3D; spring_redis_host;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getSpring_redis_port() &#123;</span><br><span class="line">return spring_redis_port;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setSpring_redis_port(String spring_redis_port) &#123;</span><br><span class="line">this.spring_redis_port &#x3D; spring_redis_port;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getSpring_redis_pwd() &#123;</span><br><span class="line">return spring_redis_pwd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setSpring_redis_pwd(String spring_redis_pwd) &#123;</span><br><span class="line">this.spring_redis_pwd &#x3D; spring_redis_pwd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public String getBase_path() &#123;</span><br><span class="line">return base_path;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setBase_path(String base_path) &#123;</span><br><span class="line">this.base_path &#x3D; base_path;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public String getChunk_size() &#123;</span><br><span class="line">return chunk_size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setChunk_size(String chunk_size) &#123;</span><br><span class="line">this.chunk_size &#x3D; chunk_size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public Long getExpire_time() &#123;</span><br><span class="line">return expire_time;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setExpire_time(Long expire_time) &#123;</span><br><span class="line">this.expire_time &#x3D; expire_time;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这样，在部署时，我们新建 ConfigMap 类型的资源，同时，会配置其属性值：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">kind: ConfigMap</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: admin-web</span><br><span class="line">data:</span><br><span class="line">  application.yaml: |-</span><br><span class="line">    damon:</span><br><span class="line">      message: Say Hello to the World</span><br><span class="line">    ---</span><br><span class="line">    spring:</span><br><span class="line">      profiles: dev</span><br><span class="line">    damon:</span><br><span class="line">      message: Say Hello to the Developers</span><br><span class="line">    ---</span><br><span class="line">    spring:</span><br><span class="line">      profiles: test</span><br><span class="line">    damon:</span><br><span class="line">      message: Say Hello to the Test</span><br><span class="line">    ---</span><br><span class="line">    spring:</span><br><span class="line">      profiles: prod</span><br><span class="line">    damon:</span><br><span class="line">      message: Say Hello to the Prod</span><br></pre></td></tr></table></figure><br>并且结合配置，来实现动态更新：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: admin-web</span><br><span class="line">  cloud:</span><br><span class="line">    kubernetes:</span><br><span class="line">      discovery:</span><br><span class="line">        all-namespaces: true</span><br><span class="line">      reload:</span><br><span class="line">        enabled: true</span><br><span class="line">        mode: polling</span><br><span class="line">        period: 500</span><br><span class="line">      config:</span><br><span class="line">        sources:</span><br><span class="line">        - name: $&#123;spring.application.name&#125;</span><br><span class="line">          namespace: default</span><br></pre></td></tr></table></figure><br>这里是实现自动 500ms 拉取配置，也可以通过事件触发的形式来动态获取最新配置：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: admin-web</span><br><span class="line">  cloud:</span><br><span class="line">    kubernetes:</span><br><span class="line">      config:</span><br><span class="line">        sources:</span><br><span class="line">         - name: $&#123;spring.application.name&#125;</span><br><span class="line">           namespace: default</span><br><span class="line">      discovery:</span><br><span class="line">        all-namespaces: true</span><br><span class="line">      reload:</span><br><span class="line">        enabled: true</span><br><span class="line">        mode: event</span><br><span class="line">        period: 500</span><br></pre></td></tr></table></figure><br><br><br><h2 id="5、-微服务模块划分"><a href="#5、-微服务模块划分" class="headerlink" title="5、 微服务模块划分"></a>5、 微服务模块划分</h2><br><br><h3 id="5-1-如何划分微服务"><a href="#5-1-如何划分微服务" class="headerlink" title="5.1 如何划分微服务"></a>5.1 如何划分微服务</h3><br><p>&emsp;&emsp;微服务架构设计中，服务拆分的问题很突出，第一种，按照纵向的业务拆分，第二种，横向的功能拆分。</p><br><p>&emsp;&emsp;以电商业务为例，首先按照业务领域的纵向拆分，分为用户微服务、商品微服务、交易微服务、订单微服务等等。</p><br><p>&emsp;&emsp;思考一下： 在纵向拆分仅仅按照业务领域进行拆分是否满足所有的业务场景？结果肯定是否定的。例如用户服务分为用户注册（写）和登录（读）等。写请求的重要性总是大于读请求的，在高并发下，读写比例 10:1，甚至更高的情况下，从而导致了大量的读请求往往会直接影响写请求。为了避免大量的读对写的请求干扰，需要对服务进行读写分离，即用户注册为一个微服务，登录为另一个微服务。此时按照 API 的细粒度继续进行纵向的业务拆分。</p><br><p>&emsp;&emsp;在横向上，按照所请求的功能进行拆分，即对一个请求的生命周期继续进行拆分。请求从用户端发出，首先接受到请求的是网关服务（这里不考虑 nginx 代理网关分发过程），网关服务对请求进行鉴权、参数合法性检查、路由转发等。接下来业务逻辑服务对请求进行业务逻辑的编排处理。对业务数据进行存储和查询就需要数据访问服务，数据访问服务提供了基本的 CRUD 原子操作，并负责海量数据的分库分表，以及屏蔽底层存储的差异性等功能。最后是数据持久化和缓存服务，比如可以采用 MQ、Kafka、Redis Cluster 等。</p><br><p>&emsp;&emsp;微服务架构通过业务的纵向拆分以及功能的横向拆分，服务演化成更小的颗粒度，各服务之间相互解耦，每个服务都可以快速迭代和持续交付（CI/CD），从而在公司层面能够达到降本增效的终极目标。但是服务粒度越细，服务之间的交互就会越来越多，更多的交互会使得服务之间的治理更复杂。服务之间的治理包括服务间的发现、通信、路由、负载均衡、重试机制、限流降级、熔断、链路跟踪等。</p><br><h3 id="5-2-微服务划分的粒度"><a href="#5-2-微服务划分的粒度" class="headerlink" title="5.2 微服务划分的粒度"></a>5.2 微服务划分的粒度</h3><br><p>&emsp;&emsp;微服务划分粒度，其最核心的六个字可能就是：“高内聚、低耦合”。高内聚：就是说每个服务处于同一个网络或网域下，而且相对于外部，整个的是一个封闭的、安全的盒子，宛如一朵玫瑰花。盒子对外的接口是不变的，盒子内部各模块之间的接口也是不变的，但是各模块内部的内容可以更改。模块只对外暴露最小限度的接口，避免强依赖关系。增删一个模块，应该只会影响有依赖关系的相关模块，无关的不应该受影响。</p><br><p>&emsp;&emsp;那么低耦合，这就涉及到我们业务系统的设计了。所谓低耦合：就是要每个业务模块之间的关系降低，减少冗余、重复、交叉的复杂度，模块功能划分也尽可能单一。这样，才能达到低耦合的目的。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Spring Cloud Alibaba 实战</title>
    <link href="http://www.damon8.cn/2020/07/23/springcloud-alibaba01/"/>
    <id>http://www.damon8.cn/2020/07/23/springcloud-alibaba01/</id>
    <published>2020-07-23T00:50:27.000Z</published>
    <updated>2020-11-04T08:46:10.560Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><code>2018年11月左右，Springcloud 联合创始人Spencer Gibb在Spring官网的博客页面宣布：阿里巴巴开源 Spring Cloud Alibaba，并发布了首个预览版本。随后，Spring Cloud 官方Twitter也发布了此消息。</code></p><p>一、环境准备</p><p>Spring Boot: 2.1.8</p><p>Spring Cloud: Greenwich.SR3</p><p>Spring Cloud Alibaba: 0.9.0.RELEASE</p><p>Maven: 3.5.4</p><p>Java 1.8 +</p><p>Oauth2 (Spring Security 5.1.6 +)</p><p>二、实战</p><p>项目模块</p><p>主要分为：鉴权中心、服务提供者、服务消费者、网关</p><p>实战代码</p><p>鉴权中心，依赖pom.xml：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line">&lt;project xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0&quot; xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">  xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">  &lt;modelVersion&gt;4.0.0&lt;&#x2F;modelVersion&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;groupId&gt;com.damon&lt;&#x2F;groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;oauth-cas&lt;&#x2F;artifactId&gt;</span><br><span class="line">  &lt;version&gt;0.0.1-SNAPSHOT&lt;&#x2F;version&gt;</span><br><span class="line">  &lt;packaging&gt;jar&lt;&#x2F;packaging&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;name&gt;oauth-cas&lt;&#x2F;name&gt;</span><br><span class="line">  &lt;url&gt;http:&#x2F;&#x2F;maven.apache.org&lt;&#x2F;url&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.1.8.RELEASE&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;relativePath&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;parent&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;properties&gt;</span><br><span class="line">    &lt;project.build.sourceEncoding&gt;UTF-8&lt;&#x2F;project.build.sourceEncoding&gt;</span><br><span class="line">    &lt;project.reporting.outputEncoding&gt;UTF-8&lt;&#x2F;project.reporting.outputEncoding&gt;</span><br><span class="line">    &lt;java.version&gt;1.8&lt;&#x2F;java.version&gt;</span><br><span class="line">    &lt;swagger.version&gt;2.6.1&lt;&#x2F;swagger.version&gt;</span><br><span class="line">    &lt;xstream.version&gt;1.4.7&lt;&#x2F;xstream.version&gt;</span><br><span class="line">    &lt;pageHelper.version&gt;4.1.6&lt;&#x2F;pageHelper.version&gt;</span><br><span class="line">    &lt;fastjson.version&gt;1.2.51&lt;&#x2F;fastjson.version&gt;</span><br><span class="line">    &lt;!-- &lt;springcloud.version&gt;2.1.8.RELEASE&lt;&#x2F;springcloud.version&gt; --&gt;</span><br><span class="line">    &lt;springcloud.version&gt;Greenwich.SR3&lt;&#x2F;springcloud.version&gt;</span><br><span class="line">    &lt;springcloud.kubernetes.version&gt;1.1.1.RELEASE&lt;&#x2F;springcloud.kubernetes.version&gt;</span><br><span class="line">    &lt;mysql.version&gt;5.1.46&lt;&#x2F;mysql.version&gt;</span><br><span class="line"></span><br><span class="line">    &lt;alibaba-cloud.version&gt;2.1.1.RELEASE&lt;&#x2F;alibaba-cloud.version&gt;</span><br><span class="line">    &lt;springcloud.alibaba.version&gt;0.9.0.RELEASE&lt;&#x2F;springcloud.alibaba.version&gt;</span><br><span class="line">  &lt;&#x2F;properties&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;dependencyManagement&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">      &lt;!-- &lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;com.alibaba.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;spring-cloud-alibaba-dependencies&lt;&#x2F;artifactId&gt;</span><br><span class="line">          &lt;version&gt;$&#123;alibaba-cloud.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">          &lt;type&gt;pom&lt;&#x2F;type&gt;</span><br><span class="line">          &lt;scope&gt;import&lt;&#x2F;scope&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt; --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-alibaba-dependencies&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;springcloud.alibaba.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;type&gt;pom&lt;&#x2F;type&gt;</span><br><span class="line">        &lt;scope&gt;import&lt;&#x2F;scope&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-dependencies&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;springcloud.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;type&gt;pom&lt;&#x2F;type&gt;</span><br><span class="line">        &lt;scope&gt;import&lt;&#x2F;scope&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line">  &lt;&#x2F;dependencyManagement&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;exclusions&gt;</span><br><span class="line">        &lt;exclusion&gt;</span><br><span class="line">          &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;spring-boot-starter-tomcat&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;exclusion&gt;</span><br><span class="line">      &lt;&#x2F;exclusions&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-boot-starter-undertow&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-oauth2&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.jsonwebtoken&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jjwt&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;0.9.0&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;cn.hutool&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;hutool-all&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.6.3&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.google.guava&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;guava&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;19.0&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.commons&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;commons-lang3&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;commons-collections&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;commons-collections&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;3.2.2&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- swagger --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;springfox-swagger2&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;swagger.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;springfox-swagger-ui&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;swagger.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--分页插件--&gt;</span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.github.pagehelper&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;pagehelper&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;pageHelper.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- mybatis --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis.spring.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-spring-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.1.1&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;mysql.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- datasource pool--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;druid&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.1.3&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 对redis支持,引入的话项目缓存就支持redis了,所以必须加上redis的相关配置,否则操作相关缓存会报异常 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-boot-starter-data-redis&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;fastjson&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;fastjson.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.jsoup&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;jsoup&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;1.11.3&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;dependencies&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;build&gt;</span><br><span class="line">    &lt;finalName&gt;$&#123;project.artifactId&#125;&lt;&#x2F;finalName&gt;</span><br><span class="line">    &lt;plugins&gt;</span><br><span class="line">      &lt;plugin&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;configuration&gt;</span><br><span class="line">          &lt;jvmArguments&gt;-Dfile.encoding&#x3D;UTF-8&lt;&#x2F;jvmArguments&gt;</span><br><span class="line">          &lt;fork&gt;true&lt;&#x2F;fork&gt;</span><br><span class="line">        &lt;&#x2F;configuration&gt;</span><br><span class="line">      &lt;&#x2F;plugin&gt;</span><br><span class="line">      &lt;plugin&gt;</span><br><span class="line">        &lt;groupId&gt;org.jacoco&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jacoco-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;0.7.8&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;executions&gt;</span><br><span class="line">          &lt;execution&gt;</span><br><span class="line">            &lt;goals&gt;</span><br><span class="line">              &lt;goal&gt;prepare-agent&lt;&#x2F;goal&gt;</span><br><span class="line">              &lt;goal&gt;report&lt;&#x2F;goal&gt;</span><br><span class="line">            &lt;&#x2F;goals&gt;</span><br><span class="line">          &lt;&#x2F;execution&gt;</span><br><span class="line">        &lt;&#x2F;executions&gt;</span><br><span class="line">      &lt;&#x2F;plugin&gt;</span><br><span class="line">    &lt;&#x2F;plugins&gt;</span><br><span class="line">  &lt;&#x2F;build&gt;</span><br><span class="line">&lt;&#x2F;project&gt;</span><br></pre></td></tr></table></figure><p>本例中，用到了 Nacos 作为注册中心、配置中心，估需要引入其依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>Oauth2 的依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-oauth2&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>同时利用 redis 来处理鉴权的信息存储：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-data-redis&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>接下来需要准备配置文件 yaml：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">management:</span><br><span class="line">  endpoint:</span><br><span class="line">    restart:</span><br><span class="line">      enabled: true</span><br><span class="line">    health:</span><br><span class="line">      enabled: true</span><br><span class="line">    info:</span><br><span class="line">      enabled: true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: oauth-cas</span><br><span class="line">  cloud:</span><br><span class="line">    nacos:</span><br><span class="line">      discovery:</span><br><span class="line">        server-addr: 127.0.0.1:8848</span><br><span class="line">      config:</span><br><span class="line">        server-addr: 127.0.0.1:8848</span><br><span class="line">        refreshable-dataids: actuator.properties,log.properties</span><br><span class="line"></span><br><span class="line">  redis: #redis相关配置</span><br><span class="line">    database: 8</span><br><span class="line">    host: 127.0.0.1</span><br><span class="line">    port: 6379</span><br><span class="line">    password: qwqwsq</span><br><span class="line">    jedis:</span><br><span class="line">      pool:</span><br><span class="line">        max-active: 8</span><br><span class="line">        max-idle: 8</span><br><span class="line">        min-idle: 0</span><br><span class="line">    timeout: 10000ms</span><br><span class="line"></span><br><span class="line">  http:</span><br><span class="line">    encoding:</span><br><span class="line">      charset: UTF-8</span><br><span class="line">      enabled: true</span><br><span class="line">      force: true</span><br><span class="line">  mvc:</span><br><span class="line">    throw-exception-if-no-handler-found: true</span><br><span class="line">  main:</span><br><span class="line">    allow-bean-definition-overriding: true # 当遇到同样名称时，是否允许覆盖注册</span><br><span class="line"></span><br><span class="line">logging:</span><br><span class="line">  path: &#x2F;data&#x2F;$&#123;spring.application.name&#125;&#x2F;logs</span><br></pre></td></tr></table></figure><p>注意，这个配置文件需要是 bootstrap，否则可能失败，至于为什么，大家可以自己试试。</p><p>接下来就是 application：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 2000</span><br><span class="line">  undertow:</span><br><span class="line">    accesslog:</span><br><span class="line">      enabled: false</span><br><span class="line">      pattern: combined</span><br><span class="line">  servlet:</span><br><span class="line">    session:</span><br><span class="line">      timeout: PT120M</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">client:</span><br><span class="line">  http:</span><br><span class="line">    request:</span><br><span class="line">      connectTimeout: 8000</span><br><span class="line">      readTimeout: 30000</span><br><span class="line"></span><br><span class="line">mybatis:</span><br><span class="line">  mapperLocations: classpath:mapper&#x2F;*.xml</span><br><span class="line">  typeAliasesPackage: com.damon.*.model</span><br></pre></td></tr></table></figure><p>配置完成后，完成 main：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">package com.damon;</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.SpringApplication;</span><br><span class="line">import org.springframework.boot.autoconfigure.EnableAutoConfiguration;</span><br><span class="line">import org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line">import org.springframework.context.annotation.ComponentScan;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> *</span><br><span class="line"> * 配置最多的就是认证服务端，验证账号、密码，存储 token，检查 token ,刷新 token 等都是认证服务端的工作</span><br><span class="line"> * @author Damon</span><br><span class="line"> * @date 2020年1月13日 下午2:29:42</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Configuration</span><br><span class="line">@EnableAutoConfiguration</span><br><span class="line">@ComponentScan(basePackages &#x3D; &#123;&quot;com.damon&quot;&#125;)</span><br><span class="line">@EnableDiscoveryClient</span><br><span class="line">public class CasApp &#123;</span><br><span class="line">  public static void main(String[] args) &#123;</span><br><span class="line">    SpringApplication.run(CasApp.class, args);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来就是配置几个 Oauth2 服务端的几个配置类：AuthorizationServerConfig、ResourceServerConfig、SecurityConfig、RedisTokenStoreConfig、MyRedisTokenStore、UserOAuth2WebResponseExceptionTranslator、AuthenticationEntryPointHandle 等。在 Springcloud Oauth2 进阶篇、Springcloud Oauth2 HA篇 等几篇中已经讲过了。对于相关代码可以关注我的公众号和我互动。</p><p>其中最重要的就是登录时的函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">package com.damon.login.service.impl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import org.apache.commons.lang3.StringUtils;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.security.core.authority.SimpleGrantedAuthority;</span><br><span class="line">import org.springframework.security.core.userdetails.User;</span><br><span class="line">import org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line">import org.springframework.security.core.userdetails.UsernameNotFoundException;</span><br><span class="line">import org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class="line">import org.springframework.security.oauth2.common.OAuth2AccessToken;</span><br><span class="line">import org.springframework.security.oauth2.provider.token.ConsumerTokenServices;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import com.damon.commons.Response;</span><br><span class="line">import com.damon.constant.Constant;</span><br><span class="line">import com.damon.constant.LoginEnum;</span><br><span class="line">import com.damon.exception.InnerErrorException;</span><br><span class="line">import com.damon.login.dao.UserMapper;</span><br><span class="line">import com.damon.login.model.SysUser;</span><br><span class="line">import com.damon.login.service.LoginService;</span><br><span class="line">import com.damon.utils.IpUtil;</span><br><span class="line">import com.google.common.collect.Lists;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author wangshoufa</span><br><span class="line"> * @date 2018年11月15日 下午12:01:53</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Service</span><br><span class="line">public class LoginServiceImpl implements LoginService &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  Logger logger &#x3D; LoggerFactory.getLogger(LoginServiceImpl.class);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F;private List&lt;User&gt; userList;</span><br><span class="line"></span><br><span class="line">  @Autowired</span><br><span class="line">    private PasswordEncoder passwordEncoder;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">  private UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private HttpServletRequest req;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * Auth</span><br><span class="line">     * 登录认证</span><br><span class="line">     * 实际中从数据库获取信息</span><br><span class="line">     * 这里为了做演示，把用户名、密码和所属角色都写在代码里了，正式环境中，这里应该是从数据库或者其他地方根据用户名将加密后的密码及所属角色查出来的。账号 damon ，</span><br><span class="line">     * 密码123456，稍后在换取 token 的时候会用到。并且给这个用户设置 &quot;ROLE_ADMIN&quot; 角色。</span><br><span class="line">     *</span><br><span class="line">     *&#x2F;</span><br><span class="line">    @Override</span><br><span class="line">  public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException &#123;</span><br><span class="line">      logger.info(&quot;clientIp is: &#123;&#125; ,username: &#123;&#125;&quot;, IpUtil.getClientIp(req), username);</span><br><span class="line">    logger.info(&quot;serverIp is: &#123;&#125;&quot;, IpUtil.getCurrentIp());</span><br><span class="line">    &#x2F;&#x2F; 查询数据库操作</span><br><span class="line">    try &#123;</span><br><span class="line">      SysUser user &#x3D; userMapper.getUserByUsername(username);</span><br><span class="line">      if (user &#x3D;&#x3D; null) &#123;</span><br><span class="line">        logger.error(&quot;user not exist&quot;);</span><br><span class="line">        throw new UsernameNotFoundException(&quot;username is not exist&quot;);</span><br><span class="line">        &#x2F;&#x2F;throw new UsernameNotFoundException(&quot;the user is not found&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      else &#123;</span><br><span class="line">        &#x2F;&#x2F; 用户角色也应在数据库中获取，这里简化</span><br><span class="line">        String role &#x3D; &quot;&quot;;</span><br><span class="line">        if(user.getIsAdmin() &#x3D;&#x3D; 1) &#123;</span><br><span class="line">          role &#x3D; &quot;admin&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;SimpleGrantedAuthority&gt; authorities &#x3D; Lists.newArrayList();</span><br><span class="line">        authorities.add(new SimpleGrantedAuthority(role));</span><br><span class="line">        &#x2F;&#x2F;String password &#x3D; passwordEncoder.encode(&quot;123456&quot;);&#x2F;&#x2F; 123456是密码</span><br><span class="line">        &#x2F;&#x2F;return new User(username, password, authorities);</span><br><span class="line">        &#x2F;&#x2F; 线上环境应该通过用户名查询数据库获取加密后的密码</span><br><span class="line">        return new User(username, user.getPassword(), authorities);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">      logger.error(&quot;database collect failed&quot;);</span><br><span class="line">      logger.error(e.getMessage(), e);</span><br><span class="line">      throw new UsernameNotFoundException(e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数 loadUserByUsername 需要验证数据库的密码，并且给用户授权角色。</p><p>到此，鉴权中心服务端完成。上面说的利用了 Nacos 来作为注册中心被客户端服务发现，并提供配置管理。</p><p>下载 Nacos 地址：<a href="https://github.com/alibaba/nacos/releases" target="_blank" rel="noopener">https://github.com/alibaba/nacos/releases</a></p><p>版本：v1.2.1</p><p>执行：</p><p>Linux/Unix/Mac：sh startup.sh -m standalone</p><p>Windows：cmd startup.cmd -m standalone</p><p>启动完成之后，访问：<a href="http://127.0.0.1:8848/nacos/，可以进入Nacos的服务管理页面，具体如下：" target="_blank" rel="noopener">http://127.0.0.1:8848/nacos/，可以进入Nacos的服务管理页面，具体如下：</a></p><p>默认用户名与密码都是nacos。</p><p>登陆后打开服务管理，可以看到注册到 Nacos 的服务列表：</p><p>可以点击配置管理，查看配置：</p><p>如果没有配置任何服务的配置，可以新建：</p><p>上面讲述了Nacos 如何作为注册中心与配置中心的，很简单吧。</p><p>接下来我们讲解服务提供者代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br></pre></td><td class="code"><pre><span class="line">&lt;project xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0&quot; xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">  xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">  &lt;modelVersion&gt;4.0.0&lt;&#x2F;modelVersion&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;groupId&gt;com.damon&lt;&#x2F;groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;provider-service&lt;&#x2F;artifactId&gt;</span><br><span class="line">  &lt;version&gt;0.0.1-SNAPSHOT&lt;&#x2F;version&gt;</span><br><span class="line">  &lt;packaging&gt;jar&lt;&#x2F;packaging&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;name&gt;provider-service&lt;&#x2F;name&gt;</span><br><span class="line">  &lt;url&gt;http:&#x2F;&#x2F;maven.apache.org&lt;&#x2F;url&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.1.8.RELEASE&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;relativePath&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;parent&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;properties&gt;</span><br><span class="line">    &lt;project.build.sourceEncoding&gt;UTF-8&lt;&#x2F;project.build.sourceEncoding&gt;</span><br><span class="line">    &lt;project.reporting.outputEncoding&gt;UTF-8&lt;&#x2F;project.reporting.outputEncoding&gt;</span><br><span class="line">    &lt;java.version&gt;1.8&lt;&#x2F;java.version&gt;</span><br><span class="line">    &lt;swagger.version&gt;2.6.1&lt;&#x2F;swagger.version&gt;</span><br><span class="line">    &lt;xstream.version&gt;1.4.7&lt;&#x2F;xstream.version&gt;</span><br><span class="line">    &lt;pageHelper.version&gt;4.1.6&lt;&#x2F;pageHelper.version&gt;</span><br><span class="line">    &lt;fastjson.version&gt;1.2.51&lt;&#x2F;fastjson.version&gt;</span><br><span class="line">    &lt;!-- &lt;springcloud.version&gt;2.1.8.RELEASE&lt;&#x2F;springcloud.version&gt; --&gt;</span><br><span class="line">    &lt;springcloud.version&gt;Greenwich.SR3&lt;&#x2F;springcloud.version&gt;</span><br><span class="line">    &lt;springcloud.kubernetes.version&gt;1.1.1.RELEASE&lt;&#x2F;springcloud.kubernetes.version&gt;</span><br><span class="line">    &lt;mysql.version&gt;5.1.46&lt;&#x2F;mysql.version&gt;</span><br><span class="line"></span><br><span class="line">    &lt;alibaba-cloud.version&gt;2.1.1.RELEASE&lt;&#x2F;alibaba-cloud.version&gt;</span><br><span class="line">    &lt;springcloud.alibaba.version&gt;0.9.0.RELEASE&lt;&#x2F;springcloud.alibaba.version&gt;</span><br><span class="line">  &lt;&#x2F;properties&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;dependencyManagement&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">      &lt;!-- &lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;com.alibaba.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;spring-cloud-alibaba-dependencies&lt;&#x2F;artifactId&gt;</span><br><span class="line">          &lt;version&gt;$&#123;alibaba-cloud.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">          &lt;type&gt;pom&lt;&#x2F;type&gt;</span><br><span class="line">          &lt;scope&gt;import&lt;&#x2F;scope&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt; --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-alibaba-dependencies&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;springcloud.alibaba.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;type&gt;pom&lt;&#x2F;type&gt;</span><br><span class="line">        &lt;scope&gt;import&lt;&#x2F;scope&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-dependencies&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;springcloud.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;type&gt;pom&lt;&#x2F;type&gt;</span><br><span class="line">        &lt;scope&gt;import&lt;&#x2F;scope&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line">  &lt;&#x2F;dependencyManagement&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-boot-starter-web&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;exclusions&gt;</span><br><span class="line">        &lt;exclusion&gt;</span><br><span class="line">          &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;spring-boot-starter-tomcat&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;exclusion&gt;</span><br><span class="line">      &lt;&#x2F;exclusions&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-boot-starter-undertow&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-oauth2&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-netflix-ribbon&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;fastjson&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;fastjson.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- swagger --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;springfox-swagger2&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;swagger.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;io.springfox&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;springfox-swagger-ui&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;swagger.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.commons&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;commons-lang3&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;commons-collections&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;commons-collections&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;3.2.2&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!--分页插件--&gt;</span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.github.pagehelper&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;pagehelper&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;pageHelper.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- mybatis --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis.spring.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-spring-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.1.1&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;mysql.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- datasource pool--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;druid&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.1.3&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 对redis支持,引入的话项目缓存就支持redis了,所以必须加上redis的相关配置,否则操作相关缓存会报异常 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-boot-starter-data-redis&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.google.guava&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;guava&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;19.0&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;io.jsonwebtoken&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;jjwt&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;0.9.0&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;dependencies&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;build&gt;</span><br><span class="line">    &lt;finalName&gt;$&#123;project.artifactId&#125;&lt;&#x2F;finalName&gt;</span><br><span class="line">    &lt;plugins&gt;</span><br><span class="line">      &lt;plugin&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;configuration&gt;</span><br><span class="line">          &lt;jvmArguments&gt;-Dfile.encoding&#x3D;UTF-8&lt;&#x2F;jvmArguments&gt;</span><br><span class="line">          &lt;fork&gt;true&lt;&#x2F;fork&gt;</span><br><span class="line">        &lt;&#x2F;configuration&gt;</span><br><span class="line">      &lt;&#x2F;plugin&gt;</span><br><span class="line">      &lt;plugin&gt;</span><br><span class="line">        &lt;groupId&gt;org.jacoco&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jacoco-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;0.7.8&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;executions&gt;</span><br><span class="line">          &lt;execution&gt;</span><br><span class="line">            &lt;goals&gt;</span><br><span class="line">              &lt;goal&gt;prepare-agent&lt;&#x2F;goal&gt;</span><br><span class="line">              &lt;goal&gt;report&lt;&#x2F;goal&gt;</span><br><span class="line">            &lt;&#x2F;goals&gt;</span><br><span class="line">          &lt;&#x2F;execution&gt;</span><br><span class="line">        &lt;&#x2F;executions&gt;</span><br><span class="line">      &lt;&#x2F;plugin&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!-- 自动生成代码 插件 begin --&gt;</span><br><span class="line">      &lt;!-- &lt;plugin&gt;</span><br><span class="line">        &lt;groupId&gt;org.mybatis.generator&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.3.2&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;configuration&gt;</span><br><span class="line">          &lt;configurationFile&gt;src&#x2F;main&#x2F;resources&#x2F;generatorConfig.xml&lt;&#x2F;configurationFile&gt;</span><br><span class="line">          &lt;verbose&gt;true&lt;&#x2F;verbose&gt;</span><br><span class="line">          &lt;overwrite&gt;true&lt;&#x2F;overwrite&gt;</span><br><span class="line">        &lt;&#x2F;configuration&gt;</span><br><span class="line">        &lt;dependencies&gt;</span><br><span class="line">          &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis.generator&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-generator-core&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.2&lt;&#x2F;version&gt;</span><br><span class="line">          &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;&#x2F;dependencies&gt;</span><br><span class="line">      &lt;&#x2F;plugin&gt; --&gt;</span><br><span class="line">    &lt;&#x2F;plugins&gt;</span><br><span class="line">  &lt;&#x2F;build&gt;</span><br><span class="line">&lt;&#x2F;project&gt;</span><br></pre></td></tr></table></figure><p>一如既往的引入依赖。</p><p>配置 bootstrap 文件；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">management:</span><br><span class="line">  endpoint:</span><br><span class="line">    restart:</span><br><span class="line">      enabled: true</span><br><span class="line">    health:</span><br><span class="line">      enabled: true</span><br><span class="line">    info:</span><br><span class="line">      enabled: true</span><br><span class="line"></span><br><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: provider-service</span><br><span class="line"></span><br><span class="line">  cloud:</span><br><span class="line">    nacos:</span><br><span class="line">      discovery:</span><br><span class="line">        server-addr: 127.0.0.1:8848</span><br><span class="line">      config:</span><br><span class="line">        server-addr: 127.0.0.1:8848</span><br><span class="line">        refreshable-dataids: actuator.properties,log.properties</span><br><span class="line"></span><br><span class="line">  http:</span><br><span class="line">    encoding:</span><br><span class="line">      charset: UTF-8</span><br><span class="line">      enabled: true</span><br><span class="line">      force: true</span><br><span class="line">  mvc:</span><br><span class="line">    throw-exception-if-no-handler-found: true</span><br><span class="line">  main:</span><br><span class="line">    allow-bean-definition-overriding: true #当遇到同样名称时，是否允许覆盖注册</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">logging:</span><br><span class="line">  path: &#x2F;data&#x2F;$&#123;spring.application.name&#125;&#x2F;logs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cas-server-url: http:&#x2F;&#x2F;oauth-cas #http:&#x2F;&#x2F;localhost:2000#设置可以访问的地址</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">security:</span><br><span class="line">  oauth2: #与cas对应的配置</span><br><span class="line">    client:</span><br><span class="line">      client-id: provider-service</span><br><span class="line">      client-secret: provider-service-123</span><br><span class="line">      user-authorization-uri: $&#123;cas-server-url&#125;&#x2F;oauth&#x2F;authorize #是授权码认证方式需要的</span><br><span class="line">      access-token-uri: $&#123;cas-server-url&#125;&#x2F;oauth&#x2F;token #是密码模式需要用到的获取 token 的接口</span><br><span class="line">    resource:</span><br><span class="line">      loadBalanced: true</span><br><span class="line">      #jwt: #jwt存储token时开启</span><br><span class="line">        #key-uri: $&#123;cas-server-url&#125;&#x2F;oauth&#x2F;token_key</span><br><span class="line">        #key-value: test_jwt_sign_key</span><br><span class="line">      id: provider-service</span><br><span class="line">      #指定用户信息地址</span><br><span class="line">      user-info-uri: $&#123;cas-server-url&#125;&#x2F;api&#x2F;user #指定user info的URI，原生地址后缀为&#x2F;auth&#x2F;user</span><br><span class="line">      prefer-token-info: false</span><br><span class="line">      #token-info-uri:</span><br><span class="line">    authorization:</span><br><span class="line">      check-token-access: $&#123;cas-server-url&#125;&#x2F;oauth&#x2F;check_token #当此web服务端接收到来自UI客户端的请求后，需要拿着请求中的 token 到认证服务端做 token 验证，就是请求的这个接口</span><br><span class="line">application 文件；</span><br><span class="line"></span><br><span class="line">server:</span><br><span class="line">  port: 2001</span><br><span class="line">  undertow:</span><br><span class="line">    accesslog:</span><br><span class="line">      enabled: false</span><br><span class="line">      pattern: combined</span><br><span class="line">  servlet:</span><br><span class="line">    session:</span><br><span class="line">      timeout: PT120M</span><br><span class="line">      cookie:</span><br><span class="line">        name: PROVIDER-SERVICE-SESSIONID #防止Cookie冲突，冲突会导致登录验证不通过</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">client:</span><br><span class="line">  http:</span><br><span class="line">    request:</span><br><span class="line">      connectTimeout: 8000</span><br><span class="line">      readTimeout: 30000</span><br><span class="line"></span><br><span class="line">mybatis:</span><br><span class="line">  mapperLocations: classpath:mapper&#x2F;*.xml</span><br><span class="line">  typeAliasesPackage: com.damon.*.model</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">backend:</span><br><span class="line">  ribbon:</span><br><span class="line">    client:</span><br><span class="line">      enabled: true</span><br><span class="line">    ServerListRefreshInterval: 5000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ribbon:</span><br><span class="line">  ConnectTimeout: 3000</span><br><span class="line">  # 设置全局默认的ribbon的读超时</span><br><span class="line">  ReadTimeout: 1000</span><br><span class="line">  eager-load:</span><br><span class="line">    enabled: true</span><br><span class="line">    clients: oauth-cas,consumer-service</span><br><span class="line">  MaxAutoRetries: 1 #对第一次请求的服务的重试次数</span><br><span class="line">  MaxAutoRetriesNextServer: 1 #要重试的下一个服务的最大数量（不包括第一个服务）</span><br><span class="line">  #listOfServers: localhost:5556,localhost:5557</span><br><span class="line">  #ServerListRefreshInterval: 2000</span><br><span class="line">  OkToRetryOnAllOperations: true</span><br><span class="line">  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hystrix.command.BackendCall.execution.isolation.thread.timeoutInMilliseconds: 5000</span><br><span class="line">hystrix.threadpool.BackendCallThread.coreSize: 5</span><br></pre></td></tr></table></figure><p>接下来启动类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">package com.damon;</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.SpringApplication;</span><br><span class="line">import org.springframework.boot.autoconfigure.EnableAutoConfiguration;</span><br><span class="line">import org.springframework.boot.autoconfigure.security.oauth2.client.EnableOAuth2Sso;</span><br><span class="line">import org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line">import org.springframework.context.annotation.ComponentScan;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author Damon</span><br><span class="line"> * @date 2020年1月13日 下午3:23:06</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">@EnableAutoConfiguration</span><br><span class="line">@ComponentScan(basePackages &#x3D; &#123;&quot;com.damon&quot;&#125;)</span><br><span class="line">@EnableDiscoveryClient</span><br><span class="line">@EnableOAuth2Sso</span><br><span class="line">public class ProviderApp &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(ProviderApp.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：注解 @EnableDiscoveryClient、@EnableOAuth2Sso 都需要。</p><p>这时，同样需要配置 ResourceServerConfig、SecurityConfig。</p><p>如果需要数据库，可以加上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">package com.damon.config;</span><br><span class="line"></span><br><span class="line">import java.util.Properties;</span><br><span class="line">import javax.sql.DataSource;</span><br><span class="line">import org.apache.ibatis.plugin.Interceptor;</span><br><span class="line">import org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line">import org.mybatis.spring.SqlSessionFactoryBean;</span><br><span class="line">import org.mybatis.spring.SqlSessionTemplate;</span><br><span class="line">import org.mybatis.spring.annotation.MapperScan;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.core.env.Environment;</span><br><span class="line">import org.springframework.core.io.support.PathMatchingResourcePatternResolver;</span><br><span class="line">import org.springframework.jdbc.datasource.DataSourceTransactionManager;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">import org.springframework.transaction.annotation.EnableTransactionManagement;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import com.alibaba.druid.pool.DruidDataSourceFactory;</span><br><span class="line">import com.github.pagehelper.PageHelper;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line">*</span><br><span class="line">*</span><br><span class="line">* created by wangshoufa</span><br><span class="line">* 2018年5月23日 下午7:39:37</span><br><span class="line">*</span><br><span class="line">*&#x2F;</span><br><span class="line">@Component</span><br><span class="line">@Configuration</span><br><span class="line">@EnableTransactionManagement</span><br><span class="line">@MapperScan(&quot;com.damon.*.dao&quot;)</span><br><span class="line">public class MybaitsConfig &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private EnvConfig envConfig;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">  private Environment env;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Bean(name &#x3D; &quot;dataSource&quot;)</span><br><span class="line">    public DataSource getDataSource() throws Exception &#123;</span><br><span class="line">        Properties props &#x3D; new Properties();</span><br><span class="line">        props.put(&quot;driverClassName&quot;, envConfig.getJdbc_driverClassName());</span><br><span class="line">        props.put(&quot;url&quot;, envConfig.getJdbc_url());</span><br><span class="line">        props.put(&quot;username&quot;, envConfig.getJdbc_username());</span><br><span class="line">        props.put(&quot;password&quot;, envConfig.getJdbc_password());</span><br><span class="line">        return DruidDataSourceFactory.createDataSource(props);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">  public SqlSessionFactory sqlSessionFactory(@Qualifier(&quot;dataSource&quot;) DataSource dataSource) throws Exception &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    SqlSessionFactoryBean fb &#x3D; new SqlSessionFactoryBean();</span><br><span class="line">    &#x2F;&#x2F; 指定数据源(这个必须有，否则报错)</span><br><span class="line">    fb.setDataSource(dataSource);</span><br><span class="line">    &#x2F;&#x2F; 下边两句仅仅用于*.xml文件，如果整个持久层操作不需要使用到xml文件的话（只用注解就可以搞定），则不加</span><br><span class="line">    fb.setTypeAliasesPackage(env.getProperty(&quot;mybatis.typeAliasesPackage&quot;));&#x2F;&#x2F; 指定基包</span><br><span class="line">    fb.setMapperLocations(new PathMatchingResourcePatternResolver().getResources(env.getProperty(&quot;mybatis.mapperLocations&quot;)));&#x2F;&#x2F; 指定xml文件位置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 分页插件</span><br><span class="line">    PageHelper pageHelper &#x3D; new PageHelper();</span><br><span class="line">    Properties props &#x3D; new Properties();</span><br><span class="line">    &#x2F;&#x2F; 启用合理化时，如果pageNum&lt;1会查询第一页，如果pageNum&gt;pages会查询最后一页</span><br><span class="line">        &#x2F;&#x2F;禁用合理化时，如果pageNum&lt;1或pageNum&gt;pages会返回空数据</span><br><span class="line">    props.setProperty(&quot;reasonable&quot;, &quot;true&quot;);</span><br><span class="line">    &#x2F;&#x2F;指定数据库</span><br><span class="line">    props.setProperty(&quot;dialect&quot;, &quot;mysql&quot;);</span><br><span class="line">    &#x2F;&#x2F;支持通过Mapper接口参数来传递分页参数</span><br><span class="line">    props.setProperty(&quot;supportMethodsArguments&quot;, &quot;true&quot;);</span><br><span class="line">    &#x2F;&#x2F;总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page</span><br><span class="line">    props.setProperty(&quot;returnPageInfo&quot;, &quot;check&quot;);</span><br><span class="line">    props.setProperty(&quot;params&quot;, &quot;count&#x3D;countSql&quot;);</span><br><span class="line">    pageHelper.setProperties(props);</span><br><span class="line">    &#x2F;&#x2F; 添加插件</span><br><span class="line">    fb.setPlugins(new Interceptor[] &#123; pageHelper &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    try &#123;</span><br><span class="line">      return fb.getObject();</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">            throw e;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 配置事务管理器</span><br><span class="line">     * @param dataSource</span><br><span class="line">     * @return</span><br><span class="line">     * @throws Exception</span><br><span class="line">     *&#x2F;</span><br><span class="line">    @Bean</span><br><span class="line">    public DataSourceTransactionManager transactionManager(DataSource dataSource) throws Exception &#123;</span><br><span class="line">        return new DataSourceTransactionManager(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public SqlSessionTemplate sqlSessionTemplate(SqlSessionFactory sqlSessionFactory) &#123;</span><br><span class="line">        return new SqlSessionTemplate(sqlSessionFactory);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来新写一个 controller 类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">package com.damon.user.controller;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.security.access.prepost.PreAuthorize;</span><br><span class="line">import org.springframework.security.core.Authentication;</span><br><span class="line">import org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationDetails;</span><br><span class="line">import org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import com.damon.commons.Response;</span><br><span class="line">import com.damon.user.service.UserService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> *</span><br><span class="line"> *</span><br><span class="line"> * @author Damon</span><br><span class="line"> * @date 2020年1月13日 下午3:31:07</span><br><span class="line"> *</span><br><span class="line"> *&#x2F;</span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;&#x2F;api&#x2F;user&quot;)</span><br><span class="line">public class UserController &#123;</span><br><span class="line"></span><br><span class="line">  private static final Logger logger &#x3D; LoggerFactory.getLogger(UserController.class);</span><br><span class="line"></span><br><span class="line">  @Autowired</span><br><span class="line">  private UserService userService;</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;&#x2F;getCurrentUser&quot;)</span><br><span class="line">    @PreAuthorize(&quot;hasAuthority(&#39;admin&#39;)&quot;)</span><br><span class="line">    public Object getCurrentUser(Authentication authentication) &#123;</span><br><span class="line">      logger.info(&quot;test password mode&quot;);</span><br><span class="line">        return authentication;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @PreAuthorize(&quot;hasAuthority(&#39;admin&#39;)&quot;)</span><br><span class="line">    @GetMapping(&quot;&#x2F;auth&#x2F;admin&quot;)</span><br><span class="line">    public Object adminAuth() &#123;</span><br><span class="line">      logger.info(&quot;test password mode&quot;);</span><br><span class="line">        return &quot;Has admin auth!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @GetMapping(value &#x3D; &quot;&#x2F;get&quot;)</span><br><span class="line">    @PreAuthorize(&quot;hasAuthority(&#39;admin&#39;)&quot;)</span><br><span class="line">    &#x2F;&#x2F;@PreAuthorize(&quot;hasRole(&#39;admin&#39;)&quot;)&#x2F;&#x2F;无效</span><br><span class="line">    public Object get(Authentication authentication)&#123;</span><br><span class="line">        &#x2F;&#x2F;Authentication authentication &#x3D; SecurityContextHolder.getContext().getAuthentication();</span><br><span class="line">        authentication.getCredentials();</span><br><span class="line">        OAuth2AuthenticationDetails details &#x3D; (OAuth2AuthenticationDetails)authentication.getDetails();</span><br><span class="line">        String token &#x3D; details.getTokenValue();</span><br><span class="line">        return token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;&#x2F;getUserInfo&quot;)</span><br><span class="line">    @PreAuthorize(&quot;hasAuthority(&#39;admin&#39;)&quot;)</span><br><span class="line">    public Response&lt;Object&gt; getUserInfo(Authentication authentication) &#123;</span><br><span class="line">      logger.info(&quot;test password mode&quot;);</span><br><span class="line">      Object principal &#x3D; authentication.getPrincipal();</span><br><span class="line">      if(principal instanceof String) &#123;</span><br><span class="line">        String username &#x3D; (String) principal;</span><br><span class="line">        return userService.getUserByUsername(username);</span><br><span class="line">      &#125;</span><br><span class="line">    return null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>基本上一个代码就完成了。接下来测试一下：</p><p>认证：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -X POST -d &quot;username&#x3D;admin&amp;password&#x3D;123456&amp;grant_type&#x3D;password&amp;client_id&#x3D;provider-service&amp;client_secret&#x3D;provider-service-123&quot; http:&#x2F;&#x2F;localhost:5555&#x2F;oauth-cas&#x2F;oauth&#x2F;token</span><br></pre></td></tr></table></figure><p>拿到token后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -H &quot;Accept: application&#x2F;json&quot; -H &quot;Authorization:bearer f4a42baa-a24a-4342-a00b-32cb135afce9&quot; -X GET http:&#x2F;&#x2F;localhost:5555&#x2F;provider-service&#x2F;api&#x2F;user&#x2F;getCurrentUser</span><br></pre></td></tr></table></figure><p>这里用到了 5555 端口，这是一个网关服务，好吧，既然提到这个，我们接下来看网关吧，引入依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line">&lt;project xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0&quot; xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">  xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">  &lt;modelVersion&gt;4.0.0&lt;&#x2F;modelVersion&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;groupId&gt;com.damon&lt;&#x2F;groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;alibaba-gateway&lt;&#x2F;artifactId&gt;</span><br><span class="line">  &lt;version&gt;0.0.1-SNAPSHOT&lt;&#x2F;version&gt;</span><br><span class="line">  &lt;packaging&gt;jar&lt;&#x2F;packaging&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;name&gt;alibaba-gateway&lt;&#x2F;name&gt;</span><br><span class="line">  &lt;url&gt;http:&#x2F;&#x2F;maven.apache.org&lt;&#x2F;url&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;parent&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-parent&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.1.8.RELEASE&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;relativePath&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;parent&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;properties&gt;</span><br><span class="line">    &lt;project.build.sourceEncoding&gt;UTF-8&lt;&#x2F;project.build.sourceEncoding&gt;</span><br><span class="line">    &lt;project.reporting.outputEncoding&gt;UTF-8&lt;&#x2F;project.reporting.outputEncoding&gt;</span><br><span class="line">    &lt;java.version&gt;1.8&lt;&#x2F;java.version&gt;</span><br><span class="line">    &lt;swagger.version&gt;2.6.1&lt;&#x2F;swagger.version&gt;</span><br><span class="line">    &lt;xstream.version&gt;1.4.7&lt;&#x2F;xstream.version&gt;</span><br><span class="line">    &lt;pageHelper.version&gt;4.1.6&lt;&#x2F;pageHelper.version&gt;</span><br><span class="line">    &lt;fastjson.version&gt;1.2.51&lt;&#x2F;fastjson.version&gt;</span><br><span class="line">    &lt;!-- &lt;springcloud.version&gt;2.1.8.RELEASE&lt;&#x2F;springcloud.version&gt; --&gt;</span><br><span class="line">    &lt;springcloud.version&gt;Greenwich.SR3&lt;&#x2F;springcloud.version&gt;</span><br><span class="line">    &lt;springcloud.kubernetes.version&gt;1.1.1.RELEASE&lt;&#x2F;springcloud.kubernetes.version&gt;</span><br><span class="line">    &lt;mysql.version&gt;5.1.46&lt;&#x2F;mysql.version&gt;</span><br><span class="line"></span><br><span class="line">    &lt;alibaba-cloud.version&gt;2.1.1.RELEASE&lt;&#x2F;alibaba-cloud.version&gt;</span><br><span class="line">    &lt;springcloud.alibaba.version&gt;0.9.0.RELEASE&lt;&#x2F;springcloud.alibaba.version&gt;</span><br><span class="line">  &lt;&#x2F;properties&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;dependencyManagement&gt;</span><br><span class="line">    &lt;dependencies&gt;</span><br><span class="line">      &lt;!-- &lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;com.alibaba.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;spring-cloud-alibaba-dependencies&lt;&#x2F;artifactId&gt;</span><br><span class="line">          &lt;version&gt;$&#123;alibaba-cloud.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">          &lt;type&gt;pom&lt;&#x2F;type&gt;</span><br><span class="line">          &lt;scope&gt;import&lt;&#x2F;scope&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt; --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-alibaba-dependencies&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;springcloud.alibaba.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;type&gt;pom&lt;&#x2F;type&gt;</span><br><span class="line">        &lt;scope&gt;import&lt;&#x2F;scope&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">      &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-cloud-dependencies&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;springcloud.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;type&gt;pom&lt;&#x2F;type&gt;</span><br><span class="line">        &lt;scope&gt;import&lt;&#x2F;scope&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt;</span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line">  &lt;&#x2F;dependencyManagement&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;dependencies&gt;</span><br><span class="line">    &lt;!-- 不要依赖spring-boot-starter-web，会和spring-cloud-starter-gateway冲突，启动时异常 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-gateway&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--基于 reactive stream 的redis --&gt;</span><br><span class="line">    &lt;!-- &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-data-redis-reactive&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt; --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-commons&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-netflix-ribbon&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-cloud-starter-netflix-hystrix&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;fastjson&lt;&#x2F;artifactId&gt;</span><br><span class="line">      &lt;version&gt;$&#123;fastjson.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.google.guava&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;guava&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;19.0&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">    &lt;finalName&gt;$&#123;project.artifactId&#125;&lt;&#x2F;finalName&gt;</span><br><span class="line">    &lt;plugins&gt;</span><br><span class="line">      &lt;plugin&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;configuration&gt;</span><br><span class="line">          &lt;jvmArguments&gt;-Dfile.encoding&#x3D;UTF-8&lt;&#x2F;jvmArguments&gt;</span><br><span class="line">          &lt;fork&gt;true&lt;&#x2F;fork&gt;</span><br><span class="line">        &lt;&#x2F;configuration&gt;</span><br><span class="line">      &lt;&#x2F;plugin&gt;</span><br><span class="line">      &lt;plugin&gt;</span><br><span class="line">        &lt;groupId&gt;org.jacoco&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jacoco-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;0.7.8&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;executions&gt;</span><br><span class="line">          &lt;execution&gt;</span><br><span class="line">            &lt;goals&gt;</span><br><span class="line">              &lt;goal&gt;prepare-agent&lt;&#x2F;goal&gt;</span><br><span class="line">              &lt;goal&gt;report&lt;&#x2F;goal&gt;</span><br><span class="line">            &lt;&#x2F;goals&gt;</span><br><span class="line">          &lt;&#x2F;execution&gt;</span><br><span class="line">        &lt;&#x2F;executions&gt;</span><br><span class="line">      &lt;&#x2F;plugin&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!-- 自动生成代码 插件 begin --&gt;</span><br><span class="line">      &lt;!-- &lt;plugin&gt;</span><br><span class="line">        &lt;groupId&gt;org.mybatis.generator&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.3.2&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;configuration&gt;</span><br><span class="line">          &lt;configurationFile&gt;src&#x2F;main&#x2F;resources&#x2F;generatorConfig.xml&lt;&#x2F;configurationFile&gt;</span><br><span class="line">          &lt;verbose&gt;true&lt;&#x2F;verbose&gt;</span><br><span class="line">          &lt;overwrite&gt;true&lt;&#x2F;overwrite&gt;</span><br><span class="line">        &lt;&#x2F;configuration&gt;</span><br><span class="line">        &lt;dependencies&gt;</span><br><span class="line">          &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis.generator&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-generator-core&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.2&lt;&#x2F;version&gt;</span><br><span class="line">          &lt;&#x2F;dependency&gt;</span><br><span class="line">        &lt;&#x2F;dependencies&gt;</span><br><span class="line">      &lt;&#x2F;plugin&gt; --&gt;</span><br><span class="line">    &lt;&#x2F;plugins&gt;</span><br><span class="line">  &lt;&#x2F;build&gt;</span><br><span class="line">&lt;&#x2F;project&gt;</span><br></pre></td></tr></table></figure><p>同样利用 Nacos 来发现服务。</p><p>相关配置在 Spring Cloud Kubernetes之实战三网关Gateway 一文中有讲过，这里的注册配置改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  cloud:</span><br><span class="line">    gateway:</span><br><span class="line">      discovery:</span><br><span class="line">        locator:</span><br><span class="line">          enabled: true #并且我们并没有给每一个服务单独配置路由 而是使用了服务发现自动注册路由的方式</span><br><span class="line">          lowerCaseServiceId: true</span><br><span class="line"></span><br><span class="line">    nacos:</span><br><span class="line">      discovery:</span><br><span class="line">        server-addr: 127.0.0.1:8848</span><br><span class="line">      config:</span><br><span class="line">        server-addr: 127.0.0.1:8848</span><br><span class="line">        refreshable-dataids: actuator.properties,log.properties</span><br></pre></td></tr></table></figure><p>前面用的是 kubernetes。</p><p>好了，网关配置好后，启动在 Nacos dashboard可以看到该服务，表示注册服务成功。接下来就可以利用其来调用其他服务了。具体 curl 命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -H &quot;Accept: application&#x2F;json&quot; -H &quot;Authorization:bearer f4a42baa-a24a-4342-a00b-32cb135afce9&quot; -X GET http:&#x2F;&#x2F;localhost:5555&#x2F;consumer-service&#x2F;api&#x2F;order&#x2F;getUserInfo</span><br></pre></td></tr></table></figure><p>Ok，到此鉴权中心、服务提供者、服务消费者、服务的注册与发现、配置中心等功能已完成。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>微服务架构设计之解耦合</title>
    <link href="http://www.damon8.cn/2020/07/23/micro-service02/"/>
    <id>http://www.damon8.cn/2020/07/23/micro-service02/</id>
    <published>2020-07-23T00:47:27.000Z</published>
    <updated>2020-11-04T08:44:23.193Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>背景<br>在各个 IT 行业的公司，我们会有大大小小的业务需求。当每个产品的业务功能越来越繁重时，也许用户的需求其实很简单，就想 One Click。但是，其实这一个按钮背后可能有很多的系统交互的操作在进行，这就涉及到业务数据操作的事务，涉及到每个系统的交互逻辑、先后顺序以及数据的一致性。这些都需要在设计的时候，需要考虑到的问题。</p><p>浅谈解耦合<br>业务系统的设计有多重要<br>在 今天被问微服务，这几点，让面试官刮目相看 一文中，我们讲过微服务设计时的方方面面。其中核心的六个字可能就是：“高内聚，低耦合”。高内聚，我们在那篇文章中已经讲的很清楚了。那么低耦合，这就涉及到我们业务系统的设计了。所谓低耦合，就是要每个业务模块之间的关系降低，减少冗余、重复、交叉的复杂度，模块功能划分也尽可能单一。这样，才能达到低耦合的目的。</p><p>在电商行业，主要的功能就是购物，至于其他的，都是为购物作铺垫、营销手段：直播、促销、发优惠券等。从用户的角度来说，其实网上 shopping 的逻辑很简单：选中想要买的，支付 money 就 OK 了。但对于网站，或者说运营服务平台来说，其逻辑远没有那么简单。下面是一个简单的购物流程图：</p><p>在这里，我们看到，就这个简单的购物流程，对于用户来说，可能操作很简单：打开网站，登录后选择商品和选中收货地址支付，坐等收货。对于平台，其实它也不简单，包括了很多系统：用户系统、商品系统、仓库系统、订单系统、支付系统、物流系统等等。</p><p>不能仅仅因为客户的需求，只是下了一个订单，买了一件商品，那系统就设计一个就认为能解决所有事情，这种认识，可能一开始就是错的。这样的业务设计后，不但导致业务系统的逻辑很笨重，也会导致代码的 code review 非常之复杂。我曾经就亲自目睹过：好几个事情都是一个代码块来处理，甚至都写到几千行，甚至上万行。这样的思路，虽然可以实现暂时的需求。但是从长远角度，这是一个很要命的事情：这样的设计不仅仅说 code review 很吃力，兼容新功能也是很麻烦的，让后来者无法下手。而且长期下去，会导致表的死锁，甚至进入系统瘫痪状态。</p><p>如何解耦合<br>业务的复杂性，其实根本原因是没有把其给拆解化。如果把整个的大业务拆解成若干个小的需求，那对于实现，就显得即一目了然，又能完美兼容其他任何问题。咱们还是拿购物说事，为什么每个购物 app 的系统设计都是这样的套路：选中商品后必须先加入购物车，选好地址信息，然后再统一去提交订单，最后才去支付 money 呢？难道系统直接简单点，选中后就支付不就解决了吗？那么网站何必搞得这么的麻烦，浪费时间、金钱，是为了折腾人？统统都不是。其实这也是网站开发最初想的事情，并不是说一件事情一口气能解决，就鲁莽的直接一口气解决。也许到时候，时间久了，人的精力没那么旺盛，变得虚弱的时候，那一口气就无法完成了。网站也是，一个需求也许可以简单的设计，就能完成。但是如果仅仅想着，现在简单的就完成，那是对以后的不负责任。以后可能会出现一些难以想象的事情，并且难以解决。</p><p>上面扯远了，回归到解耦合，解耦合其实有很多办法。比如 Java 中就有很多解决低耦合的方法：监听、观察模式、异步回调、定时任务、消息中间件等等。</p><p>1.1 监听<br>在Java 里，有很多设计模式：工厂模式、单例模式、建造者模式、代理模式、解释器模式、监听模式、观察者模式等等。其中，监听模式是低耦合解决的方案之一。</p><p>所谓监听模式：事件源经过事件的封装传给监听器，当事件源触发事件后，监听器接收到事件对象可以回调事件的方法。这其中涉及到三个信息：事件源、事件、监听器。</p><p>For example : 模拟某个服务启动后，发送通知信息。</p><p>事件源：</p><p>package com.damon.event;</p><p>import java.util.ArrayList;<br>import java.util.List;</p><p>public class Context {<br>  private static List<Listener> list=new ArrayList<Listener>();<br>  public static void addListener(Listener listener){<br>    list.add(listener);<br>  }<br>  public static void removeListener(Listener listener){<br>    list.remove(listener);<br>  }<br>  public static void sendMsg(Event event){<br>    for(Listener listener:list){<br>      listener.onChange(event);<br>    }<br>  }<br>}<br>事件：</p><p>package com.damon.event;</p><p>public class Event {<br>  public static final int INSTALLED = 1;<br>  public static final int STARTED = 2;<br>  public static final int RESOLVED = 3;<br>  public static final int STOPPED = 4;</p><p>  private int type;<br>  private Object source;</p><p>  public Event(int type, Object source) {<br>    this.type = type;<br>    this.source = source;<br>  }<br>  public int getType() {<br>    return type;<br>  }<br>  public Object getSource() {<br>    return source;<br>  }<br>}<br>监听器：</p><p>package com.damon.event;</p><p>public class MyListener implements Listener {</p><p>  @Override<br>  public void onChange(Event event) {<br>    switch(event.getType()){<br>      case Event.STARTED :<br>        System.out.println(“started…”);<br>        break;<br>      case Event.RESOLVED :<br>        System.out.println(“resolved…”);<br>        break;<br>      case Event.STOPPED :<br>        System.out.println(“stopped…”);<br>        break;<br>      default:<br>        throw new IllegalArgumentException();<br>    }<br>  }</p><p>}<br>测试：</p><p>package com.damon.event;</p><p>public class EventTest {</p><p>  public static void main(String[] args) {<br>    Listener listener = new MyListener();<br>    //加入监听者<br>    Context.addListener(listener);<br>    //启动完毕事件触发<br>    Context.sendMsg(new Event(Event.STARTED, new MyBundle()));<br>  }<br>}<br>在服务启动的操作中，我们不需要等待或者去处理，而是继续其他的逻辑，等到服务启动后，事件监听器监听后会进行相应的操作。这样，就不会在服务启动的过程中，需要等待其启动，因为其启动的时间是无法估量的。所以就很好的解决其耦合性的问题。避免用户在等待过程中，浪费了大量不应该由用户承担的时间成本。毕竟，对于用户来说，时间就是金钱。</p><p>1.2 观察者模式<br>观察者模式，听着跟上面讲的监听模式有点像。但是，还是有区别的。所谓观察者模式：观察者相当于事件监听者，被观察者相当于事件源和事件，执行逻辑时通知观察者即可触发其 update，同时可传被观察者和其参数。看着是不是像简化了事件监听机制的实现。其又可以叫发布-订阅模式，只有两个角色。</p><p>For example : 微信群里发布了一条公告：下午三点开会，有些在群里的人接收到了消息去开会，但是有些人未在群里，未收到公告，被领导主动喊去开会。</p><p>观察者：</p><p>public abstract class Observer {</p><pre><code>protected String name;protected Subject subject;public Observer(String name, Subject subject) {    this.name = name;    this.subject = subject;}public abstract void update();</code></pre><p>}<br>通知者：</p><p>public interface Subject {<br>    //增加<br>    public void attach(Observer observer);<br>    //删除<br>    public void detach(Observer observer);<br>    //通知<br>    public void notifyObservers();</p><pre><code>//状态public void setAction(String action);public String getAction();</code></pre><p>}<br>具体人：群管理员</p><p>public class WechatManager implements Subject {</p><pre><code>//同事好友列表private List&lt;Observer&gt; observers = new LinkedList&lt;&gt;();private String action;//添加@Overridepublic void attach(Observer observer) {    observers.add(observer);}//删除@Overridepublic void detach(Observer observer) {    observers.remove(observer);}//通知@Overridepublic void notifyObservers() {    for(Observer observer : observers) {        observer.update();    }}//状态@Overridepublic String getAction() {    return action;}@Overridepublic void setAction(String action) {    this.action = action;}</code></pre><p>}</p><p>具体观察者：群内人员与群外人员</p><p>public class InWechatRoomObserver extends Observer {</p><pre><code>public InWechatRoomObserver(String name, Subject subject) {    super(name, subject);}@Overridepublic void update() {    System.out.println(subject.getAction() + &quot;\n&quot; + name + &quot;收到公告，去开会了&quot;);}</code></pre><p>}<br>Test：</p><p>public class Test {<br>    public static void main(String[] args) {<br>        //群管理员为通知者<br>        WechatManager ma = new WechatManager();</p><pre><code>    InWechatRoomObserver in = new InWechatRoomObserver(&quot;tom&quot;, ma);    OutWechatRoomObserver out = new OutWechatRoomObserver(&quot;damon&quot;, ma);    //群管理员通知    ma.attach(out);    ma.attach(in);    //damon没在群内，未被通知到，所以被领导发现    ma.detach(out);    //老板回来了    ma.setAction(&quot;下午三点，大家在大会议室开会&quot;);    //发通知    ma.notifyObservers();}</code></pre><p>}<br>可以看到：当一个对象的改变需要同时改变其它对象，并且它不知道具体有多少对象有待改变的时候，可考虑使用观察者模式。</p><p>即使用观察者模式的动机在于：在保证相关业务数据的一致性，我们不希望为了维持一致性而使各个逻辑紧密耦合，这样会给维护、扩展和重用都带来不便，而观察者模式所做的工作就是在解除耦合。</p><p>1.3 异步<br>异步，对于一个系统来说，异步操作可以很好的解耦合，因为每一步操作不需要等待结果即可继续往下进行，不论中间操作是否成功。在 Java 中，常见的异步注解：@Async，解决相应如果需要很多操作，或者操作时耗时很长，而异步进行处理来解决相关问题。有时需要注解 @EnableAsync 配合，然后弄一个异步线程池，来进行线程异步调度管理。</p><p>异步线程池初始化 bean ：</p><p>package com.damon.task;</p><p>import java.util.concurrent.Executor;<br>import java.util.concurrent.ThreadPoolExecutor;</p><p>import org.springframework.context.annotation.Bean;<br>import org.springframework.context.annotation.Configuration;<br>import org.springframework.scheduling.annotation.EnableAsync;<br>import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;<br>/**</p><ul><li>异步任务执行bean</li><li></li><li>@author Damon</li><li></li><li>/<br>@EnableAsync<br>@Configuration<br>public class TaskPoolConfig {</li></ul><pre><code>@Bean(&quot;taskExecutor&quot;)public Executor taskExecutor() {    ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();    executor.setCorePoolSize(10);    executor.setMaxPoolSize(20);    executor.setQueueCapacity(200);    executor.setKeepAliveSeconds(60);    executor.setThreadNamePrefix(&quot;taskExecutor-&quot;);    executor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());    return executor;}</code></pre><p>}<br>异步调度方法类：</p><p>package com.damon.task;</p><p>import org.apache.commons.lang.StringUtils;<br>import org.slf4j.Logger;<br>import org.slf4j.LoggerFactory;</p><p>import org.springframework.http.*;<br>import org.springframework.scheduling.annotation.Async;<br>import org.springframework.stereotype.Component;</p><p>import java.math.BigDecimal;<br>import java.text.DecimalFormat;<br>import java.util.ArrayList;<br>import java.util.List;<br>import java.util.Random;<br>/**<br> *</p><ul><li>远程业务调用封装类</li><li></li><li>@author Damon</li><li>@date 2019年3月19日 下午3:29:45</li><li></li><li>/<br>@Component<br>public class TaskService {</li></ul><p>  private Logger logger = LoggerFactory.getLogger(getClass());</p><p>  public static Random random = new Random();</p><pre><code>/** * @description 异步任务计算耗时 * @param start 开始时间 * @param userId 用户id * @throws Exception */</code></pre><p>  @Async(“taskExecutor”)<br>  public void doTaskOne(long start, String userId) throws Exception {<br>    logger.info(“ 开始做任务一 to {}”, start);<br>    Thread.sleep(random.nextInt(10000));<br>    long end = System.currentTimeMillis();<br>    logger.info(“完成任务一，耗时：” + (end - start) + “毫秒”);<br>  }<br>}<br>异步可以常见于很多业务，比如异步发送短讯告诉用户，支付成功，异步发送日志到 ELK 系统等。</p><p>1.4 定时任务<br>对于定时任务，就是指制定系统的某个时刻或每隔一段时间去触发一些逻辑执行，这样来保证业务数据的一致性，消息的一致性，或者数据的实时性。</p><p>我们常在 Java 里用 @EnableScheduling 来引入定时器，然后定义一个异步定时调度 bean：</p><p>package com.damon.task;</p><p>import java.util.concurrent.Executor;<br>import java.util.concurrent.ThreadPoolExecutor;</p><p>import org.springframework.aop.interceptor.AsyncUncaughtExceptionHandler;<br>import org.springframework.context.annotation.Bean;<br>import org.springframework.context.annotation.Configuration;<br>import org.springframework.scheduling.annotation.AsyncConfigurer;<br>import org.springframework.scheduling.annotation.EnableAsync;<br>import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;</p><p>/**<br> *</p><ul><li>异步任务执行bean</li><li>@author Damon</li><li>@date 2019年7月17日 上午10:35:56</li><li></li><li>/<br>@EnableAsync<br>@Configuration<br>public class TaskPoolConfig implements AsyncConfigurer {</li></ul><pre><code>@Bean(&quot;asyncTask&quot;)public Executor taskExecutor() {    ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();    //线程池维护线程的最少数量    executor.setCorePoolSize(10);    //线程池维护线程的最大数量    executor.setMaxPoolSize(20);    //  缓存队列    executor.setQueueCapacity(200);    //允许的空闲时间    executor.setKeepAliveSeconds(60);    executor.setThreadNamePrefix(&quot;asyncTask-&quot;);    //对拒绝task的处理策略    executor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());    return executor;}</code></pre><p>  @Override<br>  public Executor getAsyncExecutor() {<br>    return null;<br>  }</p><p>  @Override<br>  public AsyncUncaughtExceptionHandler getAsyncUncaughtExceptionHandler() {<br>    return null;<br>  }<br>}<br>同时，定义一个执行类：</p><p>/**<br> *</p><ul><li>执行调度</li><li>@author Damon</li><li>@date 2019年3月19日 下午3:29:45</li><li></li><li>/<br>@Component<br>public class TaskSchedule {</li></ul><p>  private Logger logger = LoggerFactory.getLogger(TaskSchedule.class);</p><p>  @Autowired<br>  private RestTemplate restTemplate;</p><p>  @Autowired<br>    private Environment env;</p><p>  //@Scheduled(cron = “0 0/1 * * * ?”)//每分钟<br>  @Scheduled(cron = “0 * * * * ?”)//每分钟<br>  public void dynamicResourceListener() {<br>    logger.info(“resourceLimitHandle timer start”);<br>    String namespace = env.getProperty(“INFERENCE_JOB_NAMESPACE”);<br>    resourceListenerCallBack(namespace);<br>  }<br>  private void resourceListenerCallBack(String namespace) {</p><p>  }<br>}<br>其中，cron 从左到右（用空格隔开）：</p><p>秒 分 小时 月份中的日期 月份 星期中的日期 年份</p><p>上面的逻辑是每分钟去执行某个逻辑，这样的业务我们也可能存在，For example：股票系统中，建模等数据一般都是用 Oracle 来存储的，有时候业务可能是用 Mysql，这时，需要一个定时任务来跑数据，常见的叫 ETL，所以 ETL 的由来，就是这样来的。这样的操作肯定不能在发生业务操作时来进行，否则会因为业务数据的海量读取，导致 IO 的性能，甚至内存、CPU 都会飙升。再如统计某个业务场景的数据，都可以通过这种解耦合的方式来处理。</p><p>1.5 消息中间件<br>消息中间件的话，这个也是很多的，比如：redis、rocketmq、rabbitmq、zk等等。这些中间件技术都可以再一个复杂的业务流程起到至关重要得作用。</p><p>当我们需要做一个秒杀的功能时，可以用 redis 来作分布式锁，这个能起到缓冲系统压力的作用，同时可以做到秒杀锁。</p><p>当我们需要在处理一些业务逻辑时，需要告知其他方，这时候可以用 MQ 来作消息处理，防止处理流程的断续。</p><p>当我们需要发送一些消息给外部时，但又不希望耽误当前的业务处理，这时候，可以用 MQ 或 redis 来处理消息。</p><p>当我们。。。任何时候，都可以用消息中间件来作降低系统间的耦合。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>浅谈 Java 集合 | 底层源码解析</title>
    <link href="http://www.damon8.cn/2020/07/23/core-java02/"/>
    <id>http://www.damon8.cn/2020/07/23/core-java02/</id>
    <published>2020-07-23T00:41:01.000Z</published>
    <updated>2020-11-04T08:43:23.280Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在 Java 中，我们经常会使用到一些处理缓存数据的集合类，这些集合类都有自己的特点，今天主要分享下 Java 集合中几种经常用的 Map、List、Set。</p><p>目录</p><p>1、Map</p><p>一、背景</p><p>二、Map家族</p><p>三、HashMap、Hashtable等</p><p>四、HashMap 底层数据结构</p><p>2、List</p><p>一、List 包括的子类</p><p>二、ArrayList</p><p>三、ArrayList 源码分析</p><p>四、LinkedList</p><p>五、LinkedList 源码分析</p><p>3、Set</p><p>一、Set的实质</p><p>二、HashSet</p><p>三、TreeSet</p><p>01</p><p>集合 1：Map</p><p>背景</p><p>如果一个海量的数据中，需要查询某个指定的信息，这时候，可能会犹如大海捞针，这时候，可以使用 Map 来进行一个获取。因为 Map 是键值对集合。Map这种键值（key-value）映射表的数据结构，作用就是通过key能够高效、快速查找value。</p><p>举一个例子：</p><p>import java.util.HashMap;<br>import java.util.Map;<br>import java.lang.Object;</p><p>public class Test {<br>    public static void main(String[] args) {<br>        Object o = new Object();<br>        Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();<br>        map.put(“aaa”, o); //将”aaa”和 Object实例映射并关联<br>        Student target = map.get(“aaa”); //通过key查找并返回映射的Obj实例<br>        System.out.println(target == o); //true，同一个实例<br>        Student another = map.get(“bbb”); //通过另一个key查找<br>        System.out.println(another); //未找到则返回null<br>    }<br>}<br>Map&lt;K, V&gt;是一种键-值映射表，当我们调用put(K key, V value)方法时，就把key和value做了映射并放入Map。当我们调用V get(K key)时，就可以通过key获取到对应的value。如果key不存在，则返回null。和List类似，Map也是一个接口，最常用的实现类是HashMap。</p><p>在 Map&lt;K, V&gt; 中，如果遍历的时候，其 key 是无序的，如何理解：</p><p>import java.util.HashMap;<br>import java.util.Map;<br>public class Test {<br>    public static void main(String[] args) {<br>        Map&lt;String, String&gt; map = new HashMap&lt;&gt;();<br>        map.put(“dog”, “a”);<br>        map.put(“pig”, “b”);<br>        map.put(“cat”, “c”);<br>        for (Map.Entry&lt;String, Integer&gt; entry : map.entrySet()) {<br>            String key = entry.getKey();<br>            Integer value = entry.getValue();<br>            System.out.println(key + “ = “ + value);<br>        }<br>    }<br>}</p><p>//print<br>cat = c<br>dog = a<br>pig = b<br>从上面的打印结果来看，其是无序的，有序的答案可以在下面找到。<br>接下来我们分析下 Map ，首先我们先看看 Map 家族：</p><p>它的子孙下面有我们常用的 HashMap、LinkedHashMap，也有 TreeMap，另外还有继承 Dictionary、实现 Map 接口的 Hashtable。</p><p>下面针对各个实现类的特点来说明：</p><p>（1）HashMap：它根据键的 hashCode 值存储数据，大多数情况下可以直接定位到它的值，因而具有高效的访问速度，但遍历顺序却是不确定的。HashMap最多只允许一条记录的键为null，允许多条记录的值为null。HashMap 非线程安全，即任一时刻可以有多个线程同时写HashMap，可能会导致数据的不一致。如果需要满足线程安全，可以用 Collections 的静态方法 synchronizedMap 方法使 HashMap 具有线程安全的能力，或者使用 ConcurrentHashMap(分段加锁)。</p><p>（2）LinkedHashMap：LinkedHashMap 是 HashMap 的一个子类，替 HashMap 完成了输入顺序的记录功能，所以要想实现像输出同输入顺序一致，应该使用 LinkedHashMap。</p><p>（3）TreeMap：TreeMap 实现 SortedMap 接口，能够把它保存的记录根据键排序，默认是按键值的升序排序，也可以指定排序的比较器，当用 Iterator 遍历 TreeMap 时，得到的记录是排过序的。如果使用排序的映射，建议使用TreeMap。在使用 TreeMap 时，key 必须实现Comparable 接口或者在构造 TreeMap 传入自定义的 Comparator，否则会在运行时抛出 ClassCastException 类型的异常。</p><p>（4）Hashtable：Hashtable继承 Dictionary 类，实现 Map 接口，很多映射的常用功能与 HashMap 类似，Hashtable 采用”拉链法”实现哈希表，不同的是它来自 Dictionary 类，并且是线程安全的，任一时间只有一个线程能写 Hashtable，但并发性不如 ConcurrentHashMap，因为ConcurrentHashMap 引入了分段锁。Hashtable 使用 synchronized 来保证线程安全，在线程竞争激烈的情况下 HashTable 的效率非常低下。不建议在新代码中使用，不需要线程安全的场合可以用 HashMap 替换，需要线程安全的场合可以用 ConcurrentHashMap 替换。Hashtable 并不是像 ConcurrentHashMap 对数组的每个位置加锁，而是对操作加锁，性能较差。 </p><p>上面讲到了 HashMap、Hashtable、ConcurrentHashMap，接下来先看看 HashMap 的源码实现：</p><p>public class HashMap&lt;K,V&gt; extends AbstractMap&lt;K,V&gt;<br>    implements Map&lt;K,V&gt;, Cloneable, Serializable {</p><pre><code>private static final long serialVersionUID = 362498820763181265L;/**  * 默认大小 16  */  static final int DEFAULT_INITIAL_CAPACITY = 1 &lt;&lt; 4;  /**  * 最大容量是必须是2的幂30  */  static final int MAXIMUM_CAPACITY = 1 &lt;&lt; 30;  /**  * 负载因子默认为0.75，hashmap每次扩容为原hashmap的2倍  */  static final float DEFAULT_LOAD_FACTOR = 0.75f;  /**  * 链表的最大长度为8，当超过8时会将链表装换为红黑树进行存储  */  static final int TREEIFY_THRESHOLD = 8;  /**   * The table, initialized on first use, and resized as   * necessary. When allocated, length is always a power of two.   * (We also tolerate length zero in some operations to allow   * bootstrapping mechanics that are currently not needed.)   */  transient Node&lt;K,V&gt;[] table;  static class Node&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; {    final int hash;    final K key;    V value;    Node&lt;K,V&gt; next;    Node(int hash, K key, V value, Node&lt;K,V&gt; next) {        this.hash = hash;        this.key = key;        this.value = value;        this.next = next;    }    public final K getKey()        { return key; }    public final V getValue()      { return value; }    public final String toString() { return key + &quot;=&quot; + value; }    public final int hashCode() {        return Objects.hashCode(key) ^ Objects.hashCode(value);    }    public final V setValue(V newValue) {        V oldValue = value;        value = newValue;        return oldValue;    }    public final boolean equals(Object o) {        if (o == this)            return true;        if (o instanceof Map.Entry) {            Map.Entry&lt;?,?&gt; e = (Map.Entry&lt;?,?&gt;)o;            if (Objects.equals(key, e.getKey()) &amp;&amp;                Objects.equals(value, e.getValue()))                return true;        }        return false;    }}</code></pre><p>从上面看到，HashMap 主要是数组 + 链表结构组成。HashMap 扩容是成倍的扩容。为什么是成倍，而不是1.5或其他的倍数呢？既然 HashMap 在进行 put 的时候针对 key 做了一些列的 hash 以及与运算就是为了减少碰撞的一个概率，如果扩容后的大小不是2的n次幂的话，之前做的不是白费了吗？</p><p>else if ((newCap = oldCap &lt;&lt; 1) &lt; MAXIMUM_CAPACITY &amp;&amp;<br>                     oldCap &gt;= DEFAULT_INITIAL_CAPACITY)<br>                newThr = oldThr &lt;&lt; 1;<br>扩容后会重新把原来的所有的数据 key 的 hash 重新计算放入扩容后的数组里面去。为什么要这样做？因为不同的数组大小通过 key 的 hash 出来的下标是不一样的。还有，数组长度保持2的次幂，length-1的低位都为1，会使得获得的数组索引 index 更加均匀。</p><p>为何说 Hashmap 是非线程安全的呢？原因：当多线程并发时，检测到总数量超过门限值的时候就会同时调用 resize 操作，各自生成新的数组并rehash 后赋给底层数组，结果最终只有最后一个线程生成的新数组被赋给table 变量，其他线程均会丢失。而且当某些线程已经完成赋值而其他线程刚开始的时候，就会用已经被赋值的 table 作为原始数组，这样也是有问题滴。</p><p>疑问：</p><p> HashMap 中某个 entry 链过长，查询时间达到最大限度，如何处理呢？这个在 Jdk1.8，当链表过长，把链表转成红黑树(TreeNode)实现了更高的时间复杂度的查找。</p><p>HashMap中哈希算法实现？我们使用put(key,value)方法往HashMap中添加元素时，先计算得到key的 Hash 值，然后通过Key高16位与低16位相异或（高16位不变），然后与数组大小-1相与，得到了该元素在数组中的位置，流程：</p><p>延伸：如果一个对象中，重写了equals()而不重写hashcode()会发生什么样的问题？尽管我们在进行 get 和 put 操作的时候，使用的key从逻辑上讲是等值的（通过equals比较是相等的），但由于没有重写hashCode()，所以put操作时，key(hashcode1)–&gt;hash–&gt;indexFor–&gt;index，而通过key取出value的时候 key(hashcode2)–&gt;hash–&gt;indexFor–&gt;index，由于hashcode1不等于hashcode2，导致没有定位到一个数组位置而返回逻辑上错误的值null。所以，在重写equals()的时候，必须注意重写hashCode()，同时还要保证通过equals()判断相等的两个对象，调用hashCode方法要返回同样的整数值。而如果equals判断不相等的两个对象，其hashCode也可以相同的（只不过会发生哈希冲突，应尽量避免）。（1. hash相同，但key不一定相同：key1、key2产生的hash很有可能是相同的，如果key真的相同，就不会存在散列链表了，散列链表是很多不同的键算出的hash值和index相同的 2. key相同，经过两次hash，其hash值一定相同）</p><p>ConcurrentHashMap 采用了分段锁技术来将数据分成一段段的存储，然后给每一段数据配一把锁，当一个线程占用锁访问其中一个段数据的时候，其他段的数据也能被其他线程访问。</p><p>02</p><p>集合 2：List</p><p>集合 List 是接口 Collection 的子接口，也是大家经常用到的数据缓存。List 进行了元素排序，且允许存放相同的元素，即有序，可重复。我们先看看有哪些子类：</p><p>可以看到，其中包括比较多的子类，我们常用的是 ArrayList、LinkedList:</p><p>ArrayList：</p><p>优点：操作读取操作效率高，基于数组实现的，可以为null值，可以允许重复元素，有序，异步。</p><p>缺点：由于它是由动态数组实现的，不适合频繁的对元素的插入和删除操作，因为每次插入和删除都需要移动数组中的元素。</p><p>LinkedList：</p><p>优点：LinkedList由双链表实现，增删由于不需要移动底层数组数据，其底层是链表实现的，只需要修改链表节点指针，对元素的插入和删除效率较高。</p><p>缺点：遍历效率较低。HashMap和双链表也有关系。</p><p>ArrayList 底层是一个变长的数组，基本上等同于Vector，但是ArrayList对writeObjec() 和 readObject()方法实现了同步。</p><p>transient Object[] elementData;</p><p>/**</p><ul><li>Constructs an empty list with an initial capacity of ten.</li><li>/<br>public ArrayList() {<br>  this.elementData = DEFAULTCAPACITY_EMPTY_ELEMENTDATA;<br>}<br>If multiple threads access an <tt>ArrayList</tt> instance<br>concurrently, and at least one of the threads modifies<br>the list structurally, it <i>must</i> be synchronized externally.<br>(A structural modification is any operation that adds or deletes one or more elements, or explicitly resizes the backing array; merely setting the value of an element is not a structural modification.)<br>This is typically accomplished by synchronizing<br>on some object that naturally encapsulates the list.<br>从注释，我们知道 ArrayList 是线程不安全的，多线程环境下要通过外部的同步策略后使用，比如List list = Collections.synchronizedList(new ArrayList(…))。</li></ul><p>源码实现：</p><p>private void writeObject(java.io.ObjectOutputStream s)<br>  throws java.io.IOException{<br>  // Write out element count, and any hidden stuff<br>  int expectedModCount = modCount;<br>  s.defaultWriteObject();</p><p>  // Write out size as capacity for behavioural compatibility with clone()<br>  s.writeInt(size);</p><p>  // Write out all elements in the proper order.<br>  for (int i=0; i&lt;size; i++) {<br>    s.writeObject(elementData[i]);<br>  }</p><p>  if (modCount != expectedModCount) {<br>    throw new ConcurrentModificationException();<br>  }<br>}</p><p>/**</p><ul><li><p>Reconstitute the <tt>ArrayList</tt> instance from a stream (that is,</p></li><li><p>deserialize it).</p></li><li><p>/<br>private void readObject(java.io.ObjectInputStream s)<br>throws java.io.IOException, ClassNotFoundException {<br>elementData = EMPTY_ELEMENTDATA;</p><p>// Read in size, and any hidden stuff<br>s.defaultReadObject();</p><p>// Read in capacity<br>s.readInt(); // ignored</p><p>if (size &gt; 0) {<br>  // be like clone(), allocate array based upon size not capacity<br>  int capacity = calculateCapacity(elementData, size);<br>  SharedSecrets.getJavaOISAccess().checkArray(s, Object[].class, capacity);<br>  ensureCapacityInternal(size);</p><p>  Object[] a = elementData;<br>  // Read in all elements in the proper order.<br>  for (int i=0; i&lt;size; i++) {</p><pre><code>a[i] = s.readObject();</code></pre><p>  }<br>}<br>}<br>当调用add函数时，会调用ensureCapacityInternal函数进行扩容，每次扩容为原来大小的1.5倍，但是当第一次添加元素或者列表中元素个数小于10的话，列表容量默认为10。</p></li></ul><p>/**</p><ul><li>Default initial capacity.</li><li>/<br>private static final int DEFAULT_CAPACITY = 10;</li></ul><p>/**</p><ul><li>Shared empty array instance used for empty instances.</li><li>/<br>private static final Object[] EMPTY_ELEMENTDATA = {};</li></ul><p>/**</p><ul><li>Shared empty array instance used for default sized empty instances.</li><li>/<br>private static final Object[] DEFAULTCAPACITY_EMPTY_ELEMENTDATA = {};</li></ul><p>/**</p><ul><li>The array buffer into which the elements of the ArrayList are stored.</li><li>/<br>transient Object[] elementData; // non-private to simplify nested class access</li></ul><p>/**</p><ul><li>The size of the ArrayList (the number of elements it contains).</li><li>/<br>private int size;<br>扩容原理：根据当前数组的大小，判断是否小于默认值10，如果大于，则需要扩容至当前数组大小的1.5倍，重新将新扩容的数组数据copy只当前elementData，最后将传入的元素赋值给size++位置。</li></ul><p>private void ensureCapacityInternal(int minCapacity) {<br>  ensureExplicitCapacity(calculateCapacity(elementData, minCapacity));<br>}</p><p>private void ensureExplicitCapacity(int minCapacity) {<br>  modCount++;</p><p>  // overflow-conscious code<br>  if (minCapacity - elementData.length &gt; 0)<br>    grow(minCapacity);<br>}</p><p>/**</p><ul><li>The maximum size of array to allocate.</li><li>Some VMs reserve some header words in an array.</li><li>Attempts to allocate larger arrays may result in</li><li>OutOfMemoryError: Requested array size exceeds VM limit</li><li>/<br>private static final int MAX_ARRAY_SIZE = Integer.MAX_VALUE - 8;</li></ul><p>/**</p><ul><li>Increases the capacity to ensure that it can hold at least the</li><li>number of elements specified by the minimum capacity argument.</li><li></li><li>@param minCapacity the desired minimum capacity</li><li>/<br>private void grow(int minCapacity) {<br>// overflow-conscious code<br>int oldCapacity = elementData.length;<br>int newCapacity = oldCapacity + (oldCapacity &gt;&gt; 1);<br>if (newCapacity - minCapacity &lt; 0)<br>  newCapacity = minCapacity;<br>if (newCapacity - MAX_ARRAY_SIZE &gt; 0)<br>  newCapacity = hugeCapacity(minCapacity);<br>// minCapacity is usually close to size, so this is a win:<br>elementData = Arrays.copyOf(elementData, newCapacity);<br>}</li></ul><p>private static int hugeCapacity(int minCapacity) {<br>  if (minCapacity &lt; 0) // overflow<br>    throw new OutOfMemoryError();<br>  return (minCapacity &gt; MAX_ARRAY_SIZE) ?<br>    Integer.MAX_VALUE :<br>    MAX_ARRAY_SIZE;<br>}<br>接下来我们分析为什么 ArrayList 增删很慢，查询很快呢？</p><p>public boolean add(E e) {<br>  ensureCapacityInternal(size + 1);  // Increments modCount!!<br>  elementData[size++] = e;<br>  return true;<br>}<br>根据源码可知，当调用add函数时，首先要调用ensureCapacityInternal(size + 1)，该函数是进行自动扩容的，效率低的原因也就是在这个扩容上了，每次新增都要对现有的数组进行一次1.5倍的扩大，数组间值的copy等，最后等扩容完毕，有空间位置了，将数组size+1的位置放入元素e，实现新增。</p><p>删除时源码：</p><p>/**</p><ul><li><p>Removes the element at the specified position in this list.</p></li><li><p>Shifts any subsequent elements to the left (subtracts one from their</p></li><li><p>indices).</p></li><li></li><li><p>@param index the index of the element to be removed</p></li><li><p>@return the element that was removed from the list</p></li><li><p>@throws IndexOutOfBoundsException {@inheritDoc}</p></li><li><p>/<br>public E remove(int index) {<br>rangeCheck(index);</p><p>modCount++;<br>E oldValue = elementData(index);</p><p>int numMoved = size - index - 1;<br>if (numMoved &gt; 0)<br>  System.arraycopy(elementData, index+1, elementData, index,</p><pre><code>numMoved);</code></pre><p>elementData[–size] = null;</p><p>return oldValue;<br>}<br>在删除index位置的元素时，要先调用 rangeCheck(index) 进行 index 的check，index 要超过当前个数，则判定越界，抛出异常，throw new IndexOutOfBoundsException(outOfBoundsMsg(index))，其他函数也有用到如：get(int index)，set(int index, E element) 等后面删除重点在于计算删除的index是末尾还是中间位置，末尾直接–，然后置空完事，如果是中间位置，那就要进行一个数组间的copy，重新组合数组数据了，这一就比较耗性能了。</p></li></ul><p>而查询：</p><p>/**</p><ul><li><p>Returns the element at the specified position in this list.</p></li><li></li><li><p>@param  index index of the element to return</p></li><li><p>@return the element at the specified position in this list</p></li><li><p>@throws IndexOutOfBoundsException {@inheritDoc}</p></li><li><p>/<br>public E get(int index) {<br>rangeCheck(index);</p><p>return elementData(index);<br>}<br>获取指定index的元素，首先调用rangeCheck(index)进行index的check，通过后直接获取数组的下标index获取数据，没有任何多余操作，高效。</p></li></ul><p>LinkedList 继承AbstractSequentialList和实现List接口，新增接口如下：</p><p>addFirst(E e):将指定元素添加到刘表开头</p><p>addLast(E e):将指定元素添加到列表末尾</p><p>descendingIterator():以逆向顺序返回列表的迭代器</p><p>element():获取但不移除列表的第一个元素</p><p>getFirst():返回列表的第一个元素</p><p>getLast():返回列表的最后一个元素</p><p>offerFirst(E e):在列表开头插入指定元素</p><p>offerLast(E e):在列表尾部插入指定元素</p><p>peekFirst():获取但不移除列表的第一个元素</p><p>peekLast():获取但不移除列表的最后一个元素</p><p>pollFirst():获取并移除列表的最后一个元素</p><p>pollLast():获取并移除列表的最后一个元素</p><p>pop():从列表所表示的堆栈弹出一个元素</p><p>push(E e);将元素推入列表表示的堆栈</p><p>removeFirst():移除并返回列表的第一个元素</p><p>removeLast():移除并返回列表的最后一个元素</p><p>removeFirstOccurrence(E e):从列表中移除第一次出现的指定元素</p><p>removeLastOccurrence(E e):从列表中移除最后一次出现的指定元素<br>LinkedList 的实现原理：LinkedList 的实现是一个双向链表。在 Jdk 1.6中是一个带空头的循环双向链表，而在 Jdk1.7+ 中则变为不带空头的双向链表，这从源码中可以看出：</p><p>//jdk 1.6<br>private transient Entry<E> header = new Entry<E>(null, null, null);<br>private transient int size = 0;</p><p>//jdk 1.7<br>transient int size = 0;</p><p>transient Node<E> first;</p><p>transient Node<E> last;<br>从源码注释看，LinkedList不是线程安全的，多线程环境下要通过外部的同步策略后使用，比如List list = Collections.synchronizedList(new LinkedList(…))：</p><p> If multiple threads access a linked list concurrently,<br> and at least one of the threads modifies the list structurally,<br>  it <i>must</i> be synchronized externally.<br>  (A structural modification is any operation that adds or<br>  deletes one or more elements; merely setting the value of<br>  an element is not a structural modification.)<br>  This is typically accomplished by synchronizing on some object<br>   that naturally encapsulates the list.<br>为什么说 LinkedList 增删很快呢？</p><p>/**</p><ul><li>Appends the specified element to the end of this list.</li><li></li><li><p>This method is equivalent to {@link #addLast}.</li><li></li><li>@param e element to be appended to this list</li><li>@return {@code true} (as specified by {@link Collection#add})</li><li>/<br>public boolean add(E e) {<br>linkLast(e);<br>return true;<br>}<br>/**</li><li>Links e as last element.</li><li>/<br>void linkLast(E e) {<br>final Node<E> l = last;<br>final Node<E> newNode = new Node&lt;&gt;(l, e, null);<br>last = newNode;<br>if (l == null)<br>  first = newNode;<br>else<br>  l.next = newNode;<br>size++;<br>modCount++;<br>}<br>从注释看，add函数实则是将元素append至list的末尾，具体过程是：新建一个Node节点，其中将后面的那个节点last作为新节点的前置节点，后节点为null；将这个新Node节点作为整个list的后节点，如果之前的后节点l为null，将新建的Node作为list的前节点，否则，list的后节点指针指向新建Node，最后size+1，当前llist操作数modCount+1。</li></ul><p>在add一个新元素时，LinkedList 所关心的重要数据，一共两个变量，一个first，一个last，这大大提升了插入时的效率，且默认是追加至末尾，保证了顺序。</p><p>再看删除一个元素：</p><p>/**</p><ul><li>Removes the element at the specified position in this list.  Shifts any</li><li>subsequent elements to the left (subtracts one from their indices).</li><li>Returns the element that was removed from the list.</li><li></li><li>@param index the index of the element to be removed</li><li>@return the element previously at the specified position</li><li>@throws IndexOutOfBoundsException {@inheritDoc}</li><li>/<br>public E remove(int index) {<br>checkElementIndex(index);<br>return unlink(node(index));<br>}</li></ul><p>/**</p><ul><li><p>Unlinks non-null node x.</p></li><li><p>/<br>E unlink(Node<E> x) {<br>// assert x != null;<br>final E element = x.item;<br>final Node<E> next = x.next;<br>final Node<E> prev = x.prev;</p><p>if (prev == null) {<br>  first = next;<br>} else {<br>  prev.next = next;<br>  x.prev = null;<br>}</p><p>if (next == null) {<br>  last = prev;<br>} else {<br>  next.prev = prev;<br>  x.next = null;<br>}</p><p>x.item = null;<br>size–;<br>modCount++;<br>return element;<br>}<br>删除指定index的元素，删除之前要调用checkElementIndex(index)去check一下index是否存在元素，如果不存在抛出throw new IndexOutOfBoundsException(outOfBoundsMsg(index));越界错误，同样这个check方法也是很多方法用到的，如：get(int index)，set(int index, E element)等。</p></li></ul><p>注释讲，删除的是非空的节点，这里的node节点也是通过node(index)获取的，分别根据当前Node得到链表上的关节要素：element、next、prev，分别对 prev 和 next 进行判断，以便对当前 list 的前后节点进行重新赋值，frist和last，最后将节点的element置为null，个数-1，操作数+1。根据以上分析，remove节点关键的变量，是Node实例本身的局部变量 next、prev、item 重新构建内部变量指针指向，以及list的局部变量first和last保证节点相连。这些变量的操作使得其删除动作也很高效。</p><p>而对于查询：</p><p>/**</p><ul><li>Returns the element at the specified position in this list.</li><li></li><li>@param index index of the element to return</li><li>@return the element at the specified position in this list</li><li>@throws IndexOutOfBoundsException {@inheritDoc}</li><li>/<br>public E get(int index) {<br>checkElementIndex(index);<br>return node(index).item;<br>}<br>获取指定index位置的node，获取之前还是调用checkElementIndex(index)进行检查元素，之后通过node(index)获取元素，上文有提到，node的获取是遍历得到的元素，所以相对性能效率会低一些。</li></ul><p>03</p><p>集合 3：Set</p><p>Set 集合在我们日常中，用到的也比较多。用于存储不重复的元素集合，它主要提供下面几种方法：</p><p>将元素添加进Set<E>：add(E e)</p><p>将元素从Set<E>删除：remove(Object e)</p><p>判断是否包含元素：contains(Object e)</p><p>这几种方法返回结果都是 boolean值，即返回是否正确或成功。Set 相当于只存储key、不存储value的Map。我们经常用 Set 用于去除重复元素，因为 重复add同一个 key 时，会返回 false。</p><p>public HashSet() {<br>    map = new HashMap&lt;&gt;();<br>}</p><p>public TreeSet() {<br>    this(new TreeMap&lt;E,Object&gt;());<br>}<br>Set 子孙中主要有：HashSet、SortedSet。HashSet是无序的，因为它实现了Set接口，并没有实现SortedSet接口，而TreeSet 实现了SortedSet接口，从而保证元素是有序的。</p><p>HashSet 添加后输出也是无序的：</p><p>public class Test {<br>    public static void main(String[] args) {<br>        Set<String> set = new HashSet&lt;&gt;();<br>        set.add(“2”);<br>        set.add(“6”);<br>        set.add(“44”);<br>        set.add(“5”);<br>        for (String s : set) {<br>            System.out.println(s);<br>        }<br>    }<br>}</p><p>//print<br>44<br>2<br>5<br>6<br>看到输出的顺序既不是添加的顺序，也不是String排序的顺序，在不同版本的JDK中，这个顺序也可能是不同的。</p><p>换成TreeSet：</p><p>public static void main(String[] args) {<br>  Set<String> set = new TreeSet&lt;&gt;();<br>      set.add(“2”);<br>      set.add(“6”);<br>      set.add(“44”);<br>      set.add(“5”);<br>      for (String s : set) {<br>          System.out.println(s);<br>      }<br> }<br>//print<br>2<br>44<br>5<br>6</p><p>在遍历TreeSet时，输出就是有序的，不是添加时的顺序，而是元素的排序顺序。</p><p>注意：添加的元素必须实现Comparable接口，如果没有实现Comparable接口，那么创建TreeSet时必须传入一个Comparator对象。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>大佬整理的mysql规范，分享给大家</title>
    <link href="http://www.damon8.cn/2020/07/23/mysql-norm/"/>
    <id>http://www.damon8.cn/2020/07/23/mysql-norm/</id>
    <published>2020-07-23T00:21:08.000Z</published>
    <updated>2020-11-04T08:44:46.935Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h5 id="最近涉及数据库相关操作较多，公司现有规范也不是太全面，就根据网上各路大神的相关规范，整理了一些自用的规范用法，万望指正。"><a href="#最近涉及数据库相关操作较多，公司现有规范也不是太全面，就根据网上各路大神的相关规范，整理了一些自用的规范用法，万望指正。" class="headerlink" title="最近涉及数据库相关操作较多，公司现有规范也不是太全面，就根据网上各路大神的相关规范，整理了一些自用的规范用法，万望指正。"></a>最近涉及数据库相关操作较多，公司现有规范也不是太全面，就根据网上各路大神的相关规范，整理了一些自用的规范用法，万望指正。</h5><h3 id="数据库环境"><a href="#数据库环境" class="headerlink" title="数据库环境"></a>数据库环境</h3><h4 id="dev-开发环境"><a href="#dev-开发环境" class="headerlink" title="dev: 开发环境"></a>dev: 开发环境</h4><p>开发可读写，可修改表结构。开发人员可以修改表结构，可以随意修改其中的数据但是需要保证不影响其他开发同事。</p><h4 id="test-测试环境"><a href="#test-测试环境" class="headerlink" title="test: 测试环境"></a>test: 测试环境</h4><p>开发可读写，开发人员可以通过工具修改表结构。</p><h4 id="online-线上环境"><a href="#online-线上环境" class="headerlink" title="online: 线上环境"></a>online: 线上环境</h4><p>开发人员不允许直接在线上环境进行数据库操作，如果需要操作必须找DBA进行操作并进行相应记录，禁止进行压力测试。<br>重点的问题，各个环境的mysql服务器对应的用户权限，一定要做到权限划分明确，有辨识度，能具体区分业务场景等。</p><h3 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h3><h4 id="基本命名规则"><a href="#基本命名规则" class="headerlink" title="基本命名规则"></a>基本命名规则</h4><p>使用有意义的英文词汇，词汇中间以下划线分隔。（不要用拼音）<br>只能使用英文字母，数字，下划线，并以英文字母开头。<br>库、表、字段全部采用小写，不要使用驼峰式命名。<br>避免用ORACLE、MySQL的保留字，如desc，关键字如index。<br>命名禁止超过32个字符，须见名之意，建议使用名词不是动词<br>数据库，数据表一律使用前缀<br>临时库、表名必须以tmp为前缀，并以日期为后缀<br>备份库、表必须以bak为前缀，并以日期为后缀<br>为什么库、表、字段全部采用小写？<br>在 MySQL 中，数据库和表对就于那些目录下的目录和文件。因而，操作系统的敏感性决定数据库和表命名的大小写敏感。<br>Windows下是不区分大小写的。<br>Linux下大小写规则<br>数据库名与表名是严格区分大小写的；<br>表的别名是严格区分大小写的；<br>列名与列的别名在所有的情况下均是忽略大小写的；<br>变量名也是严格区分大小写的；<br>如果已经设置了驼峰式的命名如何解决？需要在MySQL的配置文件my.ini中增加 lower_case_table_names = 1即可。</p><h4 id="表命名"><a href="#表命名" class="headerlink" title="表命名"></a>表命名</h4><p>同一个模块的表尽可能使用相同的前缀，表名称尽可能表达含义。所有日志表均以 log_ 开头</p><h4 id="字段命名"><a href="#字段命名" class="headerlink" title="字段命名"></a>字段命名</h4><p>表达其实际含义的英文单词或简写。布尔意义的字段以is_作为前缀，后接动词过去分词。<br>各表之间相同意义的字段应同名。各表之间相同意义的字段，以去掉模块前缀的表名_字段名命名。<br>外键字段用表名_字段名表示其关联关系。<br>表的主键一般都约定成为id，自增类型，是别的表的外键均使用xxx_id的方式来表明。</p><h4 id="索引命名"><a href="#索引命名" class="headerlink" title="索引命名"></a>索引命名</h4><p>非唯一索引必须按照“idx_字段名称_字段名称[_字段名]”进行命名<br>唯一索引必须按照“uniq_字段名称_字段名称[_字段名]”进行命名</p><h4 id="约束命名"><a href="#约束命名" class="headerlink" title="约束命名"></a>约束命名</h4><p>主键约束：pk_表名称。<br>唯一约束：uk_表名称_字段名。（应用中需要同时有唯一性检查逻辑。）</p><h4 id="表设计规范"><a href="#表设计规范" class="headerlink" title="表设计规范"></a>表设计规范</h4><p>表引擎取决于实际应用场景；日志及报表类表建议用myisam，与交易，审核，金额相关的表建议用innodb引擎。如无说明，建表时一律采用innodb引擎<br>默认使用utf8mb4字符集，数据库排序规则使用utf8mb4_general_ci，（由于数据库定义使用了默认，数据表可以不再定义，但为保险起见，建议都写上<br>为什么字符集不选择utf8，排序规则不使用utf8_general_ci<br>采用utf8编码的MySQL无法保存占位是4个字节的Emoji表情。为了使后端的项目，全面支持客户端输入的Emoji表情，升级编码为utf8mb4是最佳解决方案。对于JDBC连接串设置了characterEncoding为utf8或者做了上述配置仍旧无法正常插入emoji数据的情况，需要在代码中指定连接的字符集为utf8mb4。<br>所有表、字段均应用 comment 列属性来描述此表、字段所代表的真正含义，如枚举值则建议将该字段中使用的内容都定义出来。<br>如无说明，表中的第一个id字段一定是主键且为自动增长，禁止在非事务内作为上下文作为条件进行数据传递。禁止使用varchar类型作为主键语句设计。<br>如无说明，表必须包含create_time和modify_time字段，即表必须包含记录创建时间和修改时间的字段<br>如无说明，表必须包含is_del，用来标示数据是否被删除，原则上数据库数据不允许物理删除。<br>用尽量少的存储空间来存数一个字段的数据<br>能用int的就不用char或者varchar<br>能用tinyint的就不用int<br>使用UNSIGNED存储非负数值。<br>不建议使用ENUM、SET类型，使用TINYINT来代替<br>使用短数据类型，比如取值范围为0-80时，使用TINYINT UNSIGNED<br>存储精确浮点数必须使用DECIMAL替代FLOAT和DOUBLE<br>时间字段，除特殊情况一律采用int来记录unix_timestamp<br>存储年使用YEAR类型。<br>存储日期使用DATE类型。<br>存储时间（精确到秒）建议使用TIMESTAMP类型，因为TIMESTAMP使用4字节，DATETIME使用8个字节。<br>建议使用INT UNSIGNED存储IPV4。<br>尽可能不使用TEXT、BLOB类型<br>禁止在数据库中使用VARBINARY、BLOB存储图片、文件等。建议使用其他方式存储（TFS/SFS），MySQL只保存指针信息。<br>单条记录大小禁止超过8k（列长度(中文)_3(UTF8)+列长度(英文)_1）</p><h5 id="datetime与timestamp有什么不同？"><a href="#datetime与timestamp有什么不同？" class="headerlink" title="datetime与timestamp有什么不同？"></a>datetime与timestamp有什么不同？</h5><p>相同点：<br>TIMESTAMP列的显示格式与DATETIME列相同。显示宽度固定在19字符，并且格式为YYYY-MM-DD HH:MM:SS。</p><p>不同点：<br>TIMESTAMP<br>4个字节储存，时间范围：1970-01-01 08:00:01 ~ 2038-01-19 11:14:07 值以UTC格式保存，涉及时区转化 ，存储时对当前的时区进行转换，检索时再转换回当前的时区。<br>datetime 8个字节储存，时间范围：1000-01-01 00:00:00 ~ 9999-12-31 23:59:59<br>实际格式储存，与时区无关</p><p>如何使用TIMESTAMP的自动赋值属性？<br>将当前时间作为ts的默认值：ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP。当行更新时，更新ts的值：ts TIMESTAMP DEFAULT 0 ON UPDATE CURRENT_TIMESTAMP。<br>可以将1和2结合起来：ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP。<br>如何使用INT UNSIGNED存储ip？<br>使用INT UNSIGNED而不是char(15)来存储ipv4地址，通过MySQL函数inet_ntoa和inet_aton来进行转化。Ipv6地址目前没有转化函数，需要使用DECIMAL或者两个bigINT来存储。<br>如无备注，所有字段都设置NOT NULL，并设置默认值；<br>禁止在数据库中存储明文密码<br>如无备注，所有的布尔值字段，如is_hot、is_deleted，都必须设置一个默认值，并设为0；<br>如无备注，排序字段order_id在程序中默认使用降序排列；<br>整形定义中不添加长度，比如使用INT，而不是INT[4]<br>INT[M]，M值代表什么含义？<br>注意数值类型括号后面的数字只是表示宽度而跟存储范围没有关系。很多人他们认为INT(4)和INT(10)其取值范围分别是 (-9999到9999)和(-9999999999到9999999999)，这种理解是错误的。其实对整型中的 M值与 ZEROFILL 属性结合使用时可以实现列值等宽。不管INT[M]中M值是多少，其取值范围还是 (-2147483648到2147483647 有符号时)，(0到4294967295无符号时)。<br>显示宽度并不限制可以在列内保存的值的范围，也不限制超过列的指定宽度的值的显示。当结合可选扩展属性ZEROFILL使用时默认补充的空格用零代替。例如：对于声明为INT(5) ZEROFILL的列，值4检索为00004。请注意如果在整数列保存超过显示宽度的一个值，当MySQL为复杂联接生成临时表时会遇到问题，因为在这些情况下MySQL相信数据适合原列宽度，如果为一个数值列指定ZEROFILL, MySQL自动为该列添加UNSIGNED属性。<br>使用VARBINARY存储大小写敏感的变长字符串<br>什么时候用CHAR，什么时候用VARCHAR？<br>CHAR和VARCHAR类型类似，但它们保存和检索的方式不同。它们的最大长度和是否尾部空格被保留等方面也不同。CHAR和VARCHAR类型声明的长度表示你想要保存的最大字符数。例如，CHAR(30)可以占用30个字符。<br>CHAR列的长度固定为创建表时声明的长度。长度可以为从0到255的任何值。当保存CHAR值时，在它们的右边填充空格以达到指定的长度。当检索到CHAR值时，尾部的空格被删除掉。在存储或检索过程中不进行大小写转换。<br>VARCHAR列中的值为可变长字符串。长度可以指定为0到65,535之间的值。(VARCHAR的最大有效长度由最大行大小和使用的字符集确定。整体最大长度是65,532字节）。同CHAR对比，VARCHAR值保存时只保存需要的字符数，另加一个字节来记录长度(如果列声明的长度超过255，则使用两个字节)。VARCHAR值保存时不进行填充。当值保存和检索时尾部的空格仍保留，符合标准SQL。<br>char适合存储用户密码的MD5哈希值，它的长度总是一样的。对于经常改变的值，char也好于varchar,因为固定长度的行不容易产生碎片，对于很短的列，char的效率也高于varchar。char(1)字符串对于单字节字符集只会占用一个字节，但是varchar(1)则会占用2个字节，因为1个字节用来存储长度信息。</p><h4 id="索引设计规范"><a href="#索引设计规范" class="headerlink" title="索引设计规范"></a>索引设计规范</h4><p>MySQL的查询速度依赖良好的索引设计，因此索引对于高性能至关重要。合理的索引会加快查询速度（包括UPDATE和DELETE的速度，MySQL会将包含该行的page加载到内存中，然后进行UPDATE或者DELETE操作），不合理的索引会降低速度。MySQL索引查找类似于新华字典的拼音和部首查找，当拼音和部首索引不存在时，只能通过一页一页的翻页来查找。当MySQL查询不能使用索引时，MySQL会进行全表扫描，会消耗大量的IO。索引的用途：去重、加速定位、避免排序、覆盖索引。</p><h4 id="什么是覆盖索引"><a href="#什么是覆盖索引" class="headerlink" title="什么是覆盖索引"></a>什么是覆盖索引</h4><p>InnoDB存储引擎中，secondary index（非主键索引）中没有直接存储行地址，存储主键值。如果用户需要查询secondary index中所不包含的数据列时，需要先通过secondary index查找到主键值，然后再通过主键查询到其他数据列，因此需要查询两次。覆盖索引的概念就是查询可以通过在一个索引中完成，覆盖索引效率会比较高，主键查询是天然的覆盖索引。合理的创建索引以及合理的使用查询语句，当使用到覆盖索引时可以获得性能提升。比如SELECT email,uid FROM user_email WHERE uid=xx，如果uid不是主键，适当时候可以将索引添加为index(uid,email)，以获得性能提升。</p><h4 id="索引的基本规范"><a href="#索引的基本规范" class="headerlink" title="索引的基本规范"></a>索引的基本规范</h4><p>索引数量控制，单张表中索引数量不超过5个，单个索引中的字段数不超过5个。<br>综合评估数据密度和分布</p><h4 id="考虑查询和更新比例"><a href="#考虑查询和更新比例" class="headerlink" title="考虑查询和更新比例"></a>考虑查询和更新比例</h4><p>为什么一张表中不能存在过多的索引？<br>InnoDB的secondary index使用b+tree来存储，因此在UPDATE、DELETE、INSERT的时候需要对b+tree进行调整，过多的索引会减慢更新的速度。<br>对字符串使用前缀索引，前缀索引长度不超过8个字符，建议优先考虑前缀索引，必要时可添加伪列并建立索引。<br>不要索引blob/text等字段,不要索引大型字段,这样做会让索引占用太多的存储空间</p><h4 id="什么是前缀索引？"><a href="#什么是前缀索引？" class="headerlink" title="什么是前缀索引？"></a>什么是前缀索引？</h4><p>前缀索引说白了就是对文本的前几个字符（具体是几个字符在建立索引时指定）建立索引，这样建立起来的索引更小，所以查询更快。前缀索引能有效减小索引文件的大小，提高索引的速度。但是前缀索引也有它的坏处：MySQL 不能在 ORDER BY 或 GROUP BY 中使用前缀索引，也不能把它们用作覆盖索引(Covering Index)。<br>建立前缀索引的语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name ADD KEY(column_name(prefix_length));</span><br></pre></td></tr></table></figure><h4 id="主键准则"><a href="#主键准则" class="headerlink" title="主键准则"></a>主键准则</h4><p>表必须有主键<br>不使用更新频繁的列<br>尽量不选择字符串列<br>不使用UUID MD5 HASH<br>默认使用非空的唯一键<br>建议选择自增或发号器<br>重要的SQL必须被索引，核心SQL优先考虑覆盖索索引<br>UPDATE、DELETE语句的WHERE条件列<br>ORDER BY、GROUP BY、DISTINCT的字段<br>多表JOIN的字段<br>区分度最大的字段放在前面<br>选择筛选性更优的字段放在最前面，比如单号、userid等，type，status等筛选性一般不建议放在最前面<br>索引根据左前缀原则，当建立一个联合索引(a,b,c)，则查询条件里面只有包含(a)或(a,b)或(a,b,c)的时候才能走索引,(a,c)作为条件的时候只能使用到a列索引,所以这个时候要确定a的返回列一定不能太多，不然语句设计就不合理,(b,c)则不能走索引<br>合理创建联合索引（避免冗余），(a,b,c) 相当于 (a) 、(a,b) 、(a,b,c)</p><h4 id="索引禁忌"><a href="#索引禁忌" class="headerlink" title="索引禁忌"></a>索引禁忌</h4><p>不在低基数列上建立索引，例如“性别”<br>不在索引列进行数学运算和函数运算<br>不要索引常用的小型表<br>尽量不使用外键<br>外键用来保护参照完整性，可在业务端实现<br>对父表和子表的操作会相互影响，降低可用性<br>INNODB本身对online DDL的限制<br>MYSQL 中索引的限制<br>MYISAM 存储引擎索引长度的总和不能超过 1000 字节<br>BLOB 和 TEXT 类型的列只能创建前缀索引<br>MYSQL 目前不支持函数索引<br>使用不等于 (!= 或者 &lt;&gt;) 的时候, MYSQL 无法使用索引。<br>过滤字段使用函数运算 (如 abs (column)) 后, MYSQL无法使用索引。<br>join语句中join条件字段类型不一致的时候MYSQL无法使用索引<br>使用 LIKE 操作的时候如果条件以通配符开始 (如 ‘%abc…’)时, MYSQL无法使用索引。<br>使用非等值查询的时候, MYSQL 无法使用 Hash 索引。</p><h4 id="语句设计规范"><a href="#语句设计规范" class="headerlink" title="语句设计规范"></a>语句设计规范</h4><p>使用预编译语句<br>只传参数，比传递SQL语句更高效<br>一次解析，多次使用<br>降低SQL注入概率<br>避免隐式转换<br>会导致索引失效<br>充分利用前缀索引<br>必须是最左前缀<br>不可能同时用到两个范围条件<br>不使用%前导的查询，如like “%ab”<br>不使用负向查询，如not in/like<br>无法使用索引，导致全表扫描<br>全表扫描导致buffer pool利用率降低<br>避免使用存储过程、触发器、UDF、events等<br>让数据库做最擅长的事<br>降低业务耦合度，为sacle out、sharding留有余地<br>避开BUG<br>避免使用大表的JOIN<br>MySQL最擅长的是单表的主键/二级索引查询<br>JOIN消耗较多内存，产生临时表<br>避免在数据库中进行数学运算<br>MySQL不擅长数学运算和逻辑判断<br>无法使用索引<br>减少与数据库的交互次数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INSERT … ON DUPLICATE KEY UPDATE</span><br><span class="line">REPLACE INTO、INSERT IGNORE 、INSERT INTO VALUES(),(),()</span><br><span class="line">UPDATE … WHERE ID IN(10,20,50,…)</span><br></pre></td></tr></table></figure><h4 id="合理的使用分页"><a href="#合理的使用分页" class="headerlink" title="合理的使用分页"></a>合理的使用分页</h4><p>限制分页展示的页数 只能点击上一页、下一页 采用延迟关联</p><h4 id="如何正确的使用分页？"><a href="#如何正确的使用分页？" class="headerlink" title="如何正确的使用分页？"></a>如何正确的使用分页？</h4><p>假如有类似下面分页语句：SELECT * FROM table ORDER BY id LIMIT 10000, 10 由于MySQL里对LIMIT OFFSET的处理方式是取出OFFSET+LIMIT的所有数据，然后去掉OFFSET，返回底部的LIMIT。所以，在OFFSET数值较大时，MySQL的查询性能会非常低。可以使用id &gt; n 的方式进行解决：<br>使用id &gt; n 的方式有局限性，对于id不连续的问题，可以通过翻页的时候同时传入最后一个id方式来解决。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;example.com&#x2F;page.php?last&#x3D;100</span><br><span class="line">select * from table where id&lt;100 order by id desc limit 10</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;上一页</span><br><span class="line">http:&#x2F;&#x2F;example.com&#x2F;page.php?first&#x3D;110</span><br><span class="line">select * from table where id&gt;110 order by id desc limit 10</span><br></pre></td></tr></table></figure><p>这种方式比较大的缺点是，如果在浏览中有插入/删除操作，翻页不会更新，而总页数可能仍然是根据新的count(*) 来计算，最终可能会产生某些记录访问不到。为了修补这个问题，可以继续引入当前页码以及在上次翻页以后是否有插入/删除等影响总记录数的操作并进行缓存。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from table where id &gt;&#x3D; (select id from table order by id limit #offset#, 1)</span><br></pre></td></tr></table></figure><p>拒绝大SQL，拆分成小SQL<br>充分利用QUERY CACHE<br>充分利用多核CPU<br>使用in代替or，in的值不超过1000个<br>禁止使用order by rand()<br>使用EXPLAIN诊断，避免生成临时表</p><p>EXPLAIN语句（在MySQL客户端中执行）可以获得MySQL如何执行SELECT语句的信息。通过对SELECT语句执行EXPLAIN，可以知晓MySQL执行该SELECT语句时是否使用了索引、全表扫描、临时表、排序等信息。尽量避免MySQL进行全表扫描、使用临时表、排序等。详见官方文档。<br>用union all而不是union<br>union all与 union有什么区别？<br>union和union all关键字都是将两个结果集合并为一个，但这两者从使用和效率上来说都有所不同。<br>union在进行表链接后会筛选掉重复的记录，所以在表链接后会对所产生的结果集进行排序运算，删除重复的记录再返回结果。如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from test_union1</span><br><span class="line">union select * from test_union2</span><br></pre></td></tr></table></figure><p>这个SQL在运行时先取出两个表的结果，再用排序空间进行排序删除重复的记录，最后返回结果集，如果表数据量大的话可能会导致用磁盘进行排序。<br>而union all只是简单的将两个结果合并后就返回。这样，如果返回的两个结果集中有重复的数据，那么返回的结果集就会包含重复的数据了。<br>从效率上说，union all要比union快很多，所以，如果可以确认合并的两个结果集中不包含重复的数据的话，那么就使用union all，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test_union1 union all select * from test_union2</span><br></pre></td></tr></table></figure><p>程序应有捕获SQL异常的处理机制<br>禁止单条SQL语句同时更新多个表<br>不使用select * ，SELECT语句只获取需要的字段<br>消耗CPU和IO、消耗网络带宽<br>无法使用覆盖索引<br>减少表结构变更带来的影响<br>因为大，select/join 可能生成临时表<br>UPDATE、DELETE语句不使用LIMIT<br>INSERT语句必须显式的指明字段名称，不使用INSERT INTO table()<br>INSERT语句使用batch提交（INSERT INTO table VALUES(),(),()……），values的个数不超过500<br>统计表中记录数时使用COUNT(*)，而不是COUNT(primary_key)和COUNT(1) 备注：仅针对Myisam<br>数据更新建议使用二级索引先查询出主键，再根据主键进行数据更新<br>禁止使用跨库查询<br>禁止使用子查询，建议将子查询转换成关联查询<br>针对varchar类型字段的程序处理，请验证用户输入，不要超出其预设的长度；</p><h4 id="分表规范"><a href="#分表规范" class="headerlink" title="分表规范"></a>分表规范</h4><p>单表一到两年内数据量超过500w或数据容量超过10G考虑分表，需提前考虑历史数据迁移或应用自行删除历史数据，采用等量均衡分表或根据业务规则分表均可。要分表的数据表必须与DBA商量分表策略<br>用HASH进行散表，表名后缀使用十进制数，下标从0开始<br>按日期时间分表需符合YYYY[MM][dd][HH]格式<br>采用合适的分库分表策略。例如千库十表、十库百表等<br>禁止使用分区表，分区表对分区键有严格要，分区表在表变大后执行DDL、SHARDING、单表恢复等都变得更加困难。<br>拆分大字段和访问频率低的字段，分离冷热数据</p><h4 id="行为规范"><a href="#行为规范" class="headerlink" title="行为规范"></a>行为规范</h4><p>批量导入、导出数据必须提前通知DBA协助观察<br>禁止在线上从库执行后台管理和统计类查询<br>禁止有super权限的应用程序账号存在<br>产品出现非数据库导致的故障时及时通知DBA协助排查<br>推广活动或上线新功能必须提前通知DBA进行流量评估<br>数据库数据丢失，及时联系DBA进行恢复<br>对单表的多次alter操作必须合并为一次操作<br>不在MySQL数据库中存放业务逻辑<br>重大项目的数据库方案选型和设计必须提前通知DBA参与<br>对特别重要的库表，提前与DBA沟通确定维护和备份优先级<br>不在业务高峰期批量更新、查询数据库其他规范<br>提交线上建表改表需求，必须详细注明所有相关SQL语句</p><h4 id="其他规范"><a href="#其他规范" class="headerlink" title="其他规范"></a>其他规范</h4><p>日志类数据不建议存储在MySQL上，优先考虑Hbase或OceanBase，如需要存储请找DBA评估使用压缩表存储。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><br><code style="font-size: 20px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: red">特别声明 <br>原文作者：白程序员的自习室 <br>本文原链：https://www.studytime.xin/article/mysql-internal-specifications.html <br>本文转载如有侵权，请联系站长删除，谢谢 <br></code><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>极客时间 | 买课奖励 | 返现 | 学习资料 | 学习路径 | 白嫖</title>
    <link href="http://www.damon8.cn/2020/07/22/popularize-01/"/>
    <id>http://www.damon8.cn/2020/07/22/popularize-01/</id>
    <published>2020-07-22T00:03:01.000Z</published>
    <updated>2020-11-04T08:45:18.232Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="极客时间-买课奖励-返现-学习资料-学习路径-白嫖"><a href="#极客时间-买课奖励-返现-学习资料-学习路径-白嫖" class="headerlink" title="极客时间 | 买课奖励 | 返现 | 学习资料 | 学习路径 | 白嫖 |"></a>极客时间 | 买课奖励 | 返现 | 学习资料 | 学习路径 | 白嫖 |</h2><p>最近几年，知识付费越来越火爆，花几十块钱订阅一个专栏，跟着讲师的课程安排一节节学习，学习结束后，就可以对一项技术或者一系列知识点有很好的掌握，渐渐地，越来越多的人接受了这种学习模式。相应的，知识付费平台也像雨后春笋般成长了起来。目前做的比较大的像知乎、得到、喜马拉雅 FM 等，平台上每门课程的订阅人数少则几千，多则几万，甚至几十万，像得到的课程《薛兆丰的经济学课》累计订阅人数已经超过 40 万。所以未来一段时间内，知识付费仍将是一种很受欢迎的学习模式。</p><p><img src="https://i.loli.net/2020/07/24/wA5HsmOKgvkhJa3.png" alt="极客时间11.png"></p><p>极客时间是极客邦科技（InfoQ）出品的一个知识付费平台，他们的 slogan 是“提升你的技术认知”，相应地，他们的课程也大多数都是面向技术方向。现在平台上总共有七十多门课程，每个月也会有五、六门新课上线，合作讲师都是各个领域的专家和高级工程师，有着丰富的实践经验，同时，他们的课程价格平均只有几十块，特别实惠。</p><p>而<strong>【秃头和尚】</strong>是知识付费领域的导学导购平台，在平台上面，提供了极客时间所有课程的入口，通过我的平台前去极客时间购买课程，在课程购买成功后，极课助手会向你进行返现，返现额度普遍超过 30%，有些超过 40%，最高可返 36 元。而在新课上线时，极客时间会进行限时优惠活动，价格本身就已经远远低于原价，再加上和尚的返现，最终购买课程的花费<strong>基本低于课程原价的 50%</strong>，所以特别划算。如果你想提升自己，学习更多技能，同时享受低价优惠，可以关注<strong>【秃头和尚】</strong>公众号了解更多信息。愿你我一起努力，变成更好的我们。</p><p><img src="https://i.loli.net/2020/07/24/WV3Bwp5oQ2nzIOa.jpg" alt="纯公众号二维码.jpg"></p><p>通过我的链接买极客时间课程，极客时间官方会给我一些返现，有 <strong>¥36、¥24、¥18</strong>等等，当然我会把这些返现给你们，不从中间赚取一分钱，只为回报支持我的粉丝！</p><p>同样道理你购买我分享的课程后，您分享后也可以得到 <strong>¥36、¥24、¥18</strong>等等对应返现!</p><p>课程目录如下：</p><p><a href="https://time.geekbang.org/column/intro/100001901?code=754exfYZfTSnzDBQNUU2f97tPqgY-BuxDXoMjGOGkTo%3D" target="_blank" rel="noopener">技术与商业案例解读</a><br><a href="https://time.geekbang.org/column/intro/100002101?code=V3GOEGn%2FDvLncP-K-1A5X%2FD38yhDnQQ9xavXemh2gek%3D" target="_blank" rel="noopener">AI技术内参</a><br><a href="https://time.geekbang.org/column/intro/100002201?code=5n21Qv1tCln5gaYDl%2FGr2BSTmXUq5JOIRHZHdEGhRFs%3D" target="_blank" rel="noopener">左耳听风</a><br><a href="https://time.geekbang.org/column/intro/100002401?code=KIrKXTpeoIeNiJvxrJCMzwCYBbYQ3jbe9K2RLpD8I3E%3D" target="_blank" rel="noopener">朱赟的技术管理课</a><br><a href="https://time.geekbang.org/column/intro/100002601?code=R0mMIb5yFUiwgLjGQbs8utZu9CqG-ac371nxTFLfZW0%3D" target="_blank" rel="noopener">邱岳的产品手记</a><br><a href="https://time.geekbang.org/column/intro/100003101?code=D8HGvfXjnWlgMfxviffDuiCnKc4-lXOn7i9McrU9FMM%3D" target="_blank" rel="noopener">人工智能基础课</a><br><a href="https://time.geekbang.org/column/intro/100003401?code=v3yvFBky-HrrEYMpPguHEiGdwuDDjWctzAcAUcnm-Wg%3D" target="_blank" rel="noopener">赵成的运维体系管理课</a><br><a href="https://time.geekbang.org/column/intro/100005101?code=5RwVnYPxG1r67mYGtpWpSoANLuF1PQW6Azn%2FajHislE%3D" target="_blank" rel="noopener">推荐系统三十六式</a><br><a href="https://time.geekbang.org/column/intro/100005701?code=crZw-BzJhZp%2Fd9r37SjtiijM8%2FE--nA4oEZV2Rg-Ulg%3D" target="_blank" rel="noopener">深入浅出区块链</a><br><a href="https://time.geekbang.org/column/intro/100006201?code=HD7822Se3rvo8voHz0VWuB2j-RSrMCA0-D4HZSbTcBg%3D" target="_blank" rel="noopener">技术领导力实战笔记</a><br><a href="https://time.geekbang.org/column/intro/100006501?code=5nbNR2WnbF5TKQ3AN1un-Kr5zOOhzYsKa0Wfh7Bj6bY%3D" target="_blank" rel="noopener">硅谷产品实战36讲</a><br><a href="https://time.geekbang.org/column/intro/100006601?code=0v1jJB-yiVhYc40TA4H97lZOJt%2F9rjfjpQbBiC%2FhWrU%3D" target="_blank" rel="noopener">从0开始学架构</a><br><a href="https://time.geekbang.org/column/intro/100006701?code=GC-07rQpcTLmJ0t8pnIuJ6ueKXPJUq3lnkn0mP4U4e4%3D" target="_blank" rel="noopener">Java核心技术面试精讲</a><br><a href="https://time.geekbang.org/course/intro/100007001?code=N4H70y67dp8ngJd9Qq95Ip%2F0-CULWa%2FR5CHcEET-3JA%3D" target="_blank" rel="noopener">微服务架构实战160讲</a><br><a href="https://time.geekbang.org/column/intro/100007101?code=ygZg-eME2eynlWTtsje807ePHFM6hLKq72g0ozgYAi4%3D" target="_blank" rel="noopener">趣谈网络协议</a><br><a href="https://time.geekbang.org/column/intro/100007201?code=jbqlFYX3K5QQmTwzMJ2ZOJr9dqXfcZ2oAeOL3pBSTJY%3D" target="_blank" rel="noopener">从0开始学游戏开发</a><br><a href="https://time.geekbang.org/column/intro/100008701?code=jPv9LlXM3%2F2tHcC0LD0jmAiX1UrInmGjmIu0z2wXy3E%3D" target="_blank" rel="noopener">机器学习40讲</a><br><a href="https://time.geekbang.org/course/intro/100008801?code=uRrKk8YAFtRCY9v0ssbCPD6oxnMsPJYdKyiHDZVY3qU%3D" target="_blank" rel="noopener">零基础学Python</a><br><a href="https://time.geekbang.org/course/intro/100009301?code=AEzp7axzoOGp72YVWEb1zHaW4oRzpF7E%2FsSktaXdm00%3D" target="_blank" rel="noopener">React实战进阶45讲</a><br><a href="https://time.geekbang.org/column/intro/100009601?code=mWf0sSl2GEdTR9sdn-MkHz2eodUSBs7RgVUmaPrz27g%3D" target="_blank" rel="noopener">软件测试52讲</a><br><a href="https://time.geekbang.org/column/intro/100009701?code=9JKqJX21pKP4pYQIP1gXymcHcFuXiywp1fpOp3V92Uc%3D" target="_blank" rel="noopener">持续交付36讲</a><br><a href="https://time.geekbang.org/course/intro/100009801?code=zax5ddh1YPHpyTLHZc6ENX0zwUeIXCLgkor0KfbVUyc%3D" target="_blank" rel="noopener">快速上手Kotlin开发</a><br><a href="https://time.geekbang.org/column/intro/100010301?code=SIX6LeTZubl2lqoPozl5IUxqZBx7v7SjgEYUz08paXs%3D" target="_blank" rel="noopener">深入拆解Java虚拟机</a><br><a href="https://time.geekbang.org/column/intro/100012001?code=ilcP6tMFvOqnWctSN-wyj9kNsMiiTuVIKuZd%2F3ox3Ps%3D" target="_blank" rel="noopener">邱岳的产品实战</a><br><a href="https://time.geekbang.org/column/intro/100012101?code=BiZMNf4K1vjoQNJhHCJHYESuGen8Zd-OfoCY1YIlxQA%3D" target="_blank" rel="noopener">程序员进阶攻略</a><br><a href="https://time.geekbang.org/column/intro/100013101?code=83890rA7K6elWAnc1HfJEAfJ7DP9haknQ-Vh1M%2Fl6u4%3D" target="_blank" rel="noopener">Go语言核心36讲</a><br><a href="https://time.geekbang.org/column/intro/100014301?code=dn8f%2F5GZMnUKDRijFCD%2FqtETytuiUsPo1vHBA-nUWvs%3D" target="_blank" rel="noopener">技术管理实战36讲</a><br><a href="https://time.geekbang.org/column/intro/100014401?code=rtDbCNUHNesmHip1jp6I%2F2ctfMRuqnoopvR-iMsk4FU%3D" target="_blank" rel="noopener">从0开始学微服务</a><br><a href="https://time.geekbang.org/column/intro/100015201?code=AKCoFaNESxnoqZ9zViYi7xp6Yyh1EoBRcl6NORPgupA%3D" target="_blank" rel="noopener">深入剖析Kubernetes</a><br><a href="https://time.geekbang.org/column/intro/100017301?code=%2FYboW1fk0rnejZc7gC9dJRDFLfU5v9csgop16MpQ7m8%3D" target="_blank" rel="noopener">数据结构与算法之美</a><br><a href="https://time.geekbang.org/column/intro/100019601?code=b2N873fxtpfPuzQi4sxGhSkhDhYmfDRNCboMatBN9ds%3D" target="_blank" rel="noopener">代码精进之路</a><br><a href="https://time.geekbang.org/course/intro/100019701?code=nHQ5--RLmBY9Qbleh2Wx83QT%2F7aBTI8A2cZOuuVlxlU%3D" target="_blank" rel="noopener">算法面试通关40讲</a><br><a href="https://time.geekbang.org/column/intro/100020001?code=IJjIHHmZBI--XH%2F9LtcuRc1NaxtrgYxI6I3%2FUpGLNpg%3D" target="_blank" rel="noopener">白话法律42讲</a><br><a href="https://time.geekbang.org/column/intro/100020201?code=XixgCs-s6XgAl5CFjaQDmPspCnB%2F7oLGgBcFQQrDz%2F8%3D" target="_blank" rel="noopener">从0开始学大数据</a><br><a href="https://time.geekbang.org/course/intro/100020301?code=H%2FtZ8W4tEPB7fjBLENLeDcZlTZ-jgcZhsJNU4d7mL9k%3D" target="_blank" rel="noopener">Nginx核心知识100讲</a><br><a href="https://time.geekbang.org/column/intro/100020801?code=Clykal6W3VoowO1L80aYiil2nhhCDn8CjPRUTLdfvG8%3D" target="_blank" rel="noopener">MySQL实战45讲</a><br><a href="https://time.geekbang.org/column/intro/100020901?code=DA26sjQwIrWLCd8fL3FRJsCHg0NuRDxtO0yHZCIW3xM%3D" target="_blank" rel="noopener">Linux性能优化实战</a><br><a href="https://time.geekbang.org/column/intro/100021101?code=ywEau2UR3AzSoHpEJiakyAEt6JfYXUq7rpMuWcjz0v4%3D" target="_blank" rel="noopener">Android开发高手课</a><br><a href="https://time.geekbang.org/column/intro/100021201?code=7%2F3g%2FgfK-UgBBd8-yCeUE3SkObv99X8s%2FbJ5QVV6dt4%3D" target="_blank" rel="noopener">程序员的数学基础课</a><br><a href="https://time.geekbang.org/course/intro/100021601?code=4yu0o%2FlkLy5ViVj%2FtNDKh2y69-xHZ0xqvayCbcpHcwQ%3D" target="_blank" rel="noopener">玩转Git三剑客</a><br><a href="https://time.geekbang.org/column/intro/100021701?code=nmYCwkvVnDbj%2F0Ad%2FoPWKrp3eK%2FrD1eXZ5GpRoM9WEE%3D" target="_blank" rel="noopener">数据分析实战45讲</a><br><a href="https://time.geekbang.org/column/intro/100022301?code=Y-lrH3bgOnn%2F12pjVWkxw7-IEdZBBBJehWMldCcejYM%3D" target="_blank" rel="noopener">10x程序员工作法</a><br><a href="https://time.geekbang.org/course/intro/100023001?code=sqntP-jHHFRw%2FJUw32rQp6I1%2FSDAv-BQfVDEkJHdtdM%3D" target="_blank" rel="noopener">TensorFlow快速入门与实战</a><br><a href="https://time.geekbang.org/column/intro/100023201?code=LESTzYG6fPBysZWRdZVnFQ7%2FyKAJYdE99P6lYiRkGuA%3D" target="_blank" rel="noopener">重学前端</a><br><a href="https://time.geekbang.org/column/intro/100023401?code=9Ycs9x5XT2nqWkTAJmbt0EBHtMM-IYOLnrJ3AJ28A7I%3D" target="_blank" rel="noopener">面试现场</a><br><a href="https://time.geekbang.org/course/intro/100023501?code=q0oeN3IZ4hDfooC8patZ0z9yL7BWr7cL6M7xnTJjEok%3D" target="_blank" rel="noopener">玩转Spring全家桶</a><br><a href="https://time.geekbang.org/column/intro/100023701?code=UH62EYHR5TS2OkVASp1Of2L7ZZct7NFPKpUTEJnm9mk%3D" target="_blank" rel="noopener">软件工程之美</a><br><a href="https://time.geekbang.org/column/intro/100023901?code=bgH%2FTIsg3pKZlwX9HPqQKAvPpG720JYvAKODduUnwAk%3D" target="_blank" rel="noopener">Java并发编程实战</a><br><a href="https://time.geekbang.org/course/intro/100024001?code=HklrPpc8Ex6TBeuMlW3QgLnfVLCJ4yFViW8yUBrUctw%3D" target="_blank" rel="noopener">Go语言从入门到实战</a><br><a href="https://time.geekbang.org/column/intro/100024501?code=E6GGnvQF98ioVAQStnEBJNAX%2FsX70E6M%2F5PNNcfo3kA%3D" target="_blank" rel="noopener">iOS开发高手课</a><br><a href="https://time.geekbang.org/course/intro/100024601?code=VAdEpp7bePtXY3JRbGO-LSUsnIf79URujsIzL9-zqDg%3D" target="_blank" rel="noopener">Vue开发实战</a><br><a href="https://time.geekbang.org/column/intro/100024701?code=WsgRyzzPFVTSz15FiGf21IJxFz2KDOcASPyhNj8ewrA%3D" target="_blank" rel="noopener">趣谈Linux操作系统</a><br><a href="https://time.geekbang.org/column/intro/100025001?code=4hkO1LVOexCBjQhOZrDteNqTqhlOnvCMkHVP8b5oo2E%3D" target="_blank" rel="noopener">从0开始做增长</a><br><a href="https://time.geekbang.org/column/intro/100025201?code=eEFHavTlD6u4Ic04rCYtlBadNns8eN1S9C4sxy9IWGI%3D" target="_blank" rel="noopener">许式伟的架构课</a><br><a href="https://time.geekbang.org/column/intro/100025301?code=m7%2FYbMTa0SEROOxe--Rp9uaAwS0U6WODgGQvrRyHWxk%3D" target="_blank" rel="noopener">大规模数据处理实战</a><br><a href="https://time.geekbang.org/course/intro/100025901?code=sVGHuTS1La3hnrZdhZtNey70DhCyU7Nd40xhkg5v6Wc%3D" target="_blank" rel="noopener">从0开发一款iOS App</a><br><a href="https://time.geekbang.org/column/intro/100026001?code=KX121zRQmZZXxfxsF0RWzH72H0hIN7i8mXR2WIBTf6o%3D" target="_blank" rel="noopener">深入浅出计算机组成原理</a><br><a href="https://time.geekbang.org/course/intro/100026801?code=NrUCxzz5y0QZUlne%2FvIMAKdvL%2FwlcENGMfJFjaKjNpY%3D" target="_blank" rel="noopener">Web协议详解与抓包实战</a><br><a href="https://time.geekbang.org/column/intro/100026901?code=9vvvlItcI1PzD-DSOyef-aapQfr6G0FA-rVJHjRIJF4%3D" target="_blank" rel="noopener">Python核心技术与实战</a><br><a href="https://time.geekbang.org/column/intro/100027701?code=0hGZdTinLFLwgstuoR1FmL3Uqkt50fzSgNy3BnoJ9Jc%3D" target="_blank" rel="noopener">深入拆解Tomcat &amp; Jetty </a><br><a href="https://time.geekbang.org/course/intro/100027801?code=M0sOANPR-iBS%2FDShojIXk-yTbU%2FidnQgIDcZ7kxxWw4%3D" target="_blank" rel="noopener">零基础学Java</a><br><a href="https://time.geekbang.org/column/intro/100028001?code=5b4Yxjuf4AUuOm8FYXeuvHnsZXD4vzKqN39%2FywmTcW0%3D" target="_blank" rel="noopener">Java性能调优实战</a><br><a href="https://time.geekbang.org/column/intro/100028301?code=TxkzGBF9YC-UAotV6j12DDZgh9TuftDCf7wk82ZC0oA%3D" target="_blank" rel="noopener">OpenResty从入门到实战</a><br><a href="https://time.geekbang.org/column/intro/100029001?code=LlV%2FsDc8Idh3YPtR8cNIVGVLxqnWUEyhSLy2mDNJBOg%3D" target="_blank" rel="noopener">透视HTTP协议</a><br><a href="https://time.geekbang.org/course/intro/100028901?code=mNnyS1r3hwezWnXj4T84%2Ft0x4QUUdHomjd5Pr9dE-18%3D" target="_blank" rel="noopener">玩转webpack</a><br><a href="https://time.geekbang.org/column/intro/100029201?code=JGitqlFZFX2k1o%2FGnSPxeHV9JDnXU2V-rHNkNxhnRD0%3D" target="_blank" rel="noopener">Kafka核心技术与实战</a><br><a href="https://time.geekbang.org/column/intro/100029501?code=7k453d9l-Uew09FlYPMejJVgo9QCEvShcPDv5u7TnHo%3D" target="_blank" rel="noopener">SQL必知必会</a><br><a href="https://time.geekbang.org/course/intro/100029601?code=K%2FIcbxwqWSASXdjqHfXUXg89yeoYf4r26hGQOL7EET0%3D" target="_blank" rel="noopener">Linux实战技能100讲</a><br><a href="https://time.geekbang.org/course/intro/100030501?code=hz-0bxmRdixvkzJ8-1hKQntwN7-ulyCPeu%2Fa3be%2FljA%3D" target="_blank" rel="noopener">Elasticsearch核心技术与实战</a><br><a href="https://time.geekbang.org/column/intro/100030701?code=1WPT93x%2Fu1rKeAdPIqTJLNiXBK67UNoEO0vfdsSxnAQ%3D" target="_blank" rel="noopener">黄勇的OKR实战笔记</a><br><a href="https://time.geekbang.org/column/intro/100031001?code=%2FB5cyVKVodOkUL0e2loM19Zqa9dMMbjFi35I4upTDWA%3D" target="_blank" rel="noopener">Flutter核心技术与实战</a><br><a href="https://time.geekbang.org/course/intro/100031401?code=fvVuNqlbqV037%2FUENGtOmjTrQmIAhmE9YSMDLDv1zCU%3D" target="_blank" rel="noopener">Spring Boot与Kubernetes云原生微服务实践 </a><br><a href="https://time.geekbang.org/column/intro/100031801?code=3u0FVafKXIdR-GOAqVdKxj19CYkQUEpMs6jOop6d6c0%3D" target="_blank" rel="noopener">从0打造音视频直播系统</a><br><a href="https://time.geekbang.org/course/intro/100032201?code=XDoaMAbqBOVPX9v2eveXpg6-isl94HpK-CnEQBHbTgM%3D" target="_blank" rel="noopener">TypeScript开发实战</a><br><a href="https://time.geekbang.org/column/intro/100032301?code=jk1-sOpNBZMmKeRvw-u3pUGEtM5q0Gcc4pI5-YI6ibs%3D" target="_blank" rel="noopener">消息队列高手课</a><br><a href="https://time.geekbang.org/column/intro/100032701?code=CYtmiZ1SZDBa6m5wSI44dPDL1n2EMt0W7C1AC9zXSUQ%3D" target="_blank" rel="noopener">网络编程实战</a><br><a href="https://time.geekbang.org/column/intro/100033601?code=UB-tu79itGhIbUCz7KcBISXs4Ac3NXuvM2JXww2lnPg%3D" target="_blank" rel="noopener">浏览器工作原理与实践</a><br><a href="https://time.geekbang.org/course/intro/100034001?code=Ye3MGeLAZ2wMQlAqxTHzzpPDX5cFQOnTUZpvuNuM%2Fck%3D" target="_blank" rel="noopener">Swift核心技术与实战</a><br><a href="https://time.geekbang.org/column/intro/100034101?code=oc-bW016Y1M1LyFRKDxkFIbdiT99zleeFOG-bKYt5GY%3D" target="_blank" rel="noopener">编译原理之美</a><br><a href="https://time.geekbang.org/course/intro/100034201?code=n7PBZ3ZOaMWalGRS5l0skkiLfO0fopAqnOVeOa2jS7g%3D" target="_blank" rel="noopener">ZooKeeper实战与源码剖析</a><br><a href="https://time.geekbang.org/column/intro/100034501?code=ZSeuIYxzhlfmGCzxkgERC6Lwxaqi9MUpGFbnvpAV1yk%3D" target="_blank" rel="noopener">研发效率破局之道</a><br><a href="https://time.geekbang.org/column/intro/100034901?code=ZdaB7iQfD1pjKTrOIVh4TrIIzegsUPs17ggOPVH4SJg%3D" target="_blank" rel="noopener">即时消息技术剖析与实战</a><br><a href="https://time.geekbang.org/column/intro/100035501?code=BSJ5OMYufzF4d1dVfriW4rPQwA14c4rklEhBS7l-saU%3D" target="_blank" rel="noopener">全栈工程师修炼指南</a><br><a href="https://time.geekbang.org/column/intro/100035801?code=F7zo8wbbNyReMg-3kiJIcqT2pLBYv0YVCeLzBuMn3i4%3D" target="_blank" rel="noopener">高并发系统设计40问</a><br><a href="https://time.geekbang.org/course/intro/100036001?code=GxQ75hjFR6ylbvGFCzgBBkbKFZffHYPz7iMXZd9qV2E%3D" target="_blank" rel="noopener">Node.js开发实战</a><br><a href="https://time.geekbang.org/column/intro/100036401?code=fAAhZQSOjV1b5GejF1LTrhvDtPxDTcxEBiMbZteJKpg%3D" target="_blank" rel="noopener">分布式技术原理与算法解析</a><br><a href="https://time.geekbang.org/column/intro/100036501?code=eyt6YAPomlPA9WmZDJSS8E3RSqs1kCXjz70yf76inRM%3D" target="_blank" rel="noopener">说透中台</a><br><a href="https://time.geekbang.org/column/intro/100036601?code=4GLzwKjJbJUwp9ClSGp6u5EgXbULPGsPuucTUYmzio4%3D" target="_blank" rel="noopener">DevOps实战笔记</a><br><a href="https://time.geekbang.org/course/intro/100036701?code=0YsgPvaabVNXi81Q3mMUHMZvZdtZAr1rZYQAKk3gdcc%3D" target="_blank" rel="noopener">Netty源码剖析与实战</a><br><a href="https://time.geekbang.org/column/intro/100037301?code=FN6myFLAkheL5eBKVe0tqrr5mJ%2FieKyYEWyYZ%2Fc%2FNpE%3D" target="_blank" rel="noopener">DDD实战课</a><br><a href="https://time.geekbang.org/column/intro/100037701?code=GpnwpQihMjThVHdKpkTCSMM3XyzNWRbjS2x2Xpg01%2FQ%3D" target="_blank" rel="noopener">苏杰的产品创新课</a><br><a href="https://time.geekbang.org/course/intro/100038001?code=7eq3g9X9SJcgv-RvkOktHrln2DxNkTr340%2FDmBHdnnY%3D" target="_blank" rel="noopener">移动端自动化测试实战</a><br><a href="https://time.geekbang.org/column/intro/100038501?code=6cxv3ZmdYbghlVfEI3GZWeAOFNa5Jx7-nqOmoJ82MLs%3D" target="_blank" rel="noopener">项目管理实战20讲</a><br><a href="https://time.geekbang.org/column/intro/100039001?code=Mg4lnxzIHUZNYiBS7SyoYMG5nNtHClHUrPJAZKvKNq0%3D" target="_blank" rel="noopener">设计模式之美</a><br><a href="https://time.geekbang.org/column/intro/100039701?code=wxuUS5XgtnOf9HCxMULa5AxgGAH1J6GaNOh8Qo5Zx7U%3D" target="_blank" rel="noopener">JavaScript核心原理解析</a><br><a href="https://time.geekbang.org/course/intro/100040001?code=Red3n8OeOjyKyok053Qf6VhW7CsrrcsYARmxlcuDbKM%3D" target="_blank" rel="noopener">MongoDB高手课</a><br><a href="https://time.geekbang.org/column/intro/100040201?code=SWh-sH0r7KHsGJCJX9gMrntl3QzYdNAgOHgAjTEc9To%3D" target="_blank" rel="noopener">后端技术面试38讲</a><br><a href="https://time.geekbang.org/column/intro/100040501?code=Ojke7Mv6KdCcaaIp86en3%2Fl1CMOwQATURy128l8Spd0%3D" target="_blank" rel="noopener">现代C++实战30讲</a><br><a href="https://time.geekbang.org/column/intro/100041101?code=sa0KCy4-IDO7GRA0IxKLtt3jsgrxHJSZwQTgtpq7SaQ%3D" target="_blank" rel="noopener">性能工程高手课</a><br><a href="https://time.geekbang.org/column/intro/100041701?code=4%2FyXtPnLYuY7kdT04g0u77LsnBbs-gQH3bBLCH9%2F9YI%3D" target="_blank" rel="noopener">安全攻防技能30讲</a><br><a href="https://time.geekbang.org/column/intro/100042501?code=OLFR%2FKfI0jmDnAbJT-KzUFlwcsk9kqM7hLQt3LOqc1k%3D" target="_blank" rel="noopener">性能测试实战30讲</a><br><a href="https://time.geekbang.org/course/intro/100042601?code=IXF0qlFhYksLx6wbY4XBy91BPIZc0EABZ1rZkVpgH5s%3D" target="_blank" rel="noopener">小马哥讲Spring核心编程思想</a><br><a href="https://time.geekbang.org/column/intro/100043001?code=a5QZptcYib8zrkUcngiOVLyBjfxmQg%2FXH98MXZErM1s%3D" target="_blank" rel="noopener">摄影入门课</a><br><a href="https://time.geekbang.org/column/intro/100043901?code=PJ8kBVBE89O7sAA1m11oo0VQymUPazvSkPGynL2WS8I%3D" target="_blank" rel="noopener">人人都能学会的编程入门课</a><br><a href="https://time.geekbang.org/course/intro/100044201?code=BbsvbKj6urN-UBTbFTtF-gmo2LO6ws38VCXk3VZ6T8A%3D" target="_blank" rel="noopener">Electron开发实战</a><br><a href="https://time.geekbang.org/column/intro/100044301?code=PrWOiOAz7e%2FhgKdzACHDAPZr%2FWhJv1E4JaH8PcM694U%3D" target="_blank" rel="noopener">说透敏捷</a><br><a href="https://time.geekbang.org/course/intro/100044601?code=36xecqet8wwB83KI104BRFY4c0eMpSSHcaB9CyDBam8%3D" target="_blank" rel="noopener">.NET Core开发实战</a><br><a href="https://time.geekbang.org/column/intro/100045801?code=sEHNPsw1dUgOlxWOw1uwb%2FKBjL%2F7FyHMXP-wJacbV20%3D" target="_blank" rel="noopener">接口测试入门课</a><br><a href="https://time.geekbang.org/column/intro/100046101?code=HNJ9ulfLkKMLE5vfJPrOWAccVKRl05ceq76dQR5paUU%3D" target="_blank" rel="noopener">分布式协议与算法实战</a><br><a href="https://time.geekbang.org/column/intro/100046201?code=cLmzucYTjk%2F6E80Q6dwjmaTV%2FEKoZ4lcqK2qmJh4skM%3D" target="_blank" rel="noopener">RPC实战与核心原理</a><br><a href="https://time.geekbang.org/column/intro/100046301?code=ru4Uvlw%2F6Zh2to6mC9QZYvBR8FtZQZwo6mYVfrA2tfY%3D" target="_blank" rel="noopener">架构实战案例解析</a><br><a href="https://time.geekbang.org/course/intro/100046401?code=pm4ZfscJLo8ymnTzK1EaQneDuFEzvboViHUgn61MHi8%3D" target="_blank" rel="noopener">NLP实战高手课</a><br><a href="https://time.geekbang.org/column/intro/100046801?code=5RVtb7YCYBly0ZJ9FnO1%2FDpJ3A4%2FthVerRFwq7QqZdk%3D" target="_blank" rel="noopener">后端存储实战课</a><br><a href="https://time.geekbang.org/column/intro/100046901?code=d5T7ez9UPsIr9XQdT1sRpjaB84aJ%2FOnTeBwT0h9HqAA%3D" target="_blank" rel="noopener">深入浅出云计算</a><br><a href="https://time.geekbang.org/column/intro/100047701?code=PAGlUdSlKROE%2FihMHH7AqO0QX5zzF2KIjkH9xL8KUFs%3D" target="_blank" rel="noopener">Java业务开发常见错误100例</a><br><a href="https://time.geekbang.org/column/intro/100048001?code=Ie0scYPwY%2FsH2he%2FKjocF3yd1iIdhw8Sp%2FUaCFFbmKM%3D" target="_blank" rel="noopener">图解 Google V8</a><br><a href="https://time.geekbang.org/column/intro/100048201?code=yxZpyZ7a-JcP%2F4bp43ZgCvM-hGDPlX6VyFAUII1Hg%2Fc%3D" target="_blank" rel="noopener">SRE实战手册</a><br><a href="https://time.geekbang.org/column/intro/100048401?code=wjUDBTAGgvSGAHtkRtytiqZXfVDrMu798%2FOKvQPTvD8%3D" target="_blank" rel="noopener">检索技术核心20讲</a><br><a href="https://time.geekbang.org/column/intro/100049101?code=QDyA2WGAUrZ2hL979pBNROLjFhoWFeehkvRbtXjaufE%3D" target="_blank" rel="noopener">数据中台实战课</a><br><a href="https://time.geekbang.org/course/intro/100049401?code=AaPkCDsX3LOq7s5mvR5lgP%2FcitXC3IOIc5UKrcnjZk0%3D" target="_blank" rel="noopener">Service Mesh实战</a><br><a href="https://time.geekbang.org/column/intro/100050101?code=8i-RNj-4bV6zVv1R12UG2BV9IXkdJTv3Nt1fyI7wKfI%3D" target="_blank" rel="noopener">Kafka核心源码解读</a><br><a href="https://time.geekbang.org/column/intro/100050201?code=1aQCOFTpkDtgqP8cYO4CrtCr9mblIggYmpo81Ld7P5g%3D" target="_blank" rel="noopener">Serverless入门课</a><br><a href="https://time.geekbang.org/column/intro/100050701?code=HxNfIQTb-WAO741IbgvrlHpeVVOYAgtV5ymGiItPL%2F4%3D" target="_blank" rel="noopener">视觉笔记入门课</a><br><a href="https://time.geekbang.org/course/intro/100051101?code=ibn3nVKM-K1IXOOzBEYB2K4ktGLrTpDQG1DKr7EPV5s%3D" target="_blank" rel="noopener">分布式缓存高手课</a><br><a href="https://time.geekbang.org/column/intro/100051201?code=HB406ReCyIfBoT52Cz2dxY52P4ykhGPuoipW9Fx2khQ%3D" target="_blank" rel="noopener">系统性能调优必知必会</a><br><a href="https://time.geekbang.org/column/intro/100051801?code=KQ75vJUoYL-N-2xC8nK1ycOj0rjGCnepSd81qFHP77c%3D" target="_blank" rel="noopener">罗剑锋的C++实战笔记</a><br><a href="https://time.geekbang.org/column/intro/100051901?code=bMpkXZMCyfca7DZQfZOb-ddG%2FG94keyEAGbWhcM0PBc%3D" target="_blank" rel="noopener">互联网人的英语私教课</a><br><a href="https://time.geekbang.org/column/intro/100052201?code=3LaAV0vy6uzhLHBKVynGLx-%2FgoiqkzeBaFNcmdh2-8E%3D" target="_blank" rel="noopener">职场求生攻略</a><br><a href="https://time.geekbang.org/course/intro/100052401?code=Vk-C8KFvGxVgjh5QY5isB5eNuinPjXh34%2Fh1TuiZu84%3D" target="_blank" rel="noopener">微信小程序全栈开发实战</a><br><a href="https://time.geekbang.org/column/intro/100052601?code=8U26si12TFMuTS--iFnfdP-H0gcj7%2F0lvMvvbVqIWkI%3D" target="_blank" rel="noopener">软件设计之美</a><br><a href="https://time.geekbang.org/column/intro/100052801?code=TUqvXmasBpj4zqcL802EREam6AAdJ4Ohlb2o39TFW9I%3D" target="_blank" rel="noopener">编译原理实战课</a><br><a href="https://time.geekbang.org/course/intro/100053201?code=zSXfLKVdAqEorIuLftLgoAQ8rtsnBhCO5O1P8IitJlo%3D" target="_blank" rel="noopener">TensorFlow 2项目进阶实战</a><br><a href="https://time.geekbang.org/column/intro/100053301?code=eywLK5E26J2TOXVcsCR-qq%2F0bn2W17O1WmoTP09713c%3D" target="_blank" rel="noopener">正则表达式入门课</a><br><a href="https://time.geekbang.org/course/intro/100053601?code=k4PnmRn3YKnPmEBiS0oqi2r9u4rbdXj6GS72EQEX%2FsU%3D" target="_blank" rel="noopener">分布式系统案例课</a><br><a href="https://time.geekbang.org/column/intro/100053801?code=-xMC3e6yyud4yhIox1cnKhbDKdM8qnah7lChDGBBkSM%3D" target="_blank" rel="noopener">跟月影学可视化</a><br><a href="https://time.geekbang.org/column/intro/100053901?code=7qoJ9x3ekHonUw7oNFEfy--2Oswn3pdRI-7BnGZyAvU%3D" target="_blank" rel="noopener">OAuth 2.0实战课</a><br><a href="https://time.geekbang.org/course/intro/100055001?code=VO1Gj7EJtuqhyNG%2Ff%2FWDc7uLRWInigCA5IiLt3lpjnI%3D" target="_blank" rel="noopener">Web安全攻防实战</a><br><a href="https://time.geekbang.org/course/intro/100055601?code=HbgvR17E5bo9Lg2960RHCGQZh1OpUhzsj%2Fq01SmQCZA%3D" target="_blank" rel="noopener">Selenium自动化测试实战</a><br><a href="https://time.geekbang.org/column/intro/100055801?code=QN1Xhix7BEdma2RsNytHG5GtPGd5JZNeOr%2F2xvgaIUc%3D" target="_blank" rel="noopener">Vim 实用技巧必知必会</a><br><a href="https://time.geekbang.org/column/intro/100056201?code=%2Fedwj87W-F7KoJavHz0VovdmwacnvQkoSn7uVeADXbQ%3D" target="_blank" rel="noopener">如何看懂一幅画</a></p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">结束福利</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">开源实战利用 k8s 作微服务的架构设计代码：</p><pre class="custom" data-tool="mdnice编辑器" style="margin-top: 10px; margin-bottom: 10px; border-radius: 5px; box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="display: block; background: url(https://imgkr.cn-bj.ufileos.com/97e4eed2-a992-4976-acf0-ccb6fb34d308.png); height: 30px; width: 100%; background-size: 40px; background-repeat: no-repeat; background-color: #282c34; margin-bottom: -7px; border-radius: 5px; background-position: 10px 10px;"></span><code class="hljs" style="overflow-x: auto; padding: 16px; color: #abb2bf; display: -webkit-box; font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; font-size: 12px; -webkit-overflow-scrolling: touch; padding-top: 15px; background: #282c34; border-radius: 5px;">https://gitee.com/damon_one/spring-cloud-k8shttps://gitee.com/damon_one/spring-cloud-oauth2</code></pre><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎大家 star，多多指教。</p><br data-tool="mdnice编辑器"><h4 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; padding: 0px; font-weight: bold; color: black; font-size: 18px;"><span class="prefix" style="display: none;"></span><span class="content">关于作者</span><span class="suffix" style="display: none;"></span></h4><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">  <em style="font-style: italic; color: black;">笔名：Damon，技术爱好者，长期从事 Java 开发、Spring Cloud 的微服务架构设计，以及结合 docker、k8s 做微服务容器化，自动化部署等一站式项目部署、落地。Go 语言学习，k8s 研究，边缘计算框架 KubeEdge 等。公众号 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">程序猿Damon</code> 发起人。个人微信 <code style="font-size: 14px; word-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0 2px; background-color: rgba(27,31,35,.05); font-family: Operator Mono, Consolas, Monaco, Menlo, monospace; word-break: break-all; color: rgb(239, 112, 96);">MrNull008</code>，个人网站：<a class="nav-item-link" target="_blank" href="http://www.damon8.cn" style="text-decoration: none" title="">程序猿Damon | 微服务 | 容器化 | 自动化</a>，欢迎來撩。</em></p><br data-tool="mdnice编辑器"><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://www.infoq.cn/profile/1905020/following/user" title="InfoQ">InfoQ</a></p><p data-tool="mdnice编辑器" style="font-size: 16px; padding-top: 8px; padding-bottom: 8px; margin: 0; line-height: 26px; color: black;">欢迎关注：<a class="nav-item-link" target="_blank" href="https://cloud.tencent.com/developer/column/invite/533b1afb" title="">腾讯自媒体专栏</a></p><br><h2 data-tool="mdnice编辑器" style="margin-top: 30px; margin-bottom: 15px; font-weight: bold; color: black; font-size: 22px;"><span class="prefix" style="display: none;"></span><span class="content">欢迎关注</span><span class="suffix"></span></h2><p><img src="https://static001.geekbang.org/infoq/38/385163791aa296c4cc23be10afa5631d.jpeg" alt="公号：程序猿Damon"></p><p><img src="https://static001.geekbang.org/infoq/86/860561234baac42a49dac2ea24239882.jpeg" alt="公号：damon8"></p><p><img src="https://static001.geekbang.org/infoq/31/31b11ee840215b57487aa0269453e572.jpeg" alt="公号：天山六路折梅手"></p><br><script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- Unit one --><p><ins class="adsbygoogle"     style="display:inline-block;text-align:center;width:880px;height:150px"     data-ad-client="ca-pub-1354758384344627"     data-ad-slot="8964778819"></ins></p><script>    (adsbygoogle = window.adsbygoogle || []).push({});</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
